shadow$provide.module$node_modules$$babylonjs$core$Materials$materialDefines=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.MaterialDefines=void 0;class MaterialDefines{constructor(externalProperties){this._keys=[];this._areLightsDirty=this._isDirty=!0;this._areLightsDisposed=!1;this._areImageProcessingDirty=this._arePrePassDirty=this._areMiscDirty=this._areFresnelDirty=this._areTexturesDirty=this._areAttributesDirty=!0;this._needUVs=this._needNormals=
this._uvs=this._normals=!1;if(this._externalProperties=externalProperties)for(const prop in externalProperties)Object.prototype.hasOwnProperty.call(externalProperties,prop)&&this._setDefaultValue(prop)}get isDirty(){return this._isDirty}markAsProcessed(){this._areImageProcessingDirty=this._arePrePassDirty=this._areMiscDirty=this._areLightsDisposed=this._areLightsDirty=this._areFresnelDirty=this._areTexturesDirty=this._areAttributesDirty=this._isDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areMiscDirty=
this._areFresnelDirty=this._areLightsDirty=this._areAttributesDirty=this._areTexturesDirty=!0;this._arePrePassDirty=!1;this._isDirty=this._areImageProcessingDirty=!0}markAsImageProcessingDirty(){this._isDirty=this._areImageProcessingDirty=!0}markAsLightDirty(disposed=!1){this._areLightsDirty=!0;this._areLightsDisposed=this._areLightsDisposed||disposed;this._isDirty=!0}markAsAttributesDirty(){this._isDirty=this._areAttributesDirty=!0}markAsTexturesDirty(){this._isDirty=this._areTexturesDirty=!0}markAsFresnelDirty(){this._isDirty=
this._areFresnelDirty=!0}markAsMiscDirty(){this._isDirty=this._areMiscDirty=!0}markAsPrePassDirty(){this._isDirty=this._arePrePassDirty=!0}rebuild(){this._keys.length=0;for(const key of Object.keys(this))"_"!==key[0]&&this._keys.push(key);if(this._externalProperties)for(const name in this._externalProperties)-1===this._keys.indexOf(name)&&this._keys.push(name)}isEqual(other){if(this._keys.length!==other._keys.length)return!1;for(let index=0;index<this._keys.length;index++){const prop=this._keys[index];
if(this[prop]!==other[prop])return!1}return!0}cloneTo(other){this._keys.length!==other._keys.length&&(other._keys=this._keys.slice(0));for(let index=0;index<this._keys.length;index++){const prop=this._keys[index];other[prop]=this[prop]}}reset(){this._keys.forEach(prop=>this._setDefaultValue(prop))}_setDefaultValue(prop){var _a,_b,_c,_d,_e;const type=null!==(_c=null===(_b=null===(_a=this._externalProperties)||void 0===_a?void 0:_a[prop])||void 0===_b?void 0:_b.type)&&void 0!==_c?_c:typeof this[prop];
_a=null===(_e=null===(_d=this._externalProperties)||void 0===_d?void 0:_d[prop])||void 0===_e?void 0:_e.default;switch(type){case "number":this[prop]=null!==_a&&void 0!==_a?_a:0;break;case "string":this[prop]=null!==_a&&void 0!==_a?_a:"";break;default:this[prop]=null!==_a&&void 0!==_a?_a:!1}}toString(){let result="";for(let index=0;index<this._keys.length;index++){const prop=this._keys[index],value=this[prop];switch(typeof value){case "number":case "string":result+="#define "+prop+" "+value+"\n";
break;default:value&&(result+="#define "+prop+"\n")}}return result}}exports.MaterialDefines=MaterialDefines}
//# sourceMappingURL=module$node_modules$$babylonjs$core$Materials$materialDefines.js.map
