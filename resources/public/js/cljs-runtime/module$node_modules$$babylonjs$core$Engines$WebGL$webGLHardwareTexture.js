shadow$provide.module$node_modules$$babylonjs$core$Engines$WebGL$webGLHardwareTexture=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.WebGLHardwareTexture=void 0;class WebGLHardwareTexture{get underlyingResource(){return this._webGLTexture}constructor(existingTexture=null,context){this._MSAARenderBuffers=null;this._context=context;if(!existingTexture&&(existingTexture=context.createTexture(),!existingTexture))throw Error("Unable to create webGL texture");
this.set(existingTexture)}setUsage(){}set(hardwareTexture){this._webGLTexture=hardwareTexture}reset(){this._MSAARenderBuffers=this._webGLTexture=null}addMSAARenderBuffer(buffer){this._MSAARenderBuffers||(this._MSAARenderBuffers=[]);this._MSAARenderBuffers.push(buffer)}releaseMSAARenderBuffers(){if(this._MSAARenderBuffers){for(const buffer of this._MSAARenderBuffers)this._context.deleteRenderbuffer(buffer);this._MSAARenderBuffers=null}}release(){this.releaseMSAARenderBuffers();this._webGLTexture&&
this._context.deleteTexture(this._webGLTexture);this.reset()}}exports.WebGLHardwareTexture=WebGLHardwareTexture}
//# sourceMappingURL=module$node_modules$$babylonjs$core$Engines$WebGL$webGLHardwareTexture.js.map
