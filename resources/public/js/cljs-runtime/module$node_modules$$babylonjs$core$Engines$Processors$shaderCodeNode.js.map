{
"version":3,
"file":"module$node_modules$$babylonjs$core$Engines$Processors$shaderCodeNode.js",
"lineCount":7,
"mappings":"AAAAA,cAAA,CAAA,qEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,cAAR,CAAyB,IAAK,EAK9B,MAAMA,eAAN,CACEC,WAAW,EAAG,CACZ,IAAKC,CAAAA,QAAL,CAAgB,EADJ,CAKdC,OAAO,CAACC,aAAD,CAAgB,CACrB,MAAO,CAAA,CADc,CAIvBC,OAAO,CAACD,aAAD,CAAgBE,OAAhB,CAAyB,CAAA,IAC1BC,EAD0B,CACtBC,EADsB,CAClBC,EADkB,CACdC,EADc,CACVC,EADU,CACNC,EADM,CACFC,EAE5B,KAAIC,OAAS,EAEb,IAAI,IAAKC,CAAAA,IAAT,CAAe,CACb,IAAIhB,MAAQ,IAAKgB,CAAAA,IACjB,OAAMC,UAAYV,OAAQU,CAAAA,SAE1B,IAAIA,SAAJ,CAAe,CAETA,SAAUC,CAAAA,aAAd,GACElB,KADF,CACUiB,SAAUC,CAAAA,aAAV,CAAwBlB,KAAxB;AAA+BO,OAAQY,CAAAA,UAAvC,CAAmDZ,OAAQa,CAAAA,iBAA3D,CADV,CAIA,OAAMC,iBAAoH,IAAjG,IAACZ,EAAD,CAAmC,IAA7B,IAACD,EAAD,CAAMD,OAAQU,CAAAA,SAAd,GAA4C,IAAK,EAAjD,GAAqCT,EAArC,CAAqD,IAAK,EAA1D,CAA8DA,EAAGc,CAAAA,oBAAvE,GAAgH,IAAK,EAArH,GAAyGb,EAAzG,CAAyHA,EAAzH,CA7BGc,WA8BtBC,GAAAA,CAAiBjB,OAAQY,CAAAA,UAAR,GAAoD,IAA7B,IAACT,EAAD,CAAMH,OAAQU,CAAAA,SAAd,GAA4C,IAAK,EAAjD,GAAqCP,EAArC,CAAqD,CAArD,CAA8DA,EAAGe,CAAAA,0BAAxF,EAAmJ,IAA7B,IAACd,EAAD,CAAMJ,OAAQU,CAAAA,SAAd,GAA4C,IAAK,EAAjD,GAAqCN,EAArC,CAAqD,IAAK,EAA1D,CAA8DA,EAAGc,CAAAA,0BAAvL,CAAoN,CAAClB,OAAQY,CAAAA,UAAT,GAAqD,IAA7B,IAACP,EAAD,CAAML,OAAQU,CAAAA,SAAd,GAA4C,IAAK,EAAjD,GAAqCL,EAArC,CAAqD,CAArD,CAA8DA,EAAGc,CAAAA,wBAAzF,EAAkJ,IAA7B,IAACb,EAAD,CAAMN,OAAQU,CAAAA,SAAd,GAA4C,IAAK,EAAjD,GAAqCJ,EAArC;AAAqD,IAAK,EAA1D,CAA8DA,EAAGa,CAAAA,wBAAtL,CA7BjNC,SA+BtB,EAACpB,OAAQY,CAAAA,UAAb,EAA2BF,SAAUW,CAAAA,kBAArC,EAA2D,IAAKZ,CAAAA,IAAKa,CAAAA,UAAV,CAAqBR,gBAArB,CAA3D,CACErB,KADF,CACUiB,SAAUW,CAAAA,kBAAV,CAA6B,IAAKZ,CAAAA,IAAlC,CAAwCX,aAAxC,CAAuDE,OAAQa,CAAAA,iBAA/D,CADV,CAEWH,SAAUa,CAAAA,gBAAd,IAAsE,IAAlC,IAAChB,EAAD,CAAMG,SAAUc,CAAAA,YAAhB,GAAiD,IAAK,EAAtD,GAA0CjB,EAA1C,CAA0D,CAA1D,CAAmEA,EAAGkB,CAAAA,IAAH,CAAQf,SAAR,CAAmB,IAAKD,CAAAA,IAAxB,CAA8BT,OAAQY,CAAAA,UAAtC,CAAvG,GAA6J,CAACF,SAAUc,CAAAA,YAAxK,EAAwL,IAAKf,CAAAA,IAAKa,CAAAA,UAAV,CAAqBL,EAArB,CAAxL,EACLxB,KADK,CACGiB,SAAUa,CAAAA,gBAAV,CAA2B,IAAKd,CAAAA,IAAhC,CAAsCT,OAAQY,CAAAA,UAA9C,CAA0Dd,aAA1D,CAAyEE,OAAQa,CAAAA,iBAAjF,CADH;AAEIH,SAAUgB,CAAAA,gBAAd,EAAkChB,SAAUiB,CAAAA,aAA5C,EAA6DjB,SAAUiB,CAAAA,aAAcC,CAAAA,IAAxB,CAA6B,IAAKnB,CAAAA,IAAlC,CAA7D,CACAT,OAAQ6B,CAAAA,qCADR,GAEHpC,KAFG,CAEKiB,SAAUgB,CAAAA,gBAAV,CAA2B,IAAKjB,CAAAA,IAAhC,CAAsCT,OAAQY,CAAAA,UAA9C,CAA0Dd,aAA1D,CAAyEE,OAAQa,CAAAA,iBAAjF,CAFL,EAIIH,SAAUoB,CAAAA,sBAAd,EAAwCpB,SAAUqB,CAAAA,mBAAlD,EAAyErB,SAAUqB,CAAAA,mBAAoBH,CAAAA,IAA9B,CAAmC,IAAKnB,CAAAA,IAAxC,CAAzE,CACAT,OAAQ6B,CAAAA,qCADR,GAEHpC,KACA,CADQiB,SAAUoB,CAAAA,sBAAV,CAAiC,IAAKrB,CAAAA,IAAtC,CAA4CT,OAAQY,CAAAA,UAApD,CAAgEZ,OAAQa,CAAAA,iBAAxE,CACR,CAAAb,OAAQ6B,CAAAA,qCAAR;AAAgD,CAAA,CAH7C,EAKInB,SAAUsB,CAAAA,gBAAd,EAAkCtB,SAAUuB,CAAAA,aAA5C,EAA6DvB,SAAUuB,CAAAA,aAAcL,CAAAA,IAAxB,CAA6B,IAAKnB,CAAAA,IAAlC,CAA7D,CACLhB,KADK,CACGiB,SAAUsB,CAAAA,gBAAV,CAA2B,IAAKvB,CAAAA,IAAhC,CAAsCT,OAAQY,CAAAA,UAA9C,CAA0Dd,aAA1D,CAAyEE,OAAQa,CAAAA,iBAAjF,CADH,EAEKH,SAAUgB,CAAAA,gBAFf,EAEmChB,SAAUoB,CAAAA,sBAF7C,GAEwE,IAAKrB,CAAAA,IAAKa,CAAAA,UAAV,CAAqB,SAArB,CAFxE,EAE2G,CAACtB,OAAQ6B,CAAAA,qCAFpH,GAGSK,wDAEJN,CAAAA,IAAN,CAAW,IAAKnB,CAAAA,IAAhB,CAAJ,CAEMC,SAAUgB,CAAAA,gBAFhB,GAGIjC,KAHJ,CAGYiB,SAAUgB,CAAAA,gBAAV,CAA2B,IAAKjB,CAAAA,IAAhC,CAAsCT,OAAQY,CAAAA,UAA9C;AAA0Dd,aAA1D,CAAyEE,OAAQa,CAAAA,iBAAjF,CAHZ,EAOMH,SAAUoB,CAAAA,sBAPhB,GAQIrC,KACA,CADQiB,SAAUoB,CAAAA,sBAAV,CAAiC,IAAKrB,CAAAA,IAAtC,CAA4CT,OAAQY,CAAAA,UAApD,CAAgEZ,OAAQa,CAAAA,iBAAxE,CACR,CAAAb,OAAQ6B,CAAAA,qCAAR,CAAgD,CAAA,CATpD,CALK,CAmBH7B,QAAQ6B,CAAAA,qCAAZ,EAAgF,CAAC,CAAjF,GAAqD,IAAKpB,CAAAA,IAAK0B,CAAAA,OAAV,CAAkB,GAAlB,CAArD,GACEnC,OAAQ6B,CAAAA,qCAER,CAFgD,CAAA,CAEhD,CAAInB,SAAU0B,CAAAA,2BAAd,GACE3C,KADF,CACUiB,SAAU0B,CAAAA,2BAAV,CAAsC,IAAK3B,CAAAA,IAA3C,CAAiDT,OAAQY,CAAAA,UAAzD,CAAqEZ,OAAQa,CAAAA,iBAA7E,CADV,CAHF,CAzCa,CAkDfL,MAAA,EAAUf,KAAV;AAAkB,MAtDL,CAyDf,IAAKG,CAAAA,QAASyC,CAAAA,OAAd,CAAsBC,KAAA,EAAS,CAC7B9B,MAAA,EAAU8B,KAAMvC,CAAAA,OAAN,CAAcD,aAAd,CAA6BE,OAA7B,CADmB,CAA/B,CAII,KAAKuC,CAAAA,mBAAT,GACEzC,aAAA,CAAc,IAAKyC,CAAAA,mBAAnB,CADF,CAC4C,IAAKC,CAAAA,qBADjD,EAC0E,MAD1E,CAIA,OAAOhC,OAtEuB,CAVlC,CAqFAlB,OAAQI,CAAAA,cAAR,CAAyBA,cAhGyG;",
"sources":["node_modules/@babylonjs/core/Engines/Processors/shaderCodeNode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Engines$Processors$shaderCodeNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShaderCodeNode = void 0;\nconst defaultAttributeKeywordName = \"attribute\";\nconst defaultVaryingKeywordName = \"varying\";\n/** @internal */\n\nclass ShaderCodeNode {\n  constructor() {\n    this.children = [];\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  isValid(preprocessors) {\n    return true;\n  }\n\n  process(preprocessors, options) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    let result = \"\";\n\n    if (this.line) {\n      let value = this.line;\n      const processor = options.processor;\n\n      if (processor) {\n        // This must be done before other replacements to avoid mistakenly changing something that was already changed.\n        if (processor.lineProcessor) {\n          value = processor.lineProcessor(value, options.isFragment, options.processingContext);\n        }\n\n        const attributeKeyword = (_b = (_a = options.processor) === null || _a === void 0 ? void 0 : _a.attributeKeywordName) !== null && _b !== void 0 ? _b : defaultAttributeKeywordName;\n        const varyingKeyword = options.isFragment && ((_c = options.processor) === null || _c === void 0 ? void 0 : _c.varyingFragmentKeywordName) ? (_d = options.processor) === null || _d === void 0 ? void 0 : _d.varyingFragmentKeywordName : !options.isFragment && ((_e = options.processor) === null || _e === void 0 ? void 0 : _e.varyingVertexKeywordName) ? (_f = options.processor) === null || _f === void 0 ? void 0 : _f.varyingVertexKeywordName : defaultVaryingKeywordName;\n\n        if (!options.isFragment && processor.attributeProcessor && this.line.startsWith(attributeKeyword)) {\n          value = processor.attributeProcessor(this.line, preprocessors, options.processingContext);\n        } else if (processor.varyingProcessor && (((_g = processor.varyingCheck) === null || _g === void 0 ? void 0 : _g.call(processor, this.line, options.isFragment)) || !processor.varyingCheck && this.line.startsWith(varyingKeyword))) {\n          value = processor.varyingProcessor(this.line, options.isFragment, preprocessors, options.processingContext);\n        } else if (processor.uniformProcessor && processor.uniformRegexp && processor.uniformRegexp.test(this.line)) {\n          if (!options.lookForClosingBracketForUniformBuffer) {\n            value = processor.uniformProcessor(this.line, options.isFragment, preprocessors, options.processingContext);\n          }\n        } else if (processor.uniformBufferProcessor && processor.uniformBufferRegexp && processor.uniformBufferRegexp.test(this.line)) {\n          if (!options.lookForClosingBracketForUniformBuffer) {\n            value = processor.uniformBufferProcessor(this.line, options.isFragment, options.processingContext);\n            options.lookForClosingBracketForUniformBuffer = true;\n          }\n        } else if (processor.textureProcessor && processor.textureRegexp && processor.textureRegexp.test(this.line)) {\n          value = processor.textureProcessor(this.line, options.isFragment, preprocessors, options.processingContext);\n        } else if ((processor.uniformProcessor || processor.uniformBufferProcessor) && this.line.startsWith(\"uniform\") && !options.lookForClosingBracketForUniformBuffer) {\n          const regex = /uniform\\s+(?:(?:highp)?|(?:lowp)?)\\s*(\\S+)\\s+(\\S+)\\s*;/;\n\n          if (regex.test(this.line)) {\n            // uniform\n            if (processor.uniformProcessor) {\n              value = processor.uniformProcessor(this.line, options.isFragment, preprocessors, options.processingContext);\n            }\n          } else {\n            // Uniform buffer\n            if (processor.uniformBufferProcessor) {\n              value = processor.uniformBufferProcessor(this.line, options.isFragment, options.processingContext);\n              options.lookForClosingBracketForUniformBuffer = true;\n            }\n          }\n        }\n\n        if (options.lookForClosingBracketForUniformBuffer && this.line.indexOf(\"}\") !== -1) {\n          options.lookForClosingBracketForUniformBuffer = false;\n\n          if (processor.endOfUniformBufferProcessor) {\n            value = processor.endOfUniformBufferProcessor(this.line, options.isFragment, options.processingContext);\n          }\n        }\n      }\n\n      result += value + \"\\r\\n\";\n    }\n\n    this.children.forEach(child => {\n      result += child.process(preprocessors, options);\n    });\n\n    if (this.additionalDefineKey) {\n      preprocessors[this.additionalDefineKey] = this.additionalDefineValue || \"true\";\n    }\n\n    return result;\n  }\n\n}\n\nexports.ShaderCodeNode = ShaderCodeNode;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","ShaderCodeNode","constructor","children","isValid","preprocessors","process","options","_a","_b","_c","_d","_e","_f","_g","result","line","processor","lineProcessor","isFragment","processingContext","attributeKeyword","attributeKeywordName","defaultAttributeKeywordName","varyingKeyword","varyingFragmentKeywordName","varyingVertexKeywordName","defaultVaryingKeywordName","attributeProcessor","startsWith","varyingProcessor","varyingCheck","call","uniformProcessor","uniformRegexp","test","lookForClosingBracketForUniformBuffer","uniformBufferProcessor","uniformBufferRegexp","textureProcessor","textureRegexp","regex","indexOf","endOfUniformBufferProcessor","forEach","child","additionalDefineKey","additionalDefineValue"]
}
