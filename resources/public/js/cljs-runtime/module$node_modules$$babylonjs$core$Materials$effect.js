shadow$provide.module$node_modules$$babylonjs$core$Materials$effect=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Effect=void 0;var _observable=require("module$node_modules$$babylonjs$core$Misc$observable"),_domManagement=require("module$node_modules$$babylonjs$core$Misc$domManagement"),_logger=require("module$node_modules$$babylonjs$core$Misc$logger"),_shaderProcessor=require("module$node_modules$$babylonjs$core$Engines$Processors$shaderProcessor"),
_shaderStore=require("module$node_modules$$babylonjs$core$Engines$shaderStore"),_shaderLanguage=require("module$node_modules$$babylonjs$core$Materials$shaderLanguage");class Effect{static get ShadersRepository(){return _shaderStore.ShaderStore.ShadersRepository}static set ShadersRepository(repo){_shaderStore.ShaderStore.ShadersRepository=repo}get onBindObservable(){this._onBindObservable||(this._onBindObservable=new _observable.Observable);return this._onBindObservable}constructor(baseName,attributesNamesOrOptions,
uniformsNamesOrEngine,samplers=null,engine,defines=null,fallbacks=null,onCompiled=null,onError=null,indexParameters,key="",shaderLanguage=_shaderLanguage.ShaderLanguage.GLSL){var _a,_b,_c;this.name=null;this.defines="";this.onBind=this.onError=this.onCompiled=null;this.uniqueId=0;this.onCompileObservable=new _observable.Observable;this.onErrorObservable=new _observable.Observable;this._onBindObservable=null;this._forceRebindOnNextCall=this._wasPreviouslyReady=!1;this._wasPreviouslyUsingInstances=
null;this._bonesComputationForcedToCPU=this._isDisposed=!1;this._uniformBuffersNames={};this._multiTarget=!1;this._samplers={};this._isReady=!1;this._compilationError="";this._allFallbacksProcessed=!1;this._uniforms={};this._key="";this._fallbacks=null;this._fragmentSourceCodeOverride=this._vertexSourceCodeOverride="";this._pipelineContext=this._transformFeedbackVaryings=null;this._rawFragmentSourceCode=this._rawVertexSourceCode=this._fragmentSourceCodeBeforeMigration=this._vertexSourceCodeBeforeMigration=
this._fragmentSourceCode=this._vertexSourceCode="";this.name=baseName;this._key=key;key=void 0;let processFinalCode=null;if(attributesNamesOrOptions.attributes){this._engine=uniformsNamesOrEngine;this._attributesNames=attributesNamesOrOptions.attributes;this._uniformsNames=attributesNamesOrOptions.uniformsNames.concat(attributesNamesOrOptions.samplers);this._samplerList=attributesNamesOrOptions.samplers.slice();this.defines=attributesNamesOrOptions.defines;this.onError=attributesNamesOrOptions.onError;
this.onCompiled=attributesNamesOrOptions.onCompiled;this._fallbacks=attributesNamesOrOptions.fallbacks;this._indexParameters=attributesNamesOrOptions.indexParameters;this._transformFeedbackVaryings=attributesNamesOrOptions.transformFeedbackVaryings||null;this._multiTarget=!!attributesNamesOrOptions.multiTarget;this._shaderLanguage=null!==(_a=attributesNamesOrOptions.shaderLanguage)&&void 0!==_a?_a:_shaderLanguage.ShaderLanguage.GLSL;if(attributesNamesOrOptions.uniformBuffersNames)for(this._uniformBuffersNamesList=
attributesNamesOrOptions.uniformBuffersNames.slice(),key=0;key<attributesNamesOrOptions.uniformBuffersNames.length;key++)this._uniformBuffersNames[attributesNamesOrOptions.uniformBuffersNames[key]]=key;processFinalCode=null!==(_b=attributesNamesOrOptions.processFinalCode)&&void 0!==_b?_b:null;key=null!==(_c=attributesNamesOrOptions.processCodeAfterIncludes)&&void 0!==_c?_c:void 0}else this._engine=engine,this.defines=null==defines?"":defines,this._uniformsNames=uniformsNamesOrEngine.concat(samplers),
this._samplerList=samplers?samplers.slice():[],this._attributesNames=attributesNamesOrOptions,this._uniformBuffersNamesList=[],this._shaderLanguage=shaderLanguage,this.onError=onError,this.onCompiled=onCompiled,this._indexParameters=indexParameters,this._fallbacks=fallbacks;this._attributeLocationByName={};this.uniqueId=Effect._UniqueIdSeed++;_b=(0,_domManagement.IsWindowObjectExist)()?this._engine.getHostDocument():null;baseName.vertexSource?attributesNamesOrOptions="source:"+baseName.vertexSource:
baseName.vertexElement?(attributesNamesOrOptions=_b?_b.getElementById(baseName.vertexElement):null,attributesNamesOrOptions||(attributesNamesOrOptions=baseName.vertexElement)):attributesNamesOrOptions=baseName.vertex||baseName;baseName.fragmentSource?_b="source:"+baseName.fragmentSource:baseName.fragmentElement?(_b=_b?_b.getElementById(baseName.fragmentElement):null,_b||(_b=baseName.fragmentElement)):_b=baseName.fragment||baseName;this._processingContext=this._engine._getShaderProcessingContext(this._shaderLanguage);
let processorOptions={defines:this.defines.split("\n"),indexParameters:this._indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:this._engine._getShaderProcessor(this._shaderLanguage),supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:_shaderStore.ShaderStore.GetShadersRepository(this._shaderLanguage),includesShadersStore:_shaderStore.ShaderStore.GetIncludesShadersStore(this._shaderLanguage),version:(100*this._engine.version).toString(),
platformName:this._engine.shaderPlatformName,processingContext:this._processingContext,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:key};const shaderCodes=[void 0,void 0],shadersLoaded=()=>{if(shaderCodes[0]&&shaderCodes[1]){processorOptions.isFragment=!0;const [migratedVertexCode,fragmentCode]=shaderCodes;_shaderProcessor.ShaderProcessor.Process(fragmentCode,processorOptions,(migratedFragmentCode,codeBeforeMigration)=>
{this._fragmentSourceCodeBeforeMigration=codeBeforeMigration;processFinalCode&&(migratedFragmentCode=processFinalCode("fragment",migratedFragmentCode));migratedFragmentCode=_shaderProcessor.ShaderProcessor.Finalize(migratedVertexCode,migratedFragmentCode,processorOptions);processorOptions=null;this._useFinalCode(migratedFragmentCode.vertexCode,migratedFragmentCode.fragmentCode,baseName)},this._engine)}};this._loadShader(attributesNamesOrOptions,"Vertex","",vertexCode=>{_shaderProcessor.ShaderProcessor.Initialize(processorOptions);
_shaderProcessor.ShaderProcessor.Process(vertexCode,processorOptions,(migratedVertexCode,codeBeforeMigration)=>{this._rawVertexSourceCode=vertexCode;this._vertexSourceCodeBeforeMigration=codeBeforeMigration;processFinalCode&&(migratedVertexCode=processFinalCode("vertex",migratedVertexCode));shaderCodes[0]=migratedVertexCode;shadersLoaded()},this._engine)});this._loadShader(_b,"Fragment","Pixel",fragmentCode=>{this._rawFragmentSourceCode=fragmentCode;shaderCodes[1]=fragmentCode;shadersLoaded()})}_useFinalCode(migratedVertexCode,
migratedFragmentCode,baseName){if(baseName){const fragment=baseName.fragmentElement||baseName.fragment||baseName.spectorName||baseName;this._vertexSourceCode=(this._shaderLanguage===_shaderLanguage.ShaderLanguage.WGSL?"//":"")+"#define SHADER_NAME vertex:"+(baseName.vertexElement||baseName.vertex||baseName.spectorName||baseName)+"\n"+migratedVertexCode;this._fragmentSourceCode=(this._shaderLanguage===_shaderLanguage.ShaderLanguage.WGSL?"//":"")+"#define SHADER_NAME fragment:"+fragment+"\n"+migratedFragmentCode}else this._vertexSourceCode=
migratedVertexCode,this._fragmentSourceCode=migratedFragmentCode;this._prepareEffect()}get key(){return this._key}isReady(){try{return this._isReadyInternal()}catch(_a){return!1}}_isReadyInternal(){return this._isReady?!0:this._pipelineContext?this._pipelineContext.isReady:!1}getEngine(){return this._engine}getPipelineContext(){return this._pipelineContext}getAttributesNames(){return this._attributesNames}getAttributeLocation(index){return this._attributes[index]}getAttributeLocationByName(name){return this._attributeLocationByName[name]}getAttributesCount(){return this._attributes.length}getUniformIndex(uniformName){return this._uniformsNames.indexOf(uniformName)}getUniform(uniformName){return this._uniforms[uniformName]}getSamplers(){return this._samplerList}getUniformNames(){return this._uniformsNames}getUniformBuffersNames(){return this._uniformBuffersNamesList}getIndexParameters(){return this._indexParameters}getCompilationError(){return this._compilationError}allFallbacksProcessed(){return this._allFallbacksProcessed}executeWhenCompiled(func){this.isReady()?
func(this):(this.onCompileObservable.add(effect=>{func(effect)}),this._pipelineContext&&!this._pipelineContext.isAsync||setTimeout(()=>{this._checkIsReady(null)},16))}_checkIsReady(previousPipelineContext){try{if(this._isReadyInternal())return}catch(e){this._processCompilationErrors(e,previousPipelineContext);return}this._isDisposed||setTimeout(()=>{this._checkIsReady(previousPipelineContext)},16)}_loadShader(shader,key,optionalKey,callback){if("undefined"!==typeof HTMLElement&&shader instanceof HTMLElement)key=
(0,_domManagement.GetDOMTextContent)(shader),callback(key);else if("source:"===shader.substr(0,7))callback(shader.substr(7));else if("base64:"===shader.substr(0,7))key=window.atob(shader.substr(7)),callback(key);else{var shaderStore=_shaderStore.ShaderStore.GetShadersStore(this._shaderLanguage);shaderStore[shader+key+"Shader"]?callback(shaderStore[shader+key+"Shader"]):optionalKey&&shaderStore[shader+optionalKey+"Shader"]?callback(shaderStore[shader+optionalKey+"Shader"]):(shader="."===shader[0]||
"/"===shader[0]||-1<shader.indexOf("http")?shader:_shaderStore.ShaderStore.GetShadersRepository(this._shaderLanguage)+shader,this._engine._loadFile(shader+"."+key.toLowerCase()+".fx",callback))}}get vertexSourceCode(){var _a,_b;return this._vertexSourceCodeOverride&&this._fragmentSourceCodeOverride?this._vertexSourceCodeOverride:null!==(_b=null===(_a=this._pipelineContext)||void 0===_a?void 0:_a._getVertexShaderCode())&&void 0!==_b?_b:this._vertexSourceCode}get fragmentSourceCode(){var _a,_b;return this._vertexSourceCodeOverride&&
this._fragmentSourceCodeOverride?this._fragmentSourceCodeOverride:null!==(_b=null===(_a=this._pipelineContext)||void 0===_a?void 0:_a._getFragmentShaderCode())&&void 0!==_b?_b:this._fragmentSourceCode}get vertexSourceCodeBeforeMigration(){return this._vertexSourceCodeBeforeMigration}get fragmentSourceCodeBeforeMigration(){return this._fragmentSourceCodeBeforeMigration}get rawVertexSourceCode(){return this._rawVertexSourceCode}get rawFragmentSourceCode(){return this._rawFragmentSourceCode}_rebuildProgram(vertexSourceCode,
fragmentSourceCode,onCompiled,onError){this._isReady=!1;this._vertexSourceCodeOverride=vertexSourceCode;this._fragmentSourceCodeOverride=fragmentSourceCode;this.onError=(effect,error)=>{onError&&onError(error)};this.onCompiled=()=>{const scenes=this.getEngine().scenes;if(scenes)for(let i=0;i<scenes.length;i++)scenes[i].markAllMaterialsAsDirty(63);this._pipelineContext._handlesSpectorRebuildCallback(onCompiled)};this._fallbacks=null;this._prepareEffect()}_prepareEffect(){const attributesNames=this._attributesNames,
defines=this.defines,previousPipelineContext=this._pipelineContext;this._isReady=!1;try{const engine=this._engine;this._pipelineContext=engine.createPipelineContext(this._processingContext);this._pipelineContext._name=this._key;const rebuildRebind=this._rebuildProgram.bind(this);this._vertexSourceCodeOverride&&this._fragmentSourceCodeOverride?engine._preparePipelineContext(this._pipelineContext,this._vertexSourceCodeOverride,this._fragmentSourceCodeOverride,!0,this._rawVertexSourceCode,this._rawFragmentSourceCode,
rebuildRebind,null,this._transformFeedbackVaryings,this._key):engine._preparePipelineContext(this._pipelineContext,this._vertexSourceCode,this._fragmentSourceCode,!1,this._rawVertexSourceCode,this._rawFragmentSourceCode,rebuildRebind,defines,this._transformFeedbackVaryings,this._key);engine._executeWhenRenderingStateIsCompiled(this._pipelineContext,()=>{this._attributes=[];this._pipelineContext._fillEffectInformation(this,this._uniformBuffersNames,this._uniformsNames,this._uniforms,this._samplerList,
this._samplers,attributesNames,this._attributes);if(attributesNames)for(let i=0;i<attributesNames.length;i++)this._attributeLocationByName[attributesNames[i]]=this._attributes[i];engine.bindSamplers(this);this._compilationError="";this._isReady=!0;if(this.onCompiled)this.onCompiled(this);this.onCompileObservable.notifyObservers(this);this.onCompileObservable.clear();this._fallbacks&&this._fallbacks.unBindMesh();previousPipelineContext&&this.getEngine()._deletePipelineContext(previousPipelineContext)});
this._pipelineContext.isAsync&&this._checkIsReady(previousPipelineContext)}catch(e){this._processCompilationErrors(e,previousPipelineContext)}}_getShaderCodeAndErrorLine(code,error,isFragment){var regexp=isFragment?/FRAGMENT SHADER ERROR: 0:(\d+?):/:/VERTEX SHADER ERROR: 0:(\d+?):/;let errorLine=null;error&&code&&(error=error.match(regexp))&&2===error.length&&(error=parseInt(error[1]),regexp=code.split("\n",-1),regexp.length>=error&&(errorLine=`Offending line [${error}] in ${isFragment?"fragment":
"vertex"} code: ${regexp[error-1]}`));return[code,errorLine]}_processCompilationErrors(e,previousPipelineContext=null){var _a,_b,_c;this._compilationError=e.message;var attributesNames=this._attributesNames;e=this._fallbacks;_logger.Logger.Error("Unable to compile effect:");_logger.Logger.Error("Uniforms: "+this._uniformsNames.map(function(uniform){return" "+uniform}));_logger.Logger.Error("Attributes: "+attributesNames.map(function(attribute){return" "+attribute}));_logger.Logger.Error("Defines:\r\n"+
this.defines);if(Effect.LogShaderCodeOnCompilationError){let lineErrorFragment=attributesNames=null,code=null;if(null===(_a=this._pipelineContext)||void 0===_a?0:_a._getVertexShaderCode())[code,attributesNames]=this._getShaderCodeAndErrorLine(this._pipelineContext._getVertexShaderCode(),this._compilationError,!1),code&&(_logger.Logger.Error("Vertex code:"),_logger.Logger.Error(code));if(null===(_b=this._pipelineContext)||void 0===_b?0:_b._getFragmentShaderCode())[code,lineErrorFragment]=this._getShaderCodeAndErrorLine(null===
(_c=this._pipelineContext)||void 0===_c?void 0:_c._getFragmentShaderCode(),this._compilationError,!0),code&&(_logger.Logger.Error("Fragment code:"),_logger.Logger.Error(code));attributesNames&&_logger.Logger.Error(attributesNames);lineErrorFragment&&_logger.Logger.Error(lineErrorFragment)}_logger.Logger.Error("Error: "+this._compilationError);_a=()=>{if(this.onError)this.onError(this,this._compilationError);this.onErrorObservable.notifyObservers(this)};previousPipelineContext&&(this._pipelineContext=
previousPipelineContext,this._isReady=!0,_a());e?(this._pipelineContext=null,e.hasMoreFallbacks?(this._allFallbacksProcessed=!1,_logger.Logger.Error("Trying next fallback."),this.defines=e.reduce(this.defines,this),this._prepareEffect()):(this._allFallbacksProcessed=!0,_a(),this.onErrorObservable.clear(),this._fallbacks&&this._fallbacks.unBindMesh())):(this._allFallbacksProcessed=!0,previousPipelineContext||_a())}get isSupported(){return""===this._compilationError}_bindTexture(channel,texture){this._engine._bindTexture(this._samplers[channel],
texture,channel)}setTexture(channel,texture){this._engine.setTexture(this._samplers[channel],this._uniforms[channel],texture,channel)}setDepthStencilTexture(channel,texture){this._engine.setDepthStencilTexture(this._samplers[channel],this._uniforms[channel],texture,channel)}setTextureArray(channel,textures){var exName=channel+"Ex";if(-1===this._samplerList.indexOf(exName+"0")){const initialPos=this._samplerList.indexOf(channel);for(let index=1;index<textures.length;index++)this._samplerList.splice(initialPos+
index,0,exName+(index-1).toString());exName=0;for(const key of this._samplerList)this._samplers[key]=exName,exName+=1}this._engine.setTextureArray(this._samplers[channel],this._uniforms[channel],textures,channel)}setTextureFromPostProcess(channel,postProcess){this._engine.setTextureFromPostProcess(this._samplers[channel],postProcess,channel)}setTextureFromPostProcessOutput(channel,postProcess){this._engine.setTextureFromPostProcessOutput(this._samplers[channel],postProcess,channel)}bindUniformBuffer(buffer,
name){const bufferName=this._uniformBuffersNames[name];void 0===bufferName||Effect._BaseCache[bufferName]===buffer&&this._engine._features.useUBOBindingCache||(Effect._BaseCache[bufferName]=buffer,this._engine.bindUniformBufferBase(buffer,bufferName,name))}bindUniformBlock(blockName,index){this._engine.bindUniformBlock(this._pipelineContext,blockName,index)}setInt(uniformName,value){this._pipelineContext.setInt(uniformName,value);return this}setInt2(uniformName,x,y){this._pipelineContext.setInt2(uniformName,
x,y);return this}setInt3(uniformName,x,y,z){this._pipelineContext.setInt3(uniformName,x,y,z);return this}setInt4(uniformName,x,y,z,w){this._pipelineContext.setInt4(uniformName,x,y,z,w);return this}setIntArray(uniformName,array){this._pipelineContext.setIntArray(uniformName,array);return this}setIntArray2(uniformName,array){this._pipelineContext.setIntArray2(uniformName,array);return this}setIntArray3(uniformName,array){this._pipelineContext.setIntArray3(uniformName,array);return this}setIntArray4(uniformName,
array){this._pipelineContext.setIntArray4(uniformName,array);return this}setUInt(uniformName,value){this._pipelineContext.setInt(uniformName,value);return this}setUInt2(uniformName,x,y){this._pipelineContext.setInt2(uniformName,x,y);return this}setUInt3(uniformName,x,y,z){this._pipelineContext.setInt3(uniformName,x,y,z);return this}setUInt4(uniformName,x,y,z,w){this._pipelineContext.setInt4(uniformName,x,y,z,w);return this}setUIntArray(uniformName,array){this._pipelineContext.setUIntArray(uniformName,
array);return this}setUIntArray2(uniformName,array){this._pipelineContext.setUIntArray2(uniformName,array);return this}setUIntArray3(uniformName,array){this._pipelineContext.setUIntArray3(uniformName,array);return this}setUIntArray4(uniformName,array){this._pipelineContext.setUIntArray4(uniformName,array);return this}setFloatArray(uniformName,array){this._pipelineContext.setArray(uniformName,array);return this}setFloatArray2(uniformName,array){this._pipelineContext.setArray2(uniformName,array);return this}setFloatArray3(uniformName,
array){this._pipelineContext.setArray3(uniformName,array);return this}setFloatArray4(uniformName,array){this._pipelineContext.setArray4(uniformName,array);return this}setArray(uniformName,array){this._pipelineContext.setArray(uniformName,array);return this}setArray2(uniformName,array){this._pipelineContext.setArray2(uniformName,array);return this}setArray3(uniformName,array){this._pipelineContext.setArray3(uniformName,array);return this}setArray4(uniformName,array){this._pipelineContext.setArray4(uniformName,
array);return this}setMatrices(uniformName,matrices){this._pipelineContext.setMatrices(uniformName,matrices);return this}setMatrix(uniformName,matrix){this._pipelineContext.setMatrix(uniformName,matrix);return this}setMatrix3x3(uniformName,matrix){this._pipelineContext.setMatrix3x3(uniformName,matrix);return this}setMatrix2x2(uniformName,matrix){this._pipelineContext.setMatrix2x2(uniformName,matrix);return this}setFloat(uniformName,value){this._pipelineContext.setFloat(uniformName,value);return this}setBool(uniformName,
bool){this._pipelineContext.setInt(uniformName,bool?1:0);return this}setVector2(uniformName,vector2){this._pipelineContext.setVector2(uniformName,vector2);return this}setFloat2(uniformName,x,y){this._pipelineContext.setFloat2(uniformName,x,y);return this}setVector3(uniformName,vector3){this._pipelineContext.setVector3(uniformName,vector3);return this}setFloat3(uniformName,x,y,z){this._pipelineContext.setFloat3(uniformName,x,y,z);return this}setVector4(uniformName,vector4){this._pipelineContext.setVector4(uniformName,
vector4);return this}setQuaternion(uniformName,quaternion){this._pipelineContext.setQuaternion(uniformName,quaternion);return this}setFloat4(uniformName,x,y,z,w){this._pipelineContext.setFloat4(uniformName,x,y,z,w);return this}setColor3(uniformName,color3){this._pipelineContext.setColor3(uniformName,color3);return this}setColor4(uniformName,color3,alpha){this._pipelineContext.setColor4(uniformName,color3,alpha);return this}setDirectColor4(uniformName,color4){this._pipelineContext.setDirectColor4(uniformName,
color4);return this}dispose(){this._pipelineContext&&this._pipelineContext.dispose();this._engine._releaseEffect(this);this._isDisposed=!0}static RegisterShader(name,pixelShader,vertexShader,shaderLanguage=_shaderLanguage.ShaderLanguage.GLSL){pixelShader&&(_shaderStore.ShaderStore.GetShadersStore(shaderLanguage)[`${name}PixelShader`]=pixelShader);vertexShader&&(_shaderStore.ShaderStore.GetShadersStore(shaderLanguage)[`${name}VertexShader`]=vertexShader)}static ResetCache(){Effect._BaseCache={}}}exports.Effect=
Effect;Effect.LogShaderCodeOnCompilationError=!0;Effect._UniqueIdSeed=0;Effect._BaseCache={};Effect.ShadersStore=_shaderStore.ShaderStore.ShadersStore;Effect.IncludesShadersStore=_shaderStore.ShaderStore.IncludesShadersStore}
//# sourceMappingURL=module$node_modules$$babylonjs$core$Materials$effect.js.map
