{
"version":3,
"file":"module$node_modules$$babylonjs$materials$Grid$gridMaterial.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/@babylonjs/materials/Grid/gridMaterial.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$materials$Grid$gridMaterial\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GridMaterial = void 0;\n\nvar _tslibEs = require(\"@babylonjs/core/tslib.es6.js\");\n\nvar _decorators = require(\"@babylonjs/core/Misc/decorators.js\");\n\nvar _mathVector = require(\"@babylonjs/core/Maths/math.vector.js\");\n\nvar _mathColor = require(\"@babylonjs/core/Maths/math.color.js\");\n\nvar _materialDefines = require(\"@babylonjs/core/Materials/materialDefines.js\");\n\nvar _materialHelper = require(\"@babylonjs/core/Materials/materialHelper.js\");\n\nvar _pushMaterial = require(\"@babylonjs/core/Materials/pushMaterial.js\");\n\nvar _materialFlags = require(\"@babylonjs/core/Materials/materialFlags.js\");\n\nvar _buffer = require(\"@babylonjs/core/Buffers/buffer.js\");\n\nvar _typeStore = require(\"@babylonjs/core/Misc/typeStore.js\");\n\nrequire(\"./grid.fragment.js\");\n\nrequire(\"./grid.vertex.js\");\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass GridMaterialDefines extends _materialDefines.MaterialDefines {\n  constructor() {\n    super();\n    this.OPACITY = false;\n    this.TRANSPARENT = false;\n    this.FOG = false;\n    this.PREMULTIPLYALPHA = false;\n    this.MAX_LINE = false;\n    this.UV1 = false;\n    this.UV2 = false;\n    this.INSTANCES = false;\n    this.THIN_INSTANCES = false;\n    this.IMAGEPROCESSINGPOSTPROCESS = false;\n    this.SKIPFINALCOLORCLAMP = false;\n    this.rebuild();\n  }\n\n}\n/**\n * The grid materials allows you to wrap any shape with a grid.\n * Colors are customizable.\n */\n\n\nclass GridMaterial extends _pushMaterial.PushMaterial {\n  /**\n   * constructor\n   * @param name The name given to the material in order to identify it afterwards.\n   * @param scene The scene the material is used in.\n   */\n  constructor(name, scene) {\n    super(name, scene);\n    /**\n     * Main color of the grid (e.g. between lines)\n     */\n\n    this.mainColor = _mathColor.Color3.Black();\n    /**\n     * Color of the grid lines.\n     */\n\n    this.lineColor = _mathColor.Color3.Teal();\n    /**\n     * The scale of the grid compared to unit.\n     */\n\n    this.gridRatio = 1.0;\n    /**\n     * Allows setting an offset for the grid lines.\n     */\n\n    this.gridOffset = _mathVector.Vector3.Zero();\n    /**\n     * The frequency of thicker lines.\n     */\n\n    this.majorUnitFrequency = 10;\n    /**\n     * The visibility of minor units in the grid.\n     */\n\n    this.minorUnitVisibility = 0.33;\n    /**\n     * The grid opacity outside of the lines.\n     */\n\n    this.opacity = 1.0;\n    /**\n     * Determine RBG output is premultiplied by alpha value.\n     */\n\n    this.preMultiplyAlpha = false;\n    /**\n     * Determines if the max line value will be used instead of the sum wherever grid lines intersect.\n     */\n\n    this.useMaxLine = false;\n    this._gridControl = new _mathVector.Vector4(this.gridRatio, this.majorUnitFrequency, this.minorUnitVisibility, this.opacity);\n  }\n  /**\n   * Returns whether or not the grid requires alpha blending.\n   */\n\n\n  needAlphaBlending() {\n    return this.opacity < 1.0 || this._opacityTexture && this._opacityTexture.isReady();\n  }\n\n  needAlphaBlendingForMesh(mesh) {\n    return mesh.visibility < 1.0 || this.needAlphaBlending();\n  }\n\n  isReadyForSubMesh(mesh, subMesh, useInstances) {\n    if (this.isFrozen) {\n      if (subMesh.effect && subMesh.effect._wasPreviouslyReady && subMesh.effect._wasPreviouslyUsingInstances === useInstances) {\n        return true;\n      }\n    }\n\n    if (!subMesh.materialDefines) {\n      subMesh.materialDefines = new GridMaterialDefines();\n    }\n\n    const defines = subMesh.materialDefines;\n    const scene = this.getScene();\n\n    if (this._isReadyForSubMesh(subMesh)) {\n      return true;\n    }\n\n    if (defines.TRANSPARENT !== this.opacity < 1.0) {\n      defines.TRANSPARENT = !defines.TRANSPARENT;\n      defines.markAsUnprocessed();\n    }\n\n    if (defines.PREMULTIPLYALPHA != this.preMultiplyAlpha) {\n      defines.PREMULTIPLYALPHA = !defines.PREMULTIPLYALPHA;\n      defines.markAsUnprocessed();\n    }\n\n    if (defines.MAX_LINE !== this.useMaxLine) {\n      defines.MAX_LINE = !defines.MAX_LINE;\n      defines.markAsUnprocessed();\n    } // Textures\n\n\n    if (defines._areTexturesDirty) {\n      defines._needUVs = false;\n\n      if (scene.texturesEnabled) {\n        if (this._opacityTexture && _materialFlags.MaterialFlags.OpacityTextureEnabled) {\n          if (!this._opacityTexture.isReady()) {\n            return false;\n          } else {\n            defines._needUVs = true;\n            defines.OPACITY = true;\n          }\n        }\n      }\n    }\n\n    _materialHelper.MaterialHelper.PrepareDefinesForMisc(mesh, scene, false, false, this.fogEnabled, false, defines); // Values that need to be evaluated on every frame\n\n\n    _materialHelper.MaterialHelper.PrepareDefinesForFrameBoundValues(scene, scene.getEngine(), this, defines, !!useInstances); // Get correct effect\n\n\n    if (defines.isDirty) {\n      defines.markAsProcessed();\n      scene.resetCachedMaterial(); // Attributes\n\n      _materialHelper.MaterialHelper.PrepareDefinesForAttributes(mesh, defines, false, false);\n\n      const attribs = [_buffer.VertexBuffer.PositionKind, _buffer.VertexBuffer.NormalKind];\n\n      if (defines.UV1) {\n        attribs.push(_buffer.VertexBuffer.UVKind);\n      }\n\n      if (defines.UV2) {\n        attribs.push(_buffer.VertexBuffer.UV2Kind);\n      }\n\n      defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n\n      _materialHelper.MaterialHelper.PrepareAttributesForInstances(attribs, defines); // Defines\n\n\n      const join = defines.toString();\n      subMesh.setEffect(scene.getEngine().createEffect(\"grid\", attribs, [\"projection\", \"mainColor\", \"lineColor\", \"gridControl\", \"gridOffset\", \"vFogInfos\", \"vFogColor\", \"world\", \"view\", \"opacityMatrix\", \"vOpacityInfos\", \"visibility\"], [\"opacitySampler\"], join, undefined, this.onCompiled, this.onError), defines, this._materialContext);\n    }\n\n    if (!subMesh.effect || !subMesh.effect.isReady()) {\n      return false;\n    }\n\n    defines._renderId = scene.getRenderId();\n    subMesh.effect._wasPreviouslyReady = true;\n    subMesh.effect._wasPreviouslyUsingInstances = !!useInstances;\n    return true;\n  }\n\n  bindForSubMesh(world, mesh, subMesh) {\n    const scene = this.getScene();\n    const defines = subMesh.materialDefines;\n\n    if (!defines) {\n      return;\n    }\n\n    const effect = subMesh.effect;\n\n    if (!effect) {\n      return;\n    }\n\n    this._activeEffect = effect;\n\n    this._activeEffect.setFloat(\"visibility\", mesh.visibility); // Matrices\n\n\n    if (!defines.INSTANCES || defines.THIN_INSTANCE) {\n      this.bindOnlyWorldMatrix(world);\n    }\n\n    this._activeEffect.setMatrix(\"view\", scene.getViewMatrix());\n\n    this._activeEffect.setMatrix(\"projection\", scene.getProjectionMatrix()); // Uniforms\n\n\n    if (this._mustRebind(scene, effect)) {\n      this._activeEffect.setColor3(\"mainColor\", this.mainColor);\n\n      this._activeEffect.setColor3(\"lineColor\", this.lineColor);\n\n      this._activeEffect.setVector3(\"gridOffset\", this.gridOffset);\n\n      this._gridControl.x = this.gridRatio;\n      this._gridControl.y = Math.round(this.majorUnitFrequency);\n      this._gridControl.z = this.minorUnitVisibility;\n      this._gridControl.w = this.opacity;\n\n      this._activeEffect.setVector4(\"gridControl\", this._gridControl);\n\n      if (this._opacityTexture && _materialFlags.MaterialFlags.OpacityTextureEnabled) {\n        this._activeEffect.setTexture(\"opacitySampler\", this._opacityTexture);\n\n        this._activeEffect.setFloat2(\"vOpacityInfos\", this._opacityTexture.coordinatesIndex, this._opacityTexture.level);\n\n        this._activeEffect.setMatrix(\"opacityMatrix\", this._opacityTexture.getTextureMatrix());\n      }\n    } // Fog\n\n\n    _materialHelper.MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect);\n\n    this._afterBind(mesh, this._activeEffect);\n  }\n  /**\n   * Dispose the material and its associated resources.\n   * @param forceDisposeEffect will also dispose the used effect when true\n   */\n\n\n  dispose(forceDisposeEffect) {\n    super.dispose(forceDisposeEffect);\n  }\n\n  clone(name) {\n    return _decorators.SerializationHelper.Clone(() => new GridMaterial(name, this.getScene()), this);\n  }\n\n  serialize() {\n    const serializationObject = super.serialize();\n    serializationObject.customType = \"BABYLON.GridMaterial\";\n    return serializationObject;\n  }\n\n  getClassName() {\n    return \"GridMaterial\";\n  }\n\n  static Parse(source, scene, rootUrl) {\n    return _decorators.SerializationHelper.Parse(() => new GridMaterial(source.name, scene), source, scene, rootUrl);\n  }\n\n}\n\nexports.GridMaterial = GridMaterial;\n(0, _tslibEs.__decorate)([(0, _decorators.serializeAsColor3)()], GridMaterial.prototype, \"mainColor\", void 0);\n(0, _tslibEs.__decorate)([(0, _decorators.serializeAsColor3)()], GridMaterial.prototype, \"lineColor\", void 0);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], GridMaterial.prototype, \"gridRatio\", void 0);\n(0, _tslibEs.__decorate)([(0, _decorators.serializeAsVector3)()], GridMaterial.prototype, \"gridOffset\", void 0);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], GridMaterial.prototype, \"majorUnitFrequency\", void 0);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], GridMaterial.prototype, \"minorUnitVisibility\", void 0);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], GridMaterial.prototype, \"opacity\", void 0);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], GridMaterial.prototype, \"preMultiplyAlpha\", void 0);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], GridMaterial.prototype, \"useMaxLine\", void 0);\n(0, _tslibEs.__decorate)([(0, _decorators.serializeAsTexture)(\"opacityTexture\")], GridMaterial.prototype, \"_opacityTexture\", void 0);\n(0, _tslibEs.__decorate)([(0, _decorators.expandToProperty)(\"_markAllSubMeshesAsTexturesDirty\")], GridMaterial.prototype, \"opacityTexture\", void 0);\n(0, _typeStore.RegisterClass)(\"BABYLON.GridMaterial\", GridMaterial);\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","GridMaterial","_tslibEs","_decorators","_mathVector","_mathColor","_materialDefines","_materialHelper","_pushMaterial","_materialFlags","_buffer","_typeStore","GridMaterialDefines","MaterialDefines","constructor","SKIPFINALCOLORCLAMP","IMAGEPROCESSINGPOSTPROCESS","THIN_INSTANCES","INSTANCES","UV2","UV1","MAX_LINE","PREMULTIPLYALPHA","FOG","TRANSPARENT","OPACITY","rebuild","PushMaterial","name","scene","mainColor","Color3","Black","lineColor","Teal","gridRatio","gridOffset","Vector3","Zero","majorUnitFrequency","minorUnitVisibility","opacity","useMaxLine","preMultiplyAlpha","_gridControl","Vector4","needAlphaBlending","_opacityTexture","isReady","needAlphaBlendingForMesh","mesh","visibility","isReadyForSubMesh","subMesh","useInstances","isFrozen","effect","_wasPreviouslyReady","_wasPreviouslyUsingInstances","materialDefines","defines","getScene","_isReadyForSubMesh","markAsUnprocessed","_areTexturesDirty","_needUVs","texturesEnabled","MaterialFlags","OpacityTextureEnabled","MaterialHelper","PrepareDefinesForMisc","fogEnabled","PrepareDefinesForFrameBoundValues","getEngine","isDirty","markAsProcessed","resetCachedMaterial","PrepareDefinesForAttributes","attribs","VertexBuffer","PositionKind","NormalKind","push","UVKind","UV2Kind","imageProcessingConfiguration","applyByPostProcess","PrepareAttributesForInstances","join","toString","setEffect","createEffect","undefined","onCompiled","onError","_materialContext","_renderId","getRenderId","bindForSubMesh","world","_activeEffect","setFloat","THIN_INSTANCE","bindOnlyWorldMatrix","setMatrix","getViewMatrix","getProjectionMatrix","_mustRebind","setColor3","setVector3","x","y","Math","round","z","w","setVector4","setTexture","setFloat2","coordinatesIndex","level","getTextureMatrix","BindFogParameters","_afterBind","dispose","forceDisposeEffect","clone","SerializationHelper","Clone","serialize","serializationObject","customType","getClassName","Parse","source","rootUrl","__decorate","serializeAsColor3","prototype","serializeAsVector3","serializeAsTexture","expandToProperty","RegisterClass"]
}
