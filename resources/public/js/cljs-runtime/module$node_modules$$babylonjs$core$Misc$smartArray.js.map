{
"version":3,
"file":"module$node_modules$$babylonjs$core$Misc$smartArray.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@babylonjs/core/Misc/smartArray.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Misc$smartArray\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SmartArrayNoDuplicate = exports.SmartArray = void 0;\n\n/**\n * Defines an GC Friendly array where the backfield array do not shrink to prevent over allocations.\n */\nclass SmartArray {\n  /**\n   * Instantiates a Smart Array.\n   * @param capacity defines the default capacity of the array.\n   */\n  constructor(capacity) {\n    /**\n     * The active length of the array.\n     */\n    this.length = 0;\n    this.data = new Array(capacity);\n    this._id = SmartArray._GlobalId++;\n  }\n  /**\n   * Pushes a value at the end of the active data.\n   * @param value defines the object to push in the array.\n   */\n\n\n  push(value) {\n    this.data[this.length++] = value;\n\n    if (this.length > this.data.length) {\n      this.data.length *= 2;\n    }\n  }\n  /**\n   * Iterates over the active data and apply the lambda to them.\n   * @param func defines the action to apply on each value.\n   */\n\n\n  forEach(func) {\n    for (let index = 0; index < this.length; index++) {\n      func(this.data[index]);\n    }\n  }\n  /**\n   * Sorts the full sets of data.\n   * @param compareFn defines the comparison function to apply.\n   */\n\n\n  sort(compareFn) {\n    this.data.sort(compareFn);\n  }\n  /**\n   * Resets the active data to an empty array.\n   */\n\n\n  reset() {\n    this.length = 0;\n  }\n  /**\n   * Releases all the data from the array as well as the array.\n   */\n\n\n  dispose() {\n    this.reset();\n\n    if (this.data) {\n      this.data.length = 0;\n    }\n  }\n  /**\n   * Concats the active data with a given array.\n   * @param array defines the data to concatenate with.\n   */\n\n\n  concat(array) {\n    if (array.length === 0) {\n      return;\n    }\n\n    if (this.length + array.length > this.data.length) {\n      this.data.length = (this.length + array.length) * 2;\n    }\n\n    for (let index = 0; index < array.length; index++) {\n      this.data[this.length++] = (array.data || array)[index];\n    }\n  }\n  /**\n   * Returns the position of a value in the active data.\n   * @param value defines the value to find the index for\n   * @returns the index if found in the active data otherwise -1\n   */\n\n\n  indexOf(value) {\n    const position = this.data.indexOf(value);\n\n    if (position >= this.length) {\n      return -1;\n    }\n\n    return position;\n  }\n  /**\n   * Returns whether an element is part of the active data.\n   * @param value defines the value to look for\n   * @returns true if found in the active data otherwise false\n   */\n\n\n  contains(value) {\n    return this.indexOf(value) !== -1;\n  }\n\n} // Statics\n\n\nexports.SmartArray = SmartArray;\nSmartArray._GlobalId = 0;\n/**\n * Defines an GC Friendly array where the backfield array do not shrink to prevent over allocations.\n * The data in this array can only be present once\n */\n\nclass SmartArrayNoDuplicate extends SmartArray {\n  constructor() {\n    super(...arguments);\n    this._duplicateId = 0;\n  }\n  /**\n   * Pushes a value at the end of the active data.\n   * THIS DOES NOT PREVENT DUPPLICATE DATA\n   * @param value defines the object to push in the array.\n   */\n\n\n  push(value) {\n    super.push(value);\n\n    if (!value.__smartArrayFlags) {\n      value.__smartArrayFlags = {};\n    }\n\n    value.__smartArrayFlags[this._id] = this._duplicateId;\n  }\n  /**\n   * Pushes a value at the end of the active data.\n   * If the data is already present, it won t be added again\n   * @param value defines the object to push in the array.\n   * @returns true if added false if it was already present\n   */\n\n\n  pushNoDuplicate(value) {\n    if (value.__smartArrayFlags && value.__smartArrayFlags[this._id] === this._duplicateId) {\n      return false;\n    }\n\n    this.push(value);\n    return true;\n  }\n  /**\n   * Resets the active data to an empty array.\n   */\n\n\n  reset() {\n    super.reset();\n    this._duplicateId++;\n  }\n  /**\n   * Concats the active data with a given array.\n   * This ensures no duplicate will be present in the result.\n   * @param array defines the data to concatenate with.\n   */\n\n\n  concatWithNoDuplicate(array) {\n    if (array.length === 0) {\n      return;\n    }\n\n    if (this.length + array.length > this.data.length) {\n      this.data.length = (this.length + array.length) * 2;\n    }\n\n    for (let index = 0; index < array.length; index++) {\n      const item = (array.data || array)[index];\n      this.pushNoDuplicate(item);\n    }\n  }\n\n}\n\nexports.SmartArrayNoDuplicate = SmartArrayNoDuplicate;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","SmartArrayNoDuplicate","SmartArray","constructor","capacity","length","data","Array","_id","_GlobalId","push","forEach","func","index","sort","compareFn","reset","dispose","concat","array","indexOf","position","contains","arguments","_duplicateId","__smartArrayFlags","pushNoDuplicate","concatWithNoDuplicate","item"]
}
