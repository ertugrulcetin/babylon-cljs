{
"version":3,
"file":"module$node_modules$$babylonjs$core$Misc$instantiationTools.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,kBAAR,CAA6B,IAAK,EAElC,KAAIC,QAAUP,OAAA,CAAQ,iDAAR,CAAd,CAEIQ,WAAaR,OAAA,CAAQ,oDAAR,CAKjB,MAAMM,mBAAN,CAMSG,kBAAW,CAACC,SAAD,CAAY,CAC5B,GAAI,IAAKC,CAAAA,yBAAT,EAAsC,IAAKA,CAAAA,yBAAL,CAA+BD,SAA/B,CAAtC,CACE,MAAO,KAAKC,CAAAA,yBAAL,CAA+BD,SAA/B,CAGT;IAAME,cAAgB,GAAIJ,UAAWK,CAAAA,QAAf,EAAyBH,SAAzB,CAEtB,IAAIE,aAAJ,CACE,MAAOA,cAGTL,QAAQO,CAAAA,MAAOC,CAAAA,IAAf,CAAoBL,SAApB,CAAgC,4CAAhC,CAEMM,UAAAA,CAAMN,SAAUO,CAAAA,KAAV,CAAgB,GAAhB,CACRC,cAAAA,CAAKC,MAALD,EAAe,IAEnB,KAAK,IAAIE,EAAI,CAAR,CAAWC,IAAML,SAAIM,CAAAA,MAA1B,CAAkCF,CAAlC,CAAsCC,GAAtC,CAA2CD,CAAA,EAA3C,CACEF,aAAA,CAAKA,aAAA,CAAGF,SAAA,CAAII,CAAJ,CAAH,CAGP,OAAkB,UAAlB,GAAI,MAAOF,cAAX,CACS,IADT,CAIOA,aAxBqB,CANhC,CAwCAhB,OAAQI,CAAAA,kBAAR,CAA6BA,kBAC7BA,mBAAmBK,CAAAA,yBAAnB,CAA+C,EAxDyE;",
"sources":["node_modules/@babylonjs/core/Misc/instantiationTools.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Misc$instantiationTools\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstantiationTools = void 0;\n\nvar _logger = require(\"./logger.js\");\n\nvar _typeStore = require(\"./typeStore.js\");\n\n/**\n * Class used to enable instantiation of objects by class name\n */\nclass InstantiationTools {\n  /**\n   * Tries to instantiate a new object from a given class name\n   * @param className defines the class name to instantiate\n   * @returns the new object or null if the system was not able to do the instantiation\n   */\n  static Instantiate(className) {\n    if (this.RegisteredExternalClasses && this.RegisteredExternalClasses[className]) {\n      return this.RegisteredExternalClasses[className];\n    }\n\n    const internalClass = (0, _typeStore.GetClass)(className);\n\n    if (internalClass) {\n      return internalClass;\n    }\n\n    _logger.Logger.Warn(className + \" not found, you may have missed an import.\");\n\n    const arr = className.split(\".\");\n    let fn = window || this;\n\n    for (let i = 0, len = arr.length; i < len; i++) {\n      fn = fn[arr[i]];\n    }\n\n    if (typeof fn !== \"function\") {\n      return null;\n    }\n\n    return fn;\n  }\n\n}\n/**\n * Use this object to register external classes like custom textures or material\n * to allow the loaders to instantiate them\n */\n\n\nexports.InstantiationTools = InstantiationTools;\nInstantiationTools.RegisteredExternalClasses = {};\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","InstantiationTools","_logger","_typeStore","Instantiate","className","RegisteredExternalClasses","internalClass","GetClass","Logger","Warn","arr","split","fn","window","i","len","length"]
}
