{
"version":3,
"file":"module$node_modules$$babylonjs$core$DeviceInput$nativeDeviceInputSystem.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uEAAA,CAA4F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,uBAAR,CAAkC,IAAK,EAEvC,KAAIC,cAAgBP,OAAA,CAAQ,8DAAR,CAApB,CAEIQ,aAAeR,OAAA,CAAQ,0EAAR,CAGnB,MAAMM,wBAAN,CACEG,WAAW,CAACC,iBAAD,CAAoBC,oBAApB,CAA0CC,cAA1C,CAA0D,CACnE,IAAKC,CAAAA,YAAL;AAAoBC,OAAQC,CAAAA,iBAAR,CAA4B,IAAID,OAAQC,CAAAA,iBAAZ,CAA8BL,iBAA9B,CAAiDC,oBAAjD,CAAuE,CAACK,UAAD,CAAaC,UAAb,CAAyBC,UAAzB,CAAqCC,YAArC,CAAA,EAAsD,CACrKC,UAAAA,CAAMb,aAAcc,CAAAA,kBAAmBC,CAAAA,iBAAjC,CAAmDN,UAAnD,CAA+DC,UAA/D,CAA2EC,UAA3E,CAAuFC,YAAvF,CAAqG,IAArG,CAEZP,eAAA,CAAeI,UAAf,CAA2BC,UAA3B,CAAuCG,UAAvC,CAH2K,CAA7H,CAA5B,CAIf,IAAKG,CAAAA,uBAAL,EAL8D,CAiBrEC,SAAS,CAACR,UAAD,CAAaC,UAAb,CAAyBC,UAAzB,CAAqC,CAC5C,MAAO,KAAKL,CAAAA,YAAaW,CAAAA,SAAlB,CAA4BR,UAA5B,CAAwCC,UAAxC,CAAoDC,UAApD,CADqC,CAU9CO,iBAAiB,CAACT,UAAD,CAAa,CAE5B,MAAOA,WAAP;AAAsBR,YAAakB,CAAAA,UAAWC,CAAAA,KAA9C,EAAuDX,UAAvD,GAAsER,YAAakB,CAAAA,UAAWE,CAAAA,KAFlE,CAS9BC,OAAO,EAAG,CACR,IAAKhB,CAAAA,YAAagB,CAAAA,OAAlB,EADQ,CASVN,uBAAuB,EAAG,CAUxB,MAToBO,CAClBN,UAAW,EAAAA,EACF,CAFSM,CAIlBL,kBAAmB,EAAAA,EACV,CAAA,CALSK,CAOlBD,QAAS,EAAAA,EAAM,EAPGC,CADI,CA9C5B,CA6DA5B,OAAQI,CAAAA,uBAAR,CAAkCA,uBA1EkG;",
"sources":["node_modules/@babylonjs/core/DeviceInput/nativeDeviceInputSystem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$DeviceInput$nativeDeviceInputSystem\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NativeDeviceInputSystem = void 0;\n\nvar _eventFactory = require(\"./eventFactory.js\");\n\nvar _deviceEnums = require(\"./InputDevices/deviceEnums.js\");\n\n/** @internal */\nclass NativeDeviceInputSystem {\n  constructor(onDeviceConnected, onDeviceDisconnected, onInputChanged) {\n    this._nativeInput = _native.DeviceInputSystem ? new _native.DeviceInputSystem(onDeviceConnected, onDeviceDisconnected, (deviceType, deviceSlot, inputIndex, currentState) => {\n      const evt = _eventFactory.DeviceEventFactory.CreateDeviceEvent(deviceType, deviceSlot, inputIndex, currentState, this);\n\n      onInputChanged(deviceType, deviceSlot, evt);\n    }) : this._createDummyNativeInput();\n  } // Public functions\n\n  /**\n   * Checks for current device input value, given an id and input index. Throws exception if requested device not initialized.\n   * @param deviceType Enum specifying device type\n   * @param deviceSlot \"Slot\" or index that device is referenced in\n   * @param inputIndex Id of input to be checked\n   * @returns Current value of input\n   */\n\n\n  pollInput(deviceType, deviceSlot, inputIndex) {\n    return this._nativeInput.pollInput(deviceType, deviceSlot, inputIndex);\n  }\n  /**\n   * Check for a specific device in the DeviceInputSystem\n   * @param deviceType Type of device to check for\n   * @returns bool with status of device's existence\n   */\n\n\n  isDeviceAvailable(deviceType) {\n    //TODO: FIx native side first\n    return deviceType === _deviceEnums.DeviceType.Mouse || deviceType === _deviceEnums.DeviceType.Touch;\n  }\n  /**\n   * Dispose of all the observables\n   */\n\n\n  dispose() {\n    this._nativeInput.dispose();\n  }\n  /**\n   * For versions of BabylonNative that don't have the NativeInput plugin initialized, create a dummy version\n   * @returns Object with dummy functions\n   */\n\n\n  _createDummyNativeInput() {\n    const nativeInput = {\n      pollInput: () => {\n        return 0;\n      },\n      isDeviceAvailable: () => {\n        return false;\n      },\n      dispose: () => {}\n    };\n    return nativeInput;\n  }\n\n}\n\nexports.NativeDeviceInputSystem = NativeDeviceInputSystem;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","NativeDeviceInputSystem","_eventFactory","_deviceEnums","constructor","onDeviceConnected","onDeviceDisconnected","onInputChanged","_nativeInput","_native","DeviceInputSystem","deviceType","deviceSlot","inputIndex","currentState","evt","DeviceEventFactory","CreateDeviceEvent","_createDummyNativeInput","pollInput","isDeviceAvailable","DeviceType","Mouse","Touch","dispose","nativeInput"]
}
