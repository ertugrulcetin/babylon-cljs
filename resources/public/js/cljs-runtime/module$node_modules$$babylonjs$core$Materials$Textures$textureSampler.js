shadow$provide.module$node_modules$$babylonjs$core$Materials$Textures$textureSampler=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.TextureSampler=void 0;class TextureSampler{get wrapU(){return this._cachedWrapU}set wrapU(value){this._cachedWrapU=value}get wrapV(){return this._cachedWrapV}set wrapV(value){this._cachedWrapV=value}get wrapR(){return this._cachedWrapR}set wrapR(value){this._cachedWrapR=value}get anisotropicFilteringLevel(){return this._cachedAnisotropicFilteringLevel}set anisotropicFilteringLevel(value){this._cachedAnisotropicFilteringLevel=
value}get comparisonFunction(){return this._comparisonFunction}set comparisonFunction(value){this._comparisonFunction=value}get useMipMaps(){return this._useMipMaps}set useMipMaps(value){this._useMipMaps=value}constructor(){this.samplingMode=-1;this._useMipMaps=!0;this._cachedAnisotropicFilteringLevel=this._cachedWrapR=this._cachedWrapV=this._cachedWrapU=null;this._comparisonFunction=0}setParameters(wrapU=1,wrapV=1,wrapR=1,anisotropicFilteringLevel=1,samplingMode=2,comparisonFunction=0){this._cachedWrapU=
wrapU;this._cachedWrapV=wrapV;this._cachedWrapR=wrapR;this._cachedAnisotropicFilteringLevel=anisotropicFilteringLevel;this.samplingMode=samplingMode;this._comparisonFunction=comparisonFunction;return this}compareSampler(other){return this._cachedWrapU===other._cachedWrapU&&this._cachedWrapV===other._cachedWrapV&&this._cachedWrapR===other._cachedWrapR&&this._cachedAnisotropicFilteringLevel===other._cachedAnisotropicFilteringLevel&&this.samplingMode===other.samplingMode&&this._comparisonFunction===
other._comparisonFunction&&this._useMipMaps===other._useMipMaps}}exports.TextureSampler=TextureSampler}
//# sourceMappingURL=module$node_modules$$babylonjs$core$Materials$Textures$textureSampler.js.map
