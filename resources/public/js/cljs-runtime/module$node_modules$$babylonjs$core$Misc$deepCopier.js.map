{
"version":3,
"file":"module$node_modules$$babylonjs$core$Misc$deepCopier.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@babylonjs/core/Misc/deepCopier.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Misc$deepCopier\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DeepCopier = void 0;\n\nvar _logger = require(\"./logger.js\");\n\nconst CloneValue = (source, destinationObject) => {\n  if (!source) {\n    return null;\n  }\n\n  if (source.getClassName && source.getClassName() === \"Mesh\") {\n    return null;\n  }\n\n  if (source.getClassName && (source.getClassName() === \"SubMesh\" || source.getClassName() === \"PhysicsBody\")) {\n    return source.clone(destinationObject);\n  } else if (source.clone) {\n    return source.clone();\n  } else if (Array.isArray(source)) {\n    return source.slice();\n  }\n\n  return null;\n};\n\nfunction GetAllPropertyNames(obj) {\n  const props = [];\n\n  do {\n    Object.getOwnPropertyNames(obj).forEach(function (prop) {\n      if (props.indexOf(prop) === -1) {\n        props.push(prop);\n      }\n    });\n  } while (obj = Object.getPrototypeOf(obj));\n\n  return props;\n}\n/**\n * Class containing a set of static utilities functions for deep copy.\n */\n\n\nclass DeepCopier {\n  /**\n   * Tries to copy an object by duplicating every property\n   * @param source defines the source object\n   * @param destination defines the target object\n   * @param doNotCopyList defines a list of properties to avoid\n   * @param mustCopyList defines a list of properties to copy (even if they start with _)\n   */\n  static DeepCopy(source, destination, doNotCopyList, mustCopyList) {\n    const properties = GetAllPropertyNames(source);\n\n    for (const prop of properties) {\n      if (prop[0] === \"_\" && (!mustCopyList || mustCopyList.indexOf(prop) === -1)) {\n        continue;\n      }\n\n      if (prop.endsWith(\"Observable\")) {\n        continue;\n      }\n\n      if (doNotCopyList && doNotCopyList.indexOf(prop) !== -1) {\n        continue;\n      }\n\n      const sourceValue = source[prop];\n      const typeOfSourceValue = typeof sourceValue;\n\n      if (typeOfSourceValue === \"function\") {\n        continue;\n      }\n\n      try {\n        if (typeOfSourceValue === \"object\") {\n          if (sourceValue instanceof Uint8Array) {\n            destination[prop] = Uint8Array.from(sourceValue);\n          } else if (sourceValue instanceof Array) {\n            destination[prop] = [];\n\n            if (sourceValue.length > 0) {\n              if (typeof sourceValue[0] == \"object\") {\n                for (let index = 0; index < sourceValue.length; index++) {\n                  const clonedValue = CloneValue(sourceValue[index], destination);\n\n                  if (destination[prop].indexOf(clonedValue) === -1) {\n                    // Test if auto inject was not done\n                    destination[prop].push(clonedValue);\n                  }\n                }\n              } else {\n                destination[prop] = sourceValue.slice(0);\n              }\n            }\n          } else {\n            destination[prop] = CloneValue(sourceValue, destination);\n          }\n        } else {\n          destination[prop] = sourceValue;\n        }\n      } catch (e) {\n        // Log a warning (it could be because of a read-only property)\n        _logger.Logger.Warn(e.message);\n      }\n    }\n  }\n\n}\n\nexports.DeepCopier = DeepCopier;\n};"],
"names":["shadow$provide","global","require","module","exports","GetAllPropertyNames","obj","props","Object","getOwnPropertyNames","forEach","prop","indexOf","push","getPrototypeOf","defineProperty","value","DeepCopier","_logger","CloneValue","source","destinationObject","getClassName","clone","Array","isArray","slice","DeepCopy","destination","doNotCopyList","mustCopyList","properties","endsWith","sourceValue","typeOfSourceValue","Uint8Array","from","length","index","clonedValue","e","Logger","Warn","message"]
}
