shadow$provide.module$node_modules$$babylonjs$core$Inputs$scene_inputManager=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.InputManager=void 0;var _pointerEvents=require("module$node_modules$$babylonjs$core$Events$pointerEvents"),_abstractActionManager=require("module$node_modules$$babylonjs$core$Actions$abstractActionManager"),_pickingInfo=require("module$node_modules$$babylonjs$core$Collisions$pickingInfo"),_mathVector=require("module$node_modules$$babylonjs$core$Maths$math_vector"),
_actionEvent=require("module$node_modules$$babylonjs$core$Actions$actionEvent"),_keyboardEvents=require("module$node_modules$$babylonjs$core$Events$keyboardEvents"),_deviceEnums=require("module$node_modules$$babylonjs$core$DeviceInput$InputDevices$deviceEnums"),_deviceSourceManager=require("module$node_modules$$babylonjs$core$DeviceInput$InputDevices$deviceSourceManager"),_engineStore=require("module$node_modules$$babylonjs$core$Engines$engineStore");class _ClickInfo{constructor(){this._ignore=this._hasSwiped=
this._doubleClick=this._singleClick=!1}get singleClick(){return this._singleClick}get doubleClick(){return this._doubleClick}get hasSwiped(){return this._hasSwiped}get ignore(){return this._ignore}set singleClick(b){this._singleClick=b}set doubleClick(b){this._doubleClick=b}set hasSwiped(b){this._hasSwiped=b}set ignore(b){this._ignore=b}}class InputManager{constructor(scene){this._meshPickProceed=this._alreadyAttached=!1;this._previousPickResult=this._currentPickResult=null;this._totalPointersPressed=
0;this._isSwiping=this._doubleClickOccured=!1;this._swipeButtonPressed=-1;this._isMultiTouchGesture=this._skipPointerTap=!1;this._pointerY=this._pointerX=0;this._startingPointerPosition=new _mathVector.Vector2(0,0);this._previousStartingPointerPosition=new _mathVector.Vector2(0,0);this._previousStartingPointerTime=this._startingPointerTime=0;this._pointerCaptures={};this._meshUnderPointerId={};this._movePointerInfo=null;this._cameraObserverCount=0;this._delayedClicks=[null,null,null,null,null];this._deviceSourceManager=
null;this._scene=scene||_engineStore.EngineStore.LastCreatedScene}get meshUnderPointer(){this._movePointerInfo&&(this._movePointerInfo._generatePickInfo(),this._movePointerInfo=null);return this._pointerOverMesh}getMeshUnderPointerByPointerId(pointerId){return this._meshUnderPointerId[pointerId]||null}get unTranslatedPointer(){return new _mathVector.Vector2(this._unTranslatedPointerX,this._unTranslatedPointerY)}get pointerX(){return this._pointerX}set pointerX(value){this._pointerX=value}get pointerY(){return this._pointerY}set pointerY(value){this._pointerY=
value}_updatePointerPosition(evt){const canvasRect=this._scene.getEngine().getInputElementClientRect();canvasRect&&(this._pointerX=evt.clientX-canvasRect.left,this._pointerY=evt.clientY-canvasRect.top,this._unTranslatedPointerX=this._pointerX,this._unTranslatedPointerY=this._pointerY)}_processPointerMove(pickResult,evt){const scene=this._scene;var engine=scene.getEngine(),canvas=engine.getInputElement();canvas&&(canvas.tabIndex=engine.canvasTabIndex,scene.doNotHandleCursors||(canvas.style.cursor=
scene.defaultCursor));this._setCursorAndPointerOverMesh(pickResult,evt,scene);for(const step of scene._pointerMoveStage)pickResult=pickResult||this._pickMove(evt),pickResult=step.action(this._unTranslatedPointerX,this._unTranslatedPointerY,pickResult,(null===pickResult||void 0===pickResult?0:pickResult.pickedMesh)?!0:!1,canvas);engine=evt.inputIndex>=_deviceEnums.PointerInput.MouseWheelX&&evt.inputIndex<=_deviceEnums.PointerInput.MouseWheelZ?_pointerEvents.PointerEventTypes.POINTERWHEEL:_pointerEvents.PointerEventTypes.POINTERMOVE;
scene.onPointerMove&&(pickResult=pickResult||this._pickMove(evt),scene.onPointerMove(evt,pickResult,engine));pickResult?(canvas=new _pointerEvents.PointerInfo(engine,evt,pickResult),this._setRayOnPointerInfo(pickResult,evt)):this._movePointerInfo=canvas=new _pointerEvents.PointerInfo(engine,evt,null,this);scene.onPointerObservable.hasObservers()&&scene.onPointerObservable.notifyObservers(canvas,engine)}_setRayOnPointerInfo(pickInfo,event){const scene=this._scene;pickInfo&&scene._pickingAvailable&&
!pickInfo.ray&&(pickInfo.ray=scene.createPickingRay(event.offsetX,event.offsetY,_mathVector.Matrix.Identity(),scene.activeCamera))}_addCameraPointerObserver(observer,mask){this._cameraObserverCount++;return this._scene.onPointerObservable.add(observer,mask)}_removeCameraPointerObserver(observer){this._cameraObserverCount--;return this._scene.onPointerObservable.remove(observer)}_checkForPicking(){return!!(this._scene.onPointerObservable.observers.length>this._cameraObserverCount||this._scene.onPointerPick)}_checkPrePointerObservable(pickResult,
evt,type){const scene=this._scene;evt=new _pointerEvents.PointerInfoPre(type,evt,this._unTranslatedPointerX,this._unTranslatedPointerY);pickResult&&(evt.originalPickingInfo=pickResult,evt.ray=pickResult.ray,pickResult.originMesh&&(evt.nearInteractionPickingInfo=pickResult));scene.onPrePointerObservable.notifyObservers(evt,type);return evt.skipOnPointerObservable?!0:!1}_pickMove(evt){const scene=this._scene,pickResult=scene.pick(this._unTranslatedPointerX,this._unTranslatedPointerY,scene.pointerMovePredicate,
scene.pointerMoveFastCheck,scene.cameraToUseForPointers,scene.pointerMoveTrianglePredicate);this._setCursorAndPointerOverMesh(pickResult,evt,scene);return pickResult}_setCursorAndPointerOverMesh(pickResult,evt,scene){const canvas=scene.getEngine().getInputElement();(null===pickResult||void 0===pickResult?0:pickResult.pickedMesh)?(this.setPointerOverMesh(pickResult.pickedMesh,evt.pointerId,pickResult,evt),!scene.doNotHandleCursors&&canvas&&this._pointerOverMesh&&(pickResult=this._pointerOverMesh._getActionManagerForTrigger())&&
pickResult.hasPointerTriggers&&(canvas.style.cursor=pickResult.hoverCursor||scene.hoverCursor)):this.setPointerOverMesh(null,evt.pointerId,pickResult,evt)}simulatePointerMove(pickResult,pointerEventInit){pointerEventInit=new PointerEvent("pointermove",pointerEventInit);pointerEventInit.inputIndex=_deviceEnums.PointerInput.Move;this._checkPrePointerObservable(pickResult,pointerEventInit,_pointerEvents.PointerEventTypes.POINTERMOVE)||this._processPointerMove(pickResult,pointerEventInit)}simulatePointerDown(pickResult,
pointerEventInit){pointerEventInit=new PointerEvent("pointerdown",pointerEventInit);pointerEventInit.inputIndex=pointerEventInit.button+2;this._checkPrePointerObservable(pickResult,pointerEventInit,_pointerEvents.PointerEventTypes.POINTERDOWN)||this._processPointerDown(pickResult,pointerEventInit)}_processPointerDown(pickResult$jscomp$0,evt){const scene=this._scene;if(null===pickResult$jscomp$0||void 0===pickResult$jscomp$0?0:pickResult$jscomp$0.pickedMesh){this._pickedDownMesh=pickResult$jscomp$0.pickedMesh;
const actionManager=pickResult$jscomp$0.pickedMesh._getActionManagerForTrigger();if(actionManager){if(actionManager.hasPickTriggers)switch(actionManager.processTrigger(5,_actionEvent.ActionEvent.CreateNew(pickResult$jscomp$0.pickedMesh,evt)),evt.button){case 0:actionManager.processTrigger(2,_actionEvent.ActionEvent.CreateNew(pickResult$jscomp$0.pickedMesh,evt));break;case 1:actionManager.processTrigger(4,_actionEvent.ActionEvent.CreateNew(pickResult$jscomp$0.pickedMesh,evt));break;case 2:actionManager.processTrigger(3,
_actionEvent.ActionEvent.CreateNew(pickResult$jscomp$0.pickedMesh,evt))}actionManager.hasSpecificTrigger(8)&&window.setTimeout(()=>{const pickResult=scene.pick(this._unTranslatedPointerX,this._unTranslatedPointerY,mesh=>mesh.isPickable&&mesh.isVisible&&mesh.isReady()&&mesh.actionManager&&mesh.actionManager.hasSpecificTrigger(8)&&mesh===this._pickedDownMesh,!1,scene.cameraToUseForPointers);(null===pickResult||void 0===pickResult?0:pickResult.pickedMesh)&&actionManager&&0!==this._totalPointersPressed&&
Date.now()-this._startingPointerTime>InputManager.LongPressDelay&&!this._isPointerSwiping()&&(this._startingPointerTime=0,actionManager.processTrigger(8,_actionEvent.ActionEvent.CreateNew(pickResult.pickedMesh,evt)))},InputManager.LongPressDelay)}}else for(var step of scene._pointerDownStage)pickResult$jscomp$0=step.action(this._unTranslatedPointerX,this._unTranslatedPointerY,pickResult$jscomp$0,evt,!1);const type=_pointerEvents.PointerEventTypes.POINTERDOWN;if(pickResult$jscomp$0){if(scene.onPointerDown)scene.onPointerDown(evt,
pickResult$jscomp$0,type);step=new _pointerEvents.PointerInfo(type,evt,pickResult$jscomp$0);this._setRayOnPointerInfo(pickResult$jscomp$0,evt)}else step=new _pointerEvents.PointerInfo(type,evt,null,this);scene.onPointerObservable.hasObservers()&&scene.onPointerObservable.notifyObservers(step,type)}_isPointerSwiping(){return this._isSwiping}simulatePointerUp(pickResult,pointerEventInit,doubleTap){pointerEventInit=new PointerEvent("pointerup",pointerEventInit);pointerEventInit.inputIndex=_deviceEnums.PointerInput.Move;
const clickInfo=new _ClickInfo;doubleTap?clickInfo.doubleClick=!0:clickInfo.singleClick=!0;this._checkPrePointerObservable(pickResult,pointerEventInit,_pointerEvents.PointerEventTypes.POINTERUP)||this._processPointerUp(pickResult,pointerEventInit,clickInfo)}_processPointerUp(pickResult,evt,clickInfo){const scene=this._scene;if(null===pickResult||void 0===pickResult?0:pickResult.pickedMesh){this._pickedUpMesh=pickResult.pickedMesh;if(this._pickedDownMesh===this._pickedUpMesh){if(scene.onPointerPick)scene.onPointerPick(evt,
pickResult);if(clickInfo.singleClick&&!clickInfo.ignore&&scene.onPointerObservable.observers.length>this._cameraObserverCount){var type=_pointerEvents.PointerEventTypes.POINTERPICK;const pi=new _pointerEvents.PointerInfo(type,evt,pickResult);this._setRayOnPointerInfo(pickResult,evt);scene.onPointerObservable.notifyObservers(pi,type)}}(type=pickResult.pickedMesh._getActionManagerForTrigger())&&!clickInfo.ignore&&(type.processTrigger(7,_actionEvent.ActionEvent.CreateNew(pickResult.pickedMesh,evt,pickResult)),
!clickInfo.hasSwiped&&clickInfo.singleClick&&type.processTrigger(1,_actionEvent.ActionEvent.CreateNew(pickResult.pickedMesh,evt,pickResult)),type=pickResult.pickedMesh._getActionManagerForTrigger(6),clickInfo.doubleClick&&type&&type.processTrigger(6,_actionEvent.ActionEvent.CreateNew(pickResult.pickedMesh,evt,pickResult)))}else if(!clickInfo.ignore)for(type of scene._pointerUpStage)pickResult=type.action(this._unTranslatedPointerX,this._unTranslatedPointerY,pickResult,evt,clickInfo.doubleClick);this._pickedDownMesh&&
this._pickedDownMesh!==this._pickedUpMesh&&(type=this._pickedDownMesh._getActionManagerForTrigger(16))&&type.processTrigger(16,_actionEvent.ActionEvent.CreateNew(this._pickedDownMesh,evt));if(!clickInfo.ignore){type=new _pointerEvents.PointerInfo(_pointerEvents.PointerEventTypes.POINTERUP,evt,pickResult);this._setRayOnPointerInfo(pickResult,evt);scene.onPointerObservable.notifyObservers(type,_pointerEvents.PointerEventTypes.POINTERUP);if(scene.onPointerUp)scene.onPointerUp(evt,pickResult,_pointerEvents.PointerEventTypes.POINTERUP);
clickInfo.hasSwiped||this._skipPointerTap||this._isMultiTouchGesture||(type=0,clickInfo.singleClick?type=_pointerEvents.PointerEventTypes.POINTERTAP:clickInfo.doubleClick&&(type=_pointerEvents.PointerEventTypes.POINTERDOUBLETAP),type&&(pickResult=new _pointerEvents.PointerInfo(type,evt,pickResult),scene.onPointerObservable.hasObservers()&&scene.onPointerObservable.hasSpecificMask(type)&&scene.onPointerObservable.notifyObservers(pickResult,type)))}}isPointerCaptured(pointerId=0){return this._pointerCaptures[pointerId]}attachControl(attachUp=
!0,attachDown=!0,attachMove=!0,elementToAttachTo=null){const scene=this._scene,engine=scene.getEngine();elementToAttachTo||(elementToAttachTo=engine.getInputElement());this._alreadyAttached&&this.detachControl();elementToAttachTo&&(this._alreadyAttachedTo=elementToAttachTo);this._deviceSourceManager=new _deviceSourceManager.DeviceSourceManager(engine);this._initActionManager=act=>{if(!this._meshPickProceed){const pickResult=scene.skipPointerUpPicking||0===scene._registeredActions&&!this._checkForPicking()&&
!scene.onPointerUp?null:scene.pick(this._unTranslatedPointerX,this._unTranslatedPointerY,scene.pointerUpPredicate,scene.pointerUpFastCheck,scene.cameraToUseForPointers);(this._currentPickResult=pickResult)&&(act=pickResult.hit&&pickResult.pickedMesh?pickResult.pickedMesh._getActionManagerForTrigger():null);this._meshPickProceed=!0}return act};this._delayedSimpleClick=(btn,clickInfo,cb)=>{if(Date.now()-this._previousStartingPointerTime>InputManager.DoubleClickDelay&&!this._doubleClickOccured||btn!==
this._previousButtonPressed)this._doubleClickOccured=!1,clickInfo.singleClick=!0,clickInfo.ignore=!1,this._delayedClicks[btn]&&(clickInfo=_pointerEvents.PointerEventTypes.POINTERTAP,cb=new _pointerEvents.PointerInfo(clickInfo,this._delayedClicks[btn].evt,this._currentPickResult),scene.onPointerObservable.hasObservers()&&scene.onPointerObservable.hasSpecificMask(clickInfo)&&scene.onPointerObservable.notifyObservers(cb,clickInfo),this._delayedClicks[btn]=null)};this._initClickEvent=(obs1,obs2,evt,cb)=>
{var _a,_b;const clickInfo=new _ClickInfo;let act=this._currentPickResult=null;var checkPicking=obs1.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERPICK)||obs2.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERPICK)||obs1.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERTAP)||obs2.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERTAP)||obs1.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERDOUBLETAP)||obs2.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERDOUBLETAP);
!checkPicking&&_abstractActionManager.AbstractActionManager&&(act=this._initActionManager(act,clickInfo))&&(checkPicking=act.hasPickTriggers);let needToIgnoreNext=!1;if(checkPicking&&(checkPicking=evt.button,clickInfo.hasSwiped=this._isPointerSwiping(),!clickInfo.hasSwiped)){let checkSingleClickImmediately=!InputManager.ExclusiveDoubleClickMode;checkSingleClickImmediately||(checkSingleClickImmediately=!obs1.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERDOUBLETAP)&&!obs2.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERDOUBLETAP))&&
!_abstractActionManager.AbstractActionManager.HasSpecificTrigger(6)&&(act=this._initActionManager(act,clickInfo))&&(checkSingleClickImmediately=!act.hasSpecificTrigger(6));if(checkSingleClickImmediately){if(Date.now()-this._previousStartingPointerTime>InputManager.DoubleClickDelay||checkPicking!==this._previousButtonPressed)clickInfo.singleClick=!0,cb(clickInfo,this._currentPickResult),needToIgnoreNext=!0}else evt={evt,clickInfo,timeoutId:window.setTimeout(this._delayedSimpleClick.bind(this,checkPicking,
clickInfo,cb),InputManager.DoubleClickDelay)},this._delayedClicks[checkPicking]=evt;obs1=obs1.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERDOUBLETAP)||obs2.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERDOUBLETAP);!obs1&&_abstractActionManager.AbstractActionManager.HasSpecificTrigger(6)&&(act=this._initActionManager(act,clickInfo))&&(obs1=act.hasSpecificTrigger(6));obs1&&(checkPicking===this._previousButtonPressed&&Date.now()-this._previousStartingPointerTime<InputManager.DoubleClickDelay&&
!this._doubleClickOccured?(clickInfo.hasSwiped||this._isPointerSwiping()?(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=checkPicking,InputManager.ExclusiveDoubleClickMode?(this._delayedClicks[checkPicking]&&(clearTimeout(null===(_b=this._delayedClicks[checkPicking])||void 0===_b?void 0:
_b.timeoutId),this._delayedClicks[checkPicking]=null),cb(clickInfo,this._previousPickResult)):cb(clickInfo,this._currentPickResult)):(this._previousStartingPointerTime=0,this._doubleClickOccured=!0,clickInfo.doubleClick=!0,clickInfo.ignore=!1,InputManager.ExclusiveDoubleClickMode&&this._delayedClicks[checkPicking]&&(clearTimeout(null===(_a=this._delayedClicks[checkPicking])||void 0===_a?void 0:_a.timeoutId),this._delayedClicks[checkPicking]=null),cb(clickInfo,this._currentPickResult)),needToIgnoreNext=
!0):(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=checkPicking))}needToIgnoreNext||cb(clickInfo,this._currentPickResult)};this._onPointerMove=evt=>{this._updatePointerPosition(evt);this._isSwiping||-1===this._swipeButtonPressed||(this._isSwiping=Math.abs(this._startingPointerPosition.x-
this._pointerX)>InputManager.DragMovementThreshold||Math.abs(this._startingPointerPosition.y-this._pointerY)>InputManager.DragMovementThreshold);engine.isPointerLock&&engine._verifyPointerLock();if(!this._checkPrePointerObservable(null,evt,evt.inputIndex>=_deviceEnums.PointerInput.MouseWheelX&&evt.inputIndex<=_deviceEnums.PointerInput.MouseWheelZ?_pointerEvents.PointerEventTypes.POINTERWHEEL:_pointerEvents.PointerEventTypes.POINTERMOVE)&&(scene.cameraToUseForPointers||scene.activeCamera))if(scene.skipPointerMovePicking)this._processPointerMove(new _pickingInfo.PickingInfo,
evt);else{scene.pointerMovePredicate||(scene.pointerMovePredicate=mesh=>mesh.isPickable&&mesh.isVisible&&mesh.isReady()&&mesh.isEnabled()&&(mesh.enablePointerMoveEvents||scene.constantlyUpdateMeshUnderPointer||null!==mesh._getActionManagerForTrigger())&&(!scene.cameraToUseForPointers||0!==(scene.cameraToUseForPointers.layerMask&mesh.layerMask)));var pickResult=0<scene._registeredActions||scene.constantlyUpdateMeshUnderPointer?this._pickMove(evt):null;this._processPointerMove(pickResult,evt)}};this._onPointerDown=
evt=>{var _a;this._totalPointersPressed++;this._pickedDownMesh=null;this._meshPickProceed=!1;if(InputManager.ExclusiveDoubleClickMode)for(let i=0;i<this._delayedClicks.length;i++)if(this._delayedClicks[i])if(evt.button===i)clearTimeout(null===(_a=this._delayedClicks[i])||void 0===_a?void 0:_a.timeoutId);else{var clickInfo=this._delayedClicks[i].clickInfo;this._doubleClickOccured=!1;clickInfo.singleClick=!0;clickInfo.ignore=!1;clickInfo=_pointerEvents.PointerEventTypes.POINTERTAP;const pi=new _pointerEvents.PointerInfo(clickInfo,
this._delayedClicks[i].evt,this._currentPickResult);scene.onPointerObservable.hasObservers()&&scene.onPointerObservable.hasSpecificMask(clickInfo)&&scene.onPointerObservable.notifyObservers(pi,clickInfo);this._delayedClicks[i]=null}this._updatePointerPosition(evt);-1===this._swipeButtonPressed&&(this._swipeButtonPressed=evt.button);scene.preventDefaultOnPointerDown&&elementToAttachTo&&(evt.preventDefault(),elementToAttachTo.focus());this._startingPointerPosition.x=this._pointerX;this._startingPointerPosition.y=
this._pointerY;this._startingPointerTime=Date.now();this._checkPrePointerObservable(null,evt,_pointerEvents.PointerEventTypes.POINTERDOWN)||!scene.cameraToUseForPointers&&!scene.activeCamera||(this._pointerCaptures[evt.pointerId]=!0,scene.pointerDownPredicate||(scene.pointerDownPredicate=mesh=>mesh.isPickable&&mesh.isVisible&&mesh.isReady()&&mesh.isEnabled()&&(!scene.cameraToUseForPointers||0!==(scene.cameraToUseForPointers.layerMask&mesh.layerMask))),this._pickedDownMesh=null,_a=scene.skipPointerDownPicking||
0===scene._registeredActions&&!this._checkForPicking()&&!scene.onPointerDown?new _pickingInfo.PickingInfo:scene.pick(this._unTranslatedPointerX,this._unTranslatedPointerY,scene.pointerDownPredicate,scene.pointerDownFastCheck,scene.cameraToUseForPointers),this._processPointerDown(_a,evt))};this._onPointerUp=evt=>{0!==this._totalPointersPressed&&(this._totalPointersPressed--,this._pickedUpMesh=null,this._meshPickProceed=!1,this._updatePointerPosition(evt),scene.preventDefaultOnPointerUp&&elementToAttachTo&&
(evt.preventDefault(),elementToAttachTo.focus()),this._initClickEvent(scene.onPrePointerObservable,scene.onPointerObservable,evt,(clickInfo,pickResult)=>{if(scene.onPrePointerObservable.hasObservers()&&(this._skipPointerTap=!1,!clickInfo.ignore)){if(this._checkPrePointerObservable(null,evt,_pointerEvents.PointerEventTypes.POINTERUP)){this._swipeButtonPressed===evt.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1);return}clickInfo.hasSwiped||(clickInfo.singleClick&&scene.onPrePointerObservable.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERTAP)&&
this._checkPrePointerObservable(null,evt,_pointerEvents.PointerEventTypes.POINTERTAP)&&(this._skipPointerTap=!0),clickInfo.doubleClick&&scene.onPrePointerObservable.hasSpecificMask(_pointerEvents.PointerEventTypes.POINTERDOUBLETAP)&&this._checkPrePointerObservable(null,evt,_pointerEvents.PointerEventTypes.POINTERDOUBLETAP)&&(this._skipPointerTap=!0))}if(this._pointerCaptures[evt.pointerId]){if(0===evt.buttons&&(this._pointerCaptures[evt.pointerId]=!1),scene.cameraToUseForPointers||scene.activeCamera)scene.pointerUpPredicate||
(scene.pointerUpPredicate=mesh=>mesh.isPickable&&mesh.isVisible&&mesh.isReady()&&mesh.isEnabled()&&(!scene.cameraToUseForPointers||0!==(scene.cameraToUseForPointers.layerMask&mesh.layerMask))),!this._meshPickProceed&&(_abstractActionManager.AbstractActionManager&&_abstractActionManager.AbstractActionManager.HasTriggers||this._checkForPicking()||scene.onPointerUp)&&this._initActionManager(null,clickInfo),pickResult||(pickResult=this._currentPickResult),this._processPointerUp(pickResult,evt,clickInfo),
this._previousPickResult=this._currentPickResult,this._swipeButtonPressed===evt.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1)}else this._swipeButtonPressed===evt.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1)}))};this._onKeyDown=evt=>{const type=_keyboardEvents.KeyboardEventTypes.KEYDOWN;if(scene.onPreKeyboardObservable.hasObservers()){var pi=new _keyboardEvents.KeyboardInfoPre(type,evt);scene.onPreKeyboardObservable.notifyObservers(pi,type);if(pi.skipOnKeyboardObservable)return}scene.onKeyboardObservable.hasObservers()&&
(pi=new _keyboardEvents.KeyboardInfo(type,evt),scene.onKeyboardObservable.notifyObservers(pi,type));scene.actionManager&&scene.actionManager.processTrigger(14,_actionEvent.ActionEvent.CreateNewFromScene(scene,evt))};this._onKeyUp=evt=>{const type=_keyboardEvents.KeyboardEventTypes.KEYUP;if(scene.onPreKeyboardObservable.hasObservers()){var pi=new _keyboardEvents.KeyboardInfoPre(type,evt);scene.onPreKeyboardObservable.notifyObservers(pi,type);if(pi.skipOnKeyboardObservable)return}scene.onKeyboardObservable.hasObservers()&&
(pi=new _keyboardEvents.KeyboardInfo(type,evt),scene.onKeyboardObservable.notifyObservers(pi,type));scene.actionManager&&scene.actionManager.processTrigger(15,_actionEvent.ActionEvent.CreateNewFromScene(scene,evt))};this._deviceSourceManager.onDeviceConnectedObservable.add(deviceSource=>{deviceSource.deviceType===_deviceEnums.DeviceType.Mouse?deviceSource.onInputChangedObservable.add(eventData=>{eventData.inputIndex===_deviceEnums.PointerInput.LeftClick||eventData.inputIndex===_deviceEnums.PointerInput.MiddleClick||
eventData.inputIndex===_deviceEnums.PointerInput.RightClick||eventData.inputIndex===_deviceEnums.PointerInput.BrowserBack||eventData.inputIndex===_deviceEnums.PointerInput.BrowserForward?attachDown&&1===deviceSource.getInput(eventData.inputIndex)?this._onPointerDown(eventData):attachUp&&0===deviceSource.getInput(eventData.inputIndex)&&this._onPointerUp(eventData):attachMove&&(eventData.inputIndex===_deviceEnums.PointerInput.Move?this._onPointerMove(eventData):(eventData.inputIndex===_deviceEnums.PointerInput.MouseWheelX||
eventData.inputIndex===_deviceEnums.PointerInput.MouseWheelY||eventData.inputIndex===_deviceEnums.PointerInput.MouseWheelZ)&&this._onPointerMove(eventData))}):deviceSource.deviceType===_deviceEnums.DeviceType.Touch?deviceSource.onInputChangedObservable.add(eventData=>{eventData.inputIndex===_deviceEnums.PointerInput.LeftClick&&(attachDown&&1===deviceSource.getInput(eventData.inputIndex)?(this._onPointerDown(eventData),1<this._totalPointersPressed&&(this._isMultiTouchGesture=!0)):attachUp&&0===deviceSource.getInput(eventData.inputIndex)&&
(this._onPointerUp(eventData),0===this._totalPointersPressed&&(this._isMultiTouchGesture=!1)));attachMove&&eventData.inputIndex===_deviceEnums.PointerInput.Move&&this._onPointerMove(eventData)}):deviceSource.deviceType===_deviceEnums.DeviceType.Keyboard&&deviceSource.onInputChangedObservable.add(eventData=>{"keydown"===eventData.type?this._onKeyDown(eventData):"keyup"===eventData.type&&this._onKeyUp(eventData)})});this._alreadyAttached=!0}detachControl(){this._alreadyAttached&&(this._deviceSourceManager.dispose(),
this._deviceSourceManager=null,this._alreadyAttachedTo&&!this._scene.doNotHandleCursors&&(this._alreadyAttachedTo.style.cursor=this._scene.defaultCursor),this._alreadyAttached=!1,this._alreadyAttachedTo=null)}setPointerOverMesh(mesh,pointerId=0,pickResult,evt){if(this._meshUnderPointerId[pointerId]!==mesh||mesh&&mesh._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting){var underPointerMesh=this._meshUnderPointerId[pointerId],actionManager;underPointerMesh&&(actionManager=underPointerMesh._getActionManagerForTrigger(10))&&
actionManager.processTrigger(10,_actionEvent.ActionEvent.CreateNew(underPointerMesh,evt,{pointerId}));mesh?(this._pointerOverMesh=this._meshUnderPointerId[pointerId]=mesh,(actionManager=mesh._getActionManagerForTrigger(9))&&actionManager.processTrigger(9,_actionEvent.ActionEvent.CreateNew(mesh,evt,{pointerId,pickResult}))):(delete this._meshUnderPointerId[pointerId],this._pointerOverMesh=null)}}getPointerOverMesh(){return this.meshUnderPointer}_invalidateMesh(mesh){this._pointerOverMesh===mesh&&(this._pointerOverMesh=
null);this._pickedDownMesh===mesh&&(this._pickedDownMesh=null);this._pickedUpMesh===mesh&&(this._pickedUpMesh=null);for(const pointerId in this._meshUnderPointerId)this._meshUnderPointerId[pointerId]===mesh&&delete this._meshUnderPointerId[pointerId]}}exports.InputManager=InputManager;InputManager.DragMovementThreshold=10;InputManager.LongPressDelay=500;InputManager.DoubleClickDelay=300;InputManager.ExclusiveDoubleClickMode=!1}
//# sourceMappingURL=module$node_modules$$babylonjs$core$Inputs$scene_inputManager.js.map
