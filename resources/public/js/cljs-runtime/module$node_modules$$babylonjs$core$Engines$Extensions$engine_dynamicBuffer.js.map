{
"version":3,
"file":"module$node_modules$$babylonjs$core$Engines$Extensions$engine_dynamicBuffer.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,2EAAA,CAAgG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpIC,MAAAA,CAAcH,OAAA,CAAQ,wDAAR,CAGlBG,OAAYC,CAAAA,UAAWC,CAAAA,SAAUC,CAAAA,wBAAjC,CAA4DC,QAAS,CAACC,WAAD,CAAcC,OAAd,CAAuBC,MAAvB,CAAmC,CAEtG,IAAKC,CAAAA,mBAAL,CAAyB,IAAKC,CAAAA,GAAIC,CAAAA,oBAAlC,CAAA,CAA0D,IAC1D,KAAKC,CAAAA,eAAL,CAAqBN,WAArB,CAKEO,YAAA,CAFEP,WAAYQ,CAAAA,QAAhB,CAESP,OAAA,WAAmBQ,YAAnB,CAAiCR,OAAjC,CAA2C,IAAIQ,WAAJ,CAAgBR,OAAhB,CAFpD,CAKSA,OAAA;AAAmBS,WAAnB,CAAiCT,OAAjC,CAA2C,IAAIS,WAAJ,CAAgBT,OAAhB,CAGpD,KAAKG,CAAAA,GAAIO,CAAAA,UAAT,CAAoB,IAAKP,CAAAA,GAAIC,CAAAA,oBAA7B,CAAmDE,WAAnD,CAAyD,IAAKH,CAAAA,GAAIQ,CAAAA,YAAlE,CAEA,KAAKC,CAAAA,wBAAL,EAhBsG,CAmBxGlB,OAAYC,CAAAA,UAAWC,CAAAA,SAAUiB,CAAAA,yBAAjC,CAA6DC,QAAS,CAACC,YAAD,CAAeC,IAAf,CAAqBC,UAArB,CAAiCC,UAAjC,CAA6C,CACjH,IAAKC,CAAAA,eAAL,CAAqBJ,YAArB,CAEmBK,KAAAA,EAAnB,GAAIH,UAAJ,GACEA,UADF,CACe,CADf,CAIMI,aAAAA,CAAaL,IAAKE,CAAAA,UAAlBG,EAAgCL,IAAKM,CAAAA,MAExBF,KAAAA,EAAnB,GAAIF,UAAJ,EAAgCA,UAAhC,EAA8CG,YAA9C,EAA2E,CAA3E,GAA4DJ,UAA5D,CACMD,IAAJ,WAAoBO,MAApB,CACE,IAAKpB,CAAAA,GAAIqB,CAAAA,aAAT,CAAuB,IAAKrB,CAAAA,GAAIsB,CAAAA,YAAhC;AAA8CR,UAA9C,CAA0D,IAAIS,YAAJ,CAAiBV,IAAjB,CAA1D,CADF,CAGE,IAAKb,CAAAA,GAAIqB,CAAAA,aAAT,CAAuB,IAAKrB,CAAAA,GAAIsB,CAAAA,YAAhC,CAA8CR,UAA9C,CAA0DD,IAA1D,CAJJ,CAOMA,IAAJ,WAAoBO,MAApB,CACE,IAAKpB,CAAAA,GAAIqB,CAAAA,aAAT,CAAuB,IAAKrB,CAAAA,GAAIsB,CAAAA,YAAhC,CAA8C,CAA9C,CAAwEE,CAAvB,IAAID,YAAJ,CAAiBV,IAAjB,CAAuBW,EAAAA,QAAvB,CAAgCV,UAAhC,CAA4CA,UAA5C,CAAyDC,UAAzD,CAAjD,CADF,EAIIF,IAKF,CANIA,IAAJ,WAAoBY,YAApB,CACS,IAAIC,UAAJ,CAAeb,IAAf,CAAqBC,UAArB,CAAiCC,UAAjC,CADT,CAGS,IAAIW,UAAJ,CAAeb,IAAKc,CAAAA,MAApB,CAA4Bd,IAAKC,CAAAA,UAAjC,CAA8CA,UAA9C,CAA0DC,UAA1D,CAGT,CAAA,IAAKf,CAAAA,GAAIqB,CAAAA,aAAT,CAAuB,IAAKrB,CAAAA,GAAIsB,CAAAA,YAAhC,CAA8C,CAA9C,CAAiDT,IAAjD,CATF,CAaF,KAAKe,CAAAA,yBAAL,EA7BiH,CAzBqB;",
"sources":["node_modules/@babylonjs/core/Engines/Extensions/engine.dynamicBuffer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Engines$Extensions$engine_dynamicBuffer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _thinEngine = require(\"../../Engines/thinEngine.js\");\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_thinEngine.ThinEngine.prototype.updateDynamicIndexBuffer = function (indexBuffer, indices, offset = 0) {\n  // Force cache update\n  this._currentBoundBuffer[this._gl.ELEMENT_ARRAY_BUFFER] = null;\n  this.bindIndexBuffer(indexBuffer);\n  let view;\n\n  if (indexBuffer.is32Bits) {\n    // anything else than Uint32Array needs to be converted to Uint32Array\n    view = indices instanceof Uint32Array ? indices : new Uint32Array(indices);\n  } else {\n    // anything else than Uint16Array needs to be converted to Uint16Array\n    view = indices instanceof Uint16Array ? indices : new Uint16Array(indices);\n  }\n\n  this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER, view, this._gl.DYNAMIC_DRAW);\n\n  this._resetIndexBufferBinding();\n};\n\n_thinEngine.ThinEngine.prototype.updateDynamicVertexBuffer = function (vertexBuffer, data, byteOffset, byteLength) {\n  this.bindArrayBuffer(vertexBuffer);\n\n  if (byteOffset === undefined) {\n    byteOffset = 0;\n  }\n\n  const dataLength = data.byteLength || data.length;\n\n  if (byteLength === undefined || byteLength >= dataLength && byteOffset === 0) {\n    if (data instanceof Array) {\n      this._gl.bufferSubData(this._gl.ARRAY_BUFFER, byteOffset, new Float32Array(data));\n    } else {\n      this._gl.bufferSubData(this._gl.ARRAY_BUFFER, byteOffset, data);\n    }\n  } else {\n    if (data instanceof Array) {\n      this._gl.bufferSubData(this._gl.ARRAY_BUFFER, 0, new Float32Array(data).subarray(byteOffset, byteOffset + byteLength));\n    } else {\n      if (data instanceof ArrayBuffer) {\n        data = new Uint8Array(data, byteOffset, byteLength);\n      } else {\n        data = new Uint8Array(data.buffer, data.byteOffset + byteOffset, byteLength);\n      }\n\n      this._gl.bufferSubData(this._gl.ARRAY_BUFFER, 0, data);\n    }\n  }\n\n  this._resetVertexBufferBinding();\n};\n};"],
"names":["shadow$provide","global","require","module","exports","_thinEngine","ThinEngine","prototype","updateDynamicIndexBuffer","_thinEngine.ThinEngine.prototype.updateDynamicIndexBuffer","indexBuffer","indices","offset","_currentBoundBuffer","_gl","ELEMENT_ARRAY_BUFFER","bindIndexBuffer","view","is32Bits","Uint32Array","Uint16Array","bufferData","DYNAMIC_DRAW","_resetIndexBufferBinding","updateDynamicVertexBuffer","_thinEngine.ThinEngine.prototype.updateDynamicVertexBuffer","vertexBuffer","data","byteOffset","byteLength","bindArrayBuffer","undefined","dataLength","length","Array","bufferSubData","ARRAY_BUFFER","Float32Array","subarray","ArrayBuffer","Uint8Array","buffer","_resetVertexBufferBinding"]
}
