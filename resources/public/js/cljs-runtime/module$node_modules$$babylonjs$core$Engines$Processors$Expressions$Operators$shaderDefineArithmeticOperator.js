shadow$provide.module$node_modules$$babylonjs$core$Engines$Processors$Expressions$Operators$shaderDefineArithmeticOperator=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.ShaderDefineArithmeticOperator=void 0;global=require("module$node_modules$$babylonjs$core$Engines$Processors$Expressions$shaderDefineExpression");class ShaderDefineArithmeticOperator extends global.ShaderDefineExpression{constructor(define,operand,testValue){super();this.define=
define;this.operand=operand;this.testValue=testValue}isTrue(preprocessors){var value=preprocessors[this.define];void 0===value&&(value=this.define);preprocessors=!1;value=parseInt(value);const right=parseInt(this.testValue);switch(this.operand){case "\x3e":preprocessors=value>right;break;case "\x3c":preprocessors=value<right;break;case "\x3c\x3d":preprocessors=value<=right;break;case "\x3e\x3d":preprocessors=value>=right;break;case "\x3d\x3d":preprocessors=value===right;break;case "!\x3d":preprocessors=
value!==right}return preprocessors}}exports.ShaderDefineArithmeticOperator=ShaderDefineArithmeticOperator}
//# sourceMappingURL=module$node_modules$$babylonjs$core$Engines$Processors$Expressions$Operators$shaderDefineArithmeticOperator.js.map
