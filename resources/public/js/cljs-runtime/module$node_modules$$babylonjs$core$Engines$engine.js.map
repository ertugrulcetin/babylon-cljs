{
"version":3,
"file":"module$node_modules$$babylonjs$core$Engines$engine.js",
"lineCount":57,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,MAAR,CAAiB,IAAK,EAEtB,KAAIC,YAAcP,OAAA,CAAQ,qDAAR,CAAlB,CAEIQ,iBAAmBR,OAAA,CAAQ,wEAAR,CAFvB,CAIIS,eAAiBT,OAAA,CAAQ,wDAAR,CAJrB,CAMIU,aAAeV,OAAA,CAAQ,yDAAR,CANnB;AAQIW,UAAYX,OAAA,CAAQ,mDAAR,CARhB,CAUIY,YAAcZ,OAAA,CAAQ,wDAAR,CAVlB,CAYIa,oBAAsBb,OAAA,CAAQ,6DAAR,CAZ1B,CAcIc,aAAed,OAAA,CAAQ,sDAAR,CAdnB,CAgBIe,iBAAmBf,OAAA,CAAQ,kEAAR,CAhBvB,CAkBIgB,QAAUhB,OAAA,CAAQ,iDAAR,CAlBd,CAoBIiB,sBAAwBjB,OAAA,CAAQ,wEAAR,CAE5BA;OAAA,CAAQ,qEAAR,CAEAA,QAAA,CAAQ,2EAAR,CAEAA,QAAA,CAAQ,6EAAR,CAKA,MAAMM,OAAN,QAAqBM,YAAYM,CAAAA,UAAjC,CAKa,qBAAa,EAAA,CACtB,MAAON,YAAYM,CAAAA,UAAWC,CAAAA,UADR,CAQb,kBAAU,EAAA,CACnB,MAAOP,YAAYM,CAAAA,UAAWE,CAAAA,OADX,CAMV,oBAAY,EAAA,CACrB,MAAOV,aAAaW,CAAAA,WAAYC,CAAAA,SADX,CAQZ,4BAAoB,EAAA,CAC7B,MAAOZ,aAAaW,CAAAA,WAAYE,CAAAA,iBADH,CAQpB,2BAAmB,EAAA,CAC5B,MAAOb,aAAaW,CAAAA,WAAYG,CAAAA,gBADJ,CAa9BC,4BAA4B,CAACC,WAAD;AAAcC,OAAd,CAAuB,CAkBjD,MAjBgBC,KAAIC,OAAJD,CAAY,CAACE,OAAD,CAAUC,MAAV,CAAA,EAAqB,CAC/C,MAAMC,MAAQ,IAAIC,KAElBD,MAAME,CAAAA,MAAN,CAAe,EAAAC,EAAM,CACnBH,KAAMI,CAAAA,MAAN,EAAeC,CAAAA,IAAf,CAAoB,EAAA,EAAM,CACxB,IAAKC,CAAAA,iBAAL,CAAuBN,KAAvB,CAA8BL,OAA9B,CAAuCU,CAAAA,IAAvC,CAA4CE,WAAA,EAAe,CACzDT,OAAA,CAAQS,WAAR,CADyD,CAA3D,CADwB,CAA1B,CADmB,CAQrBP,MAAMQ,CAAAA,OAAN,CAAgB,EAAAC,EAAM,CACpBV,MAAA,CAAQ,uBAAsBC,KAAMU,CAAAA,GAA5B,EAAR,CADoB,CAItBV,MAAMU,CAAAA,GAAN,CAAYhB,WAfmC,CAAjCE,CADiC,CA4BnDU,iBAAiB,CAACN,KAAD,CAAQL,OAAR,CAAiB,CAChC,MAAOW,kBAAA,CAAkBN,KAAlB,CAAyBL,OAAzB,CADyB,CAYlCgB,iBAAiB,CAACX,KAAD,CAAQY,WAAR,CAAqBC,YAArB,CAAmC,CAElD,MAAMC,QADS,IAAKC,CAAAA,YAALC,CAAkBJ,WAAlBI,CAA+BH,YAA/BG,CACQC,CAAAA,UAAP,CAAkB,IAAlB,CAEhB,IAAI,CAACH,OAAL,CACE,KAAUI,MAAJ,CAAU,gDAAV,CAAN;AAGFJ,OAAQK,CAAAA,SAAR,CAAkBnB,KAAlB,CAAyB,CAAzB,CAA4B,CAA5B,CAIA,OADec,QAAQM,CAAAA,YAAR,CAAqB,CAArB,CAAwB,CAAxB,CAA2BR,WAA3B,CAAwCC,YAAxC,CAAsDQ,CAAAA,IAXnB,CAqB7CC,8BAAuB,CAACC,IAAD,CAAOC,SAAP,CAAkB,CAC9C,IAAK,IAAIC,YAAc,CAAvB,CAA0BA,WAA1B,CAAwCnD,MAAOgB,CAAAA,SAAUoC,CAAAA,MAAzD,CAAiED,WAAA,EAAjE,CAAgF,CAC9E,MAAME,OAASrD,MAAOgB,CAAAA,SAAP,CAAiBmC,WAAjB,CAEf,KAAK,IAAIG,WAAa,CAAtB,CAAyBA,UAAzB,CAAsCD,MAAOE,CAAAA,MAAOH,CAAAA,MAApD,CAA4DE,UAAA,EAA5D,CACED,MAAOE,CAAAA,MAAP,CAAcD,UAAd,CAA0BE,CAAAA,uBAA1B,CAAkDP,IAAlD,CAAwDC,SAAxD,CAJ4E,CADlC,CAkBzCO,kCAA2B,CAACf,MAAD,CAAS,CACzC,KAAM,GAAIrC,SAAUqD,CAAAA,WAAd,EAA2B,eAA3B,CAAN,CADyC,CAIvC,qCAAoC,EAAA,CACtC,MAAO,CAAC,CAAC1D,MAAO2D,CAAAA,0BADsB,CASpC,sBAAqB,EAAA,CACvB,MAAO,KAAKpD,CAAAA,mBADW,CAUrB,qBAAoB,EAAA,CACtB,MAAO,KAAKqD,CAAAA,kBADU,CAIpB,qBAAiB,CAACC,IAAD,CAAO,CAE1B,IAAKD,CAAAA,kBAAL;AAA0B,CAAA,CAFA,CAW5BE,eAAe,EAAG,CAChB,MAAO,KAAKC,CAAAA,gBADI,CAYlBC,WAAW,CAACC,eAAD,CAAkBC,SAAlB,CAA6B7C,OAA7B,CAAsC8C,kBAAA,CAAqB,CAAA,CAA3D,CAAkE,CAC3E,KAAA,CAAMF,eAAN,CAAuBC,SAAvB,CAAkC7C,OAAlC,CAA2C8C,kBAA3C,CAWA,KAAKC,CAAAA,oBAAL,CALA,IAAKC,CAAAA,oBAKL,CAL4B,CAAA,CAU5B,KAAKC,CAAAA,kBAAL,CAA0B,CAAA,CAK1B,KAAKf,CAAAA,MAAL,CAAc,EAGd,KAAKgB,CAAAA,cAAL,CAAsB,EAKtB,KAAKC,CAAAA,yBAAL,CAAiC,IAAIvE,WAAYwE,CAAAA,UAKjD,KAAKC,CAAAA,aAAL,CAAqB,EAKrB,KAAKC,CAAAA,aAAL,CAAqB,CAAA,CAMrB,KAAKC,CAAAA,kBAAL,CAA0B,IAAI3E,WAAYwE,CAAAA,UAK1C,KAAKI,CAAAA,sBAAL,CAA8B,IAAI5E,WAAYwE,CAAAA,UAK9C;IAAKK,CAAAA,uBAAL,CAA+B,IAAI7E,WAAYwE,CAAAA,UAK/C,KAAKM,CAAAA,4BAAL,CAAoC,IAAI9E,WAAYwE,CAAAA,UAKpD,KAAKO,CAAAA,sBAAL,CAA8B,IAAI/E,WAAYwE,CAAAA,UAK9C,KAAKQ,CAAAA,6BAAL,CAAqC,IAKrC,KAAKC,CAAAA,oBAAL,CAA4B,IAAIjF,WAAYwE,CAAAA,UAK5C,KAAKU,CAAAA,mCAAL,CAA2C,IAAIlF,WAAYwE,CAAAA,UAK3D,KAAKW,CAAAA,kCAAL,CAA0C,IAAInF,WAAYwE,CAAAA,UAE1D,KAAKY,CAAAA,sBAAL,CAA8B,CAAA,CAC9B,KAAKC,CAAAA,iBAAL,CAAyB,CACzB,KAAKC,CAAAA,SAAL,CAAiB,CAAjB,CAAqB,EAErB,KAAKC,CAAAA,IAAL,CAAY,EACZ,KAAKC,CAAAA,UAAL;AAAkB,CAGlB,KAAKC,CAAAA,UAAL,CAAkB,IAAIlF,YAAamF,CAAAA,WAGnC,KAAKC,CAAAA,cAAL,CAAsB,CAKtB,KAAKC,CAAAA,qCAAL,CAA6C,CAAA,CAC7C,KAAKtF,CAAAA,mBAAL,CAA2B,IAAIA,mBAAoBuF,CAAAA,kBACnD,KAAKlC,CAAAA,kBAAL,CAA0B,CAAA,CAK1B,KAAKmC,CAAAA,mBAAL,CAA2B,CAC3B,KAAKC,CAAAA,gBAAL,CAAwB,CAAC,MAAD,CACxBhG,OAAOgB,CAAAA,SAAUiF,CAAAA,IAAjB,CAAsB,IAAtB,CAEKhC,gBAAL,GAIA,IAAKiC,CAAAA,SAAUC,CAAAA,mBAcf,CAdqC,CAAA,CAcrC,CAbA9E,OAaA,CAbU,IAAK+E,CAAAA,gBAaf,CAXInC,eAAgBtB,CAAAA,UAWpB,GARE,IAAK0D,CAAAA,WAAL,CAFepC,eAEf,CAEA,CAAA,IAAKqC,CAAAA,gBAAL,EAMF,EAFA,IAAKC,CAAAA,mBAAL,EAEA,CAAIlF,OAAQmF,CAAAA,eAAZ;AACE,IAAKC,CAAAA,SAAL,EAnBF,CAnH2E,CA0I7EC,cAAc,EAAG,CACf,KAAMA,CAAAA,cAAN,EAEA,KAAKC,CAAAA,mBAAL,CAA2B,IAHZ,CAWjBN,WAAW,CAAC3D,MAAD,CAAS,CAClB,KAAM2D,CAAAA,WAAN,CAAkB3D,MAAlB,CAEA,KAAKkE,CAAAA,cAAL,CAAsB,EAAAC,EAAM,CAC1B,IAAK/B,CAAAA,uBAAwBgC,CAAAA,eAA7B,CAA6C,IAA7C,CAD0B,CAI5B,KAAKC,CAAAA,aAAL,CAAqB,EAAAC,EAAM,CACzB,IAAKnC,CAAAA,sBAAuBiC,CAAAA,eAA5B,CAA4C,IAA5C,CADyB,CAI3B,KAAKG,CAAAA,oBAAL,CAA4BC,GAAAC,EAAO,CAC7B,IAAK7C,CAAAA,kBAAT,EACE4C,GAAIE,CAAAA,cAAJ,EAF+B,CAMnC1E,OAAO2E,CAAAA,gBAAP,CAAwB,OAAxB,CAAiC,IAAKT,CAAAA,cAAtC,CACAlE,OAAO2E,CAAAA,gBAAP,CAAwB,MAAxB,CAAgC,IAAKN,CAAAA,aAArC,CACArE,OAAO2E,CAAAA,gBAAP,CAAwB,aAAxB;AAAuC,IAAKJ,CAAAA,oBAA5C,CAEA,KAAKK,CAAAA,OAAL,CAAe,EAAAC,EAAM,CACf,IAAK1B,CAAAA,qCAAT,EACE,IAAKtF,CAAAA,mBAAoBiH,CAAAA,OAAzB,EAGF,KAAKC,CAAAA,mBAAL,CAA2B,CAAA,CALR,CAQrB,KAAKC,CAAAA,QAAL,CAAgB,EAAAC,EAAM,CAChB,IAAK9B,CAAAA,qCAAT,EACE,IAAKtF,CAAAA,mBAAoBqH,CAAAA,MAAzB,EAGF,KAAKH,CAAAA,mBAAL,CAA2B,CAAA,CALP,CAQtB,KAAKI,CAAAA,mBAAL,CAA2BC,EAAAC,EAAM,CAG3BC,QAASC,CAAAA,gBAAT,CAA0BH,EAAGI,CAAAA,OAA7B,CAAsCJ,EAAGK,CAAAA,OAAzC,CAAJ,GAA0DzF,MAA1D,EACE,IAAKqC,CAAAA,4BAA6B+B,CAAAA,eAAlC,CAAkDgB,EAAlD,CAJ6B,CAQjC,OAAMM,WAAa,IAAKC,CAAAA,aAAL,EAEfD,WAAJ,EAAyD,UAAzD,GAAkB,MAAOA,WAAWf,CAAAA,gBAApC;CACEe,UAAWf,CAAAA,gBAAX,CAA4B,MAA5B,CAAoC,IAAKC,CAAAA,OAAzC,CACA,CAAAc,UAAWf,CAAAA,gBAAX,CAA4B,OAA5B,CAAqC,IAAKK,CAAAA,QAA1C,CAFF,CAKAhF,OAAO2E,CAAAA,gBAAP,CAAwB,YAAxB,CAAsC,IAAKQ,CAAAA,mBAA3C,CAEK,KAAKzB,CAAAA,gBAAiBkC,CAAAA,sBAA3B,EACE,IAAKC,CAAAA,mBAAL,EAIE,EAACvI,MAAOwI,CAAAA,WAAZ,EAA2B,IAAKpC,CAAAA,gBAAiBoC,CAAAA,WAAjD,EAAgExI,MAAOyI,CAAAA,kBAAvE,GACEzI,MAAOwI,CAAAA,WADT,CACuBxI,MAAOyI,CAAAA,kBAAP,CAA0B,IAAKC,CAAAA,kBAAL,EAA1B,CAAqD,IAAKC,CAAAA,eAAL,EAArD,CAA6E,IAAKC,CAAAA,mBAAL,EAA7E,CADvB,CAII,IAAIzI,cAAe0I,CAAAA,mBAAnB,GAAJ,GAEE,IAAKC,CAAAA,mBAgBL;AAhB2B,EAAAC,EAAM,CAG/B,CAFA,IAAKC,CAAAA,YAEL,CAFoB,CAAC,CAAChB,QAASiB,CAAAA,iBAE/B,GAAyB,IAAKC,CAAAA,qBAA9B,EAAuDxG,MAAvD,EACE1C,MAAOmJ,CAAAA,mBAAP,CAA2BzG,MAA3B,CAJ6B,CAgBjC,CARAsF,QAASX,CAAAA,gBAAT,CAA0B,kBAA1B,CAA8C,IAAKyB,CAAAA,mBAAnD,CAAwE,CAAA,CAAxE,CAQA,CAPAd,QAASX,CAAAA,gBAAT,CAA0B,wBAA1B,CAAoD,IAAKyB,CAAAA,mBAAzD,CAA8E,CAAA,CAA9E,CAOA,CALA,IAAKM,CAAAA,oBAKL,CAL4B,EAAAC,EAAM,CAChC,IAAK1E,CAAAA,aAAL,CAAqBqD,QAASsB,CAAAA,kBAA9B,GAAqD5G,MADrB,CAKlC,CADAsF,QAASX,CAAAA,gBAAT,CAA0B,mBAA1B,CAA+C,IAAK+B,CAAAA,oBAApD,CAA0E,CAAA,CAA1E,CACA,CAAApB,QAASX,CAAAA,gBAAT,CAA0B,yBAA1B,CAAqD,IAAK+B,CAAAA,oBAA1D;AAAgF,CAAA,CAAhF,CAlBF,CAqBA,KAAK/E,CAAAA,oBAAL,CAA8DkF,IAAAA,EAA9D,GAA4BvJ,MAAOwJ,CAAAA,sBACnC,KAAKnE,CAAAA,sBAAL,CAA8B,CAAC,CAAC,IAAKe,CAAAA,gBAAiBqD,CAAAA,qBACtD,KAAKnE,CAAAA,iBAAL,CAAyB,IAAKc,CAAAA,gBAAiBsD,CAAAA,gBAA/C,EAAmE,CACnE,KAAKnE,CAAAA,SAAL,CAAiB,IAAKa,CAAAA,gBAAiBuD,CAAAA,QAAvC,EAAmD,CAAnD,CAAuD,EAvFrC,CA4FpBC,kBAAkB,EAAG,CACnB,IAAIC,EAEiC,KAArC,IAACA,EAAD,CAAM,IAAKT,CAAAA,oBAAX,GAAoD,IAAK,EAAzD,GAA6CS,EAA7C,CAA6D,IAAK,EAAlE,CAAsEA,EAAGC,CAAAA,IAAH,CAAQ,IAAR,CAHnD,CAarBC,cAAc,CAACC,aAAD,CAAgBC,SAAA,CAAY,CAAA,CAA5B,CAAmC,CACzCC,aAAAA,CAAWF,aAAcE,CAAAA,QAC/B,OAAO,KAAKC,CAAAA,cAAL,CAAoBF,SAApB,CAAP,CAAwCC,aAASE,CAAAA,KAAjD,EAA0D,IAAKC,CAAAA,eAAL,CAAqBJ,SAArB,CAA1D;AAA4FC,aAASI,CAAAA,MAArG,CAF+C,CAUjDC,oBAAoB,EAAG,CACrB,MAAO,KAAKJ,CAAAA,cAAL,CAAoB,CAAA,CAApB,CAAP,CAAmC,IAAKE,CAAAA,eAAL,CAAqB,CAAA,CAArB,CADd,CASvBG,4BAA4B,EAAG,CAC7B,MAAK,KAAKzG,CAAAA,gBAAV,CAIO,IAAKA,CAAAA,gBAAiB0G,CAAAA,qBAAtB,EAJP,CACS,IAFoB,CAa/BC,yBAAyB,EAAG,CAC1B,MAAK,KAAK3G,CAAAA,gBAAV,CAIO,IAAKD,CAAAA,eAAL,EAAuB2G,CAAAA,qBAAvB,EAJP,CACS,IAFiB,CAc5BE,uBAAuB,EAAG,CACxB,MAAO,KAAKtF,CAAAA,sBADY,CAU1BuF,mBAAmB,EAAG,CACpB,MAAO,KAAKtF,CAAAA,iBADQ,CAStBuF,WAAW,EAAG,CACZ,MAAwB,IAAxB,CAAO,IAAKtF,CAAAA,SADA,CAUduF,yBAAyB,CAACC,OAAD;AAAUC,MAAA,CAAS,CAAA,CAAnB,CAAyB,CAChD,GAAID,OAAQE,CAAAA,eAAZ,CAA6B,CAC3B,MAAMC,GAAK,IAAKC,CAAAA,GAEhB,KAAKC,CAAAA,oBAAL,CAA0BF,EAAGG,CAAAA,gBAA7B,CAA+CN,OAA/C,CAAwD,CAAA,CAAxD,CAEAG,GAAGI,CAAAA,cAAH,CAAkBJ,EAAGG,CAAAA,gBAArB,CAEIL,OAAJ,EACE,IAAKI,CAAAA,oBAAL,CAA0BF,EAAGG,CAAAA,gBAA7B,CAA+C,IAA/C,CARyB,CADmB,CAqBlDE,aAAa,EAAG,CACd,MAAO,KAAKC,CAAAA,kBAAmBC,CAAAA,SADjB,CAShBC,aAAa,CAAC9D,MAAD,CAAS,CACpB,IAAK4D,CAAAA,kBAAmBC,CAAAA,SAAxB,CAAoC7D,MADhB,CAStB+D,gBAAgB,EAAG,CACjB,MAAO,KAAKC,CAAAA,aAAcC,CAAAA,WADT,CASnBC,gBAAgB,CAAClE,MAAD,CAAS,CACvB,IAAKgE,CAAAA,aAAcC,CAAAA,WAAnB,CAAiCjE,MADV,CASzBmE,cAAc,EAAG,CACf,MAAO,KAAKH,CAAAA,aAAcI,CAAAA,WADX,CASjBC,cAAc,CAACC,IAAD,CAAO,CACnB,IAAKN,CAAAA,aAAcI,CAAAA,WAAnB;AAAiCE,IADd,CASrBC,kBAAkB,EAAG,CACnB,MAAO,KAAKP,CAAAA,aAAcQ,CAAAA,WADP,CASrBC,2BAA2B,EAAG,CAC5B,MAAO,KAAKT,CAAAA,aAAcU,CAAAA,cADE,CAS9BC,sBAAsB,EAAG,CACvB,MAAO,KAAKX,CAAAA,aAAcY,CAAAA,eADH,CASzBC,kBAAkB,CAACL,WAAD,CAAc,CAC9B,IAAKR,CAAAA,aAAcQ,CAAAA,WAAnB,CAAiCA,WADH,CAShCM,2BAA2B,CAACC,SAAD,CAAY,CACrC,IAAKf,CAAAA,aAAcU,CAAAA,cAAnB,CAAoCK,SADC,CASvCC,sBAAsB,CAACV,IAAD,CAAO,CAC3B,IAAKN,CAAAA,aAAcY,CAAAA,eAAnB,CAAqCN,IADV,CAS7BW,uBAAuB,EAAG,CACxB,MAAO,KAAKjB,CAAAA,aAAckB,CAAAA,oBADF,CAS1BC,4BAA4B,EAAG,CAC7B,MAAO,KAAKnB,CAAAA,aAAcoB,CAAAA,kBADG,CAS/BC,uBAAuB,EAAG,CACxB,MAAO,KAAKrB,CAAAA,aAAcsB,CAAAA,yBADF,CAS1BC,uBAAuB,CAACC,SAAD,CAAY,CACjC,IAAKxB,CAAAA,aAAckB,CAAAA,oBAAnB;AAA0CM,SADT,CASnCC,4BAA4B,CAACD,SAAD,CAAY,CACtC,IAAKxB,CAAAA,aAAcoB,CAAAA,kBAAnB,CAAwCI,SADF,CASxCE,uBAAuB,CAACF,SAAD,CAAY,CACjC,IAAKxB,CAAAA,aAAcsB,CAAAA,yBAAnB,CAA+CE,SADd,CASnCG,iBAAiB,CAACxN,KAAD,CAAQ,CACnBA,KAAJ,CACE,IAAKoL,CAAAA,GAAIvD,CAAAA,MAAT,CAAgB,IAAKuD,CAAAA,GAAIqC,CAAAA,MAAzB,CADF,CAGE,IAAKrC,CAAAA,GAAI3D,CAAAA,OAAT,CAAiB,IAAK2D,CAAAA,GAAIqC,CAAAA,MAA1B,CAJqB,CAazBC,kBAAkB,CAAC1N,KAAD,CAAQ,CACpBA,KAAJ,CACE,IAAKoL,CAAAA,GAAI3D,CAAAA,OAAT,CAAiB,IAAK2D,CAAAA,GAAIuC,CAAAA,kBAA1B,CADF,CAGE,IAAKvC,CAAAA,GAAIvD,CAAAA,MAAT,CAAgB,IAAKuD,CAAAA,GAAIuC,CAAAA,kBAAzB,CAJsB,CAa1BC,gBAAgB,EAAG,CACjB,MAAO,KAAKnC,CAAAA,kBAAmBoC,CAAAA,SADd,CASnBC,gBAAgB,CAACD,SAAD,CAAY,CAC1B,IAAKpC,CAAAA,kBAAmBoC,CAAAA,SAAxB;AAAoCA,SADV,CAQ5BE,yBAAyB,EAAG,CAC1B,IAAKD,CAAAA,gBAAL,CAAsB,GAAtB,CAD0B,CAQ5BE,gCAAgC,EAAG,CACjC,IAAKF,CAAAA,gBAAL,CAAsB,GAAtB,CADiC,CAQnCG,sBAAsB,EAAG,CACvB,IAAKH,CAAAA,gBAAL,CAAsB,GAAtB,CADuB,CAQzBI,6BAA6B,EAAG,CAC9B,IAAKJ,CAAAA,gBAAL,CAAsB,GAAtB,CAD8B,CAQhCK,iBAAiB,EAAG,CAClB,IAAKC,CAAAA,oBAAL,CAA4B,IAAKxC,CAAAA,gBAAL,EAC5B,KAAKyC,CAAAA,sBAAL,CAA8B,IAAKjC,CAAAA,kBAAL,EAC9B,KAAKkC,CAAAA,kBAAL,CAA0B,IAAKtC,CAAAA,cAAL,EAC1B,KAAKuC,CAAAA,2BAAL,CAAmC,IAAKrB,CAAAA,uBAAL,EACnC,KAAKsB,CAAAA,2BAAL;AAAmC,IAAK1B,CAAAA,uBAAL,EACnC,KAAK2B,CAAAA,gCAAL,CAAwC,IAAKzB,CAAAA,4BAAL,EACxC,KAAK0B,CAAAA,uBAAL,CAA+B,IAAKpC,CAAAA,2BAAL,EAPb,CAcpBqC,mBAAmB,EAAG,CACpB,IAAKjC,CAAAA,kBAAL,CAAwB,IAAK2B,CAAAA,sBAA7B,CACA,KAAKnC,CAAAA,cAAL,CAAoB,IAAKoC,CAAAA,kBAAzB,CACA,KAAKvC,CAAAA,gBAAL,CAAsB,IAAKqC,CAAAA,oBAA3B,CACA,KAAKb,CAAAA,uBAAL,CAA6B,IAAKgB,CAAAA,2BAAlC,CACA,KAAKnB,CAAAA,uBAAL,CAA6B,IAAKoB,CAAAA,2BAAlC,CACA,KAAKlB,CAAAA,4BAAL,CAAkC,IAAKmB,CAAAA,gCAAvC,CACA;IAAK9B,CAAAA,2BAAL,CAAiC,IAAK+B,CAAAA,uBAAtC,CAPoB,CAmBtBE,iBAAiB,CAACC,CAAD,CAAIC,CAAJ,CAAOzE,KAAP,CAAcE,MAAd,CAAsB,CACrC,MAAMwE,gBAAkB,IAAKC,CAAAA,eAC7B,KAAKA,CAAAA,eAAL,CAAuB,IAEvB,KAAKC,CAAAA,SAAL,CAAeJ,CAAf,CAAkBC,CAAlB,CAAqBzE,KAArB,CAA4BE,MAA5B,CAEA,OAAOwE,gBAN8B,CAkBvCG,YAAY,CAACL,CAAD,CAAIC,CAAJ,CAAOzE,KAAP,CAAcE,MAAd,CAAsB4E,UAAtB,CAAkC,CAC5C,IAAKC,CAAAA,aAAL,CAAmBP,CAAnB,CAAsBC,CAAtB,CAAyBzE,KAAzB,CAAgCE,MAAhC,CACA,KAAK8E,CAAAA,KAAL,CAAWF,UAAX,CAAuB,CAAA,CAAvB,CAA6B,CAAA,CAA7B,CAAmC,CAAA,CAAnC,CACA,KAAKG,CAAAA,cAAL,EAH4C,CAc9CF,aAAa,CAACP,CAAD,CAAIC,CAAJ,CAAOzE,KAAP,CAAcE,MAAd,CAAsB,CACjC,MAAMY,GAAK,IAAKC,CAAAA,GAEhBD,GAAGtD,CAAAA,MAAH,CAAUsD,EAAGoE,CAAAA,YAAb,CACApE,GAAGqE,CAAAA,OAAH,CAAWX,CAAX,CAAcC,CAAd,CAAiBzE,KAAjB,CAAwBE,MAAxB,CAJiC,CAWnC+E,cAAc,EAAG,CACf,MAAMnE,GAAK,IAAKC,CAAAA,GAChBD,GAAG1D,CAAAA,OAAH,CAAW0D,EAAGoE,CAAAA,YAAd,CAFe,CASjBE,eAAe,CAACC,YAAA;AAAe,CAAhB,CAAmB,CAChC,IAAK/J,CAAAA,UAAWgK,CAAAA,QAAhB,CAAyBD,YAAzB,CAAuC,CAAA,CAAvC,CADgC,CAUlChJ,SAAS,EAAG,CACV,KAAM,GAAIpG,SAAUqD,CAAAA,WAAd,EAA2B,aAA3B,CAAN,CADU,CAMZ6C,mBAAmB,EAAG,EAQtBD,gBAAgB,CAAC5D,MAAD,CAASsF,QAAT,CAAmB,EAKnC2H,cAAc,EAAG,EASjBC,SAAS,EAAG,EAQZC,cAAc,EAAG,CACf,MAAO,CAAA,CADQ,CAMjBC,eAAe,EAAG,EAOlBC,cAAc,CAACC,GAAD,CAAMC,eAAN,CAAuBC,cAAvB,CAAuC,CACnD,MAAO,KAAI3O,OAAJ,CAAY,CAACC,OAAD,CAAUC,MAAV,CAAA,EAAqB,CACtC,IAAK0O,CAAAA,SAAL,CAAeH,GAAf,CAAoBjN,IAAA,EAAQ,CAC1BvB,OAAA,CAAQuB,IAAR,CAD0B,CAA5B,CAEGwG,IAAAA,EAFH,CAEc0G,eAFd,CAE+BC,cAF/B,CAE+C,CAACE,OAAD,CAAUC,SAAV,CAAA,EAAwB,CACrE5O,MAAA,CAAO4O,SAAP,CADqE,CAFvE,CADsC,CAAjC,CAD4C,CAgBrDC,qBAAqB,CAACC,OAAD,CAAU,CAG7B,MAAA,CAFMC,OAEN,CAFgB,IAAKrF,CAAAA,GAAIsF,CAAAA,kBAAT,CAA4BF,OAA5B,CAEhB;AAIO,IAAKpF,CAAAA,GAAIuF,CAAAA,eAAT,CAAyBF,OAAA,CAAQ,CAAR,CAAzB,CAJP,CACS,IAJoB,CAgB/BG,uBAAuB,CAACJ,OAAD,CAAU,CAG/B,MAAA,CAFMC,OAEN,CAFgB,IAAKrF,CAAAA,GAAIsF,CAAAA,kBAAT,CAA4BF,OAA5B,CAEhB,EAIO,IAAKpF,CAAAA,GAAIuF,CAAAA,eAAT,CAAyBF,OAAA,CAAQ,CAAR,CAAzB,CAJP,CACS,IAJsB,CAkBjCI,sBAAsB,CAACC,OAAD,CAAUC,OAAV,CAAmB/F,OAAnB,CAA4BgG,IAA5B,CAAkC,CACtCxH,IAAAA,EAAhB,GAAIsH,OAAJ,GAIIC,OAIJ,GAHE,IAAKE,CAAAA,cAAL,CAAoBH,OAApB,CAGF,CAHiCC,OAGjC,EAAK/F,OAAL,EAAiBA,OAAQkG,CAAAA,mBAAzB,CAGE,IAAKC,CAAAA,WAAL,CAAiBL,OAAjB,CAA0B9F,OAA1B,CAAmC,CAAA,CAAnC,CAA0C,CAAA,CAA1C,CAAgDgG,IAAhD,CAHF,CACE,IAAKG,CAAAA,WAAL,CAAiBL,OAAjB,CAA0B,IAA1B,CAAgCtH,IAAAA,EAAhC,CAA2CA,IAAAA,EAA3C,CAAsDwH,IAAtD,CATF,CADsD,CAuBxDI,yBAAyB,CAACN,OAAD,CAAUO,WAAV,CAAuBL,IAAvB,CAA6B,CACpD,IAAIlH,EAEJ,KAAIwH;AAAmB,IAEnBD,YAAJ,GACMA,WAAYE,CAAAA,oBAAhB,CACED,gBADF,CACqBD,WAAYE,CAAAA,oBADjC,CAEWF,WAAYG,CAAAA,SAAUxO,CAAAA,IAAtB,CAA2BqO,WAAYI,CAAAA,wBAAvC,CAFX,GAGEH,gBAHF,CAGqBD,WAAYG,CAAAA,SAAUxO,CAAAA,IAAtB,CAA2BqO,WAAYI,CAAAA,wBAAvC,CAHrB,CADF,CAQA,KAAKC,CAAAA,YAAL,CAAkBZ,OAAlB,CAAmI,IAAxG,IAAChH,EAAD,CAA2B,IAArB,GAAAwH,gBAAA,EAAkD,IAAK,EAAvD,GAA6BA,gBAA7B,CAA2D,IAAK,EAAhE,CAAoEA,gBAAiBtG,CAAAA,OAA3F,GAAuH,IAAK,EAA5H,GAAgHlB,EAAhH,CAAgIA,EAAhI,CAAqI,IAAhK,CAAsKkH,IAAtK,CAboD,CAuBtDW,+BAA+B,CAACb,OAAD,CAAUO,WAAV,CAAuBL,IAAvB,CAA6B,CAAA,IACtDlH,EADsD,CAClD8H,EAER,KAAKF,CAAAA,YAAL,CAAkBZ,OAAlB,CAAkL,IAAvJ;CAACc,EAAD,CAAsG,IAAhG,IAAC9H,EAAD,CAAsB,IAAhB,GAAAuH,WAAA,EAAwC,IAAK,EAA7C,GAAwBA,WAAxB,CAAiD,IAAK,EAAtD,CAA0DA,WAAYQ,CAAAA,cAA5E,GAA+G,IAAK,EAApH,GAAwG/H,EAAxG,CAAwH,IAAK,EAA7H,CAAiIA,EAAGkB,CAAAA,OAA1I,GAAsK,IAAK,EAA3K,GAA+J4G,EAA/J,CAA+KA,EAA/K,CAAoL,IAA/M,CAAqNZ,IAArN,CAH0D,CAM5Dc,eAAe,EAAG,CAEhB,IAAK,MAAMC,KAAX,GAAoB,KAAKvO,CAAAA,MAAzB,CACEuO,KAAMC,CAAAA,mBAAN,EAIA,CAFAD,KAAME,CAAAA,kBAAN,EAEA,CAAAF,KAAMG,CAAAA,gBAAN,EAGF,KAAK,MAAMH,KAAX,GAAoB,KAAKvN,CAAAA,cAAzB,CACEuN,KAAMC,CAAAA,mBAAN,EAIA,CAFAD,KAAME,CAAAA,kBAAN,EAEA,CAAAF,KAAMG,CAAAA,gBAAN,EAGF,MAAMJ,CAAAA,eAAN,EAlBgB,CAuBlBK,YAAY,EAAG,CACb,IAAK,IAAIC,MAAQ,CAAjB,CAAoBA,KAApB,CAA4B,IAAKC,CAAAA,kBAAmBhP,CAAAA,MAApD,CAA4D+O,KAAA,EAA5D,CAEE,GADuB,IAAKC,CAAAA,kBAALC,CAAwBF,KAAxBE,CACvB,GAHW,CAOfC,WAAW,EAAG,CACZ,GAAI,CAAC,IAAKC,CAAAA,eAAV,CAA2B,CACzB,IAAIC;AAAe,CAAA,CAEnB,IAAI,IAAKC,CAAAA,UAAT,EAAuB,CAAC,IAAKC,CAAAA,sBAA7B,EAAuD,IAAKjL,CAAAA,mBAA5D,CACE+K,YAAA,CAAe,CAAA,CAGbA,aAAJ,GAEE,IAAKG,CAAAA,UAAL,EAQA,CANK,IAAKC,CAAAA,YAAL,EAML,EAJE,IAAKV,CAAAA,YAAL,EAIF,CAAA,IAAKW,CAAAA,QAAL,EAVF,CAPyB,CAqBU,CAArC,CAAI,IAAKT,CAAAA,kBAAmBhP,CAAAA,MAA5B,CAEM,IAAK6B,CAAAA,6BAAT,EACE,IAAKA,CAAAA,6BAA8B6N,CAAAA,SACnC,CAD+C,IAAKC,CAAAA,cAAL,CAAoB,IAAK9N,CAAAA,6BAA8BoN,CAAAA,cAAvD,EAAyE,IAAKW,CAAAA,oBAA9E,CAAoG,IAAK/N,CAAAA,6BAAzG,CAC/C,CAAA,IAAKgO,CAAAA,aAAL,CAAqB,IAAKhO,CAAAA,6BAA8B6N,CAAAA,SAF1D,EAGW,IAAKjD,CAAAA,cAAL,EAAJ;AACL,IAAKC,CAAAA,eAAL,EADK,CAGL,IAAKmD,CAAAA,aAHA,CAGgB,IAAKF,CAAAA,cAAL,CAAoB,IAAKC,CAAAA,oBAAzB,CAA+C,IAAK3K,CAAAA,aAAL,EAA/C,CARzB,CAWE,IAAK6K,CAAAA,uBAXP,CAWiC,CAAA,CAjCrB,CAuCdN,YAAY,EAAG,CACb,MAAO,CAAA,CADM,CASfO,gBAAgB,CAACC,kBAAD,CAAqB,CAC/B,IAAKpK,CAAAA,YAAT,CACE,IAAKqK,CAAAA,cAAL,EADF,CAGE,IAAKC,CAAAA,eAAL,CAAqBF,kBAArB,CAJiC,CAarCE,eAAe,CAACF,kBAAD,CAAqB,CAC7B,IAAKpK,CAAAA,YAAV,GACE,IAAKE,CAAAA,qBAEL,CAF6BkK,kBAE7B,CAAI,IAAKrP,CAAAA,gBAAT,EACE/D,MAAOuT,CAAAA,kBAAP,CAA0B,IAAKxP,CAAAA,gBAA/B,CAJJ,CADkC,CAcpCsP,cAAc,EAAG,CACX,IAAKrK,CAAAA,YAAT,EACEhJ,MAAOwT,CAAAA,eAAP,EAFa,CAUjBC,gBAAgB,EAAG,CACb,IAAK1P,CAAAA,gBAAT;AACE/D,MAAOmJ,CAAAA,mBAAP,CAA2B,IAAKpF,CAAAA,gBAAhC,CAFe,CAUnB2P,eAAe,EAAG,CAChB1T,MAAO2T,CAAAA,gBAAP,EADgB,CAQlBhB,UAAU,EAAG,CACX,IAAKiB,CAAAA,WAAL,EAEA,KAAK5O,CAAAA,sBAAuB8B,CAAAA,eAA5B,CAA4C,IAA5C,CACA,MAAM6L,CAAAA,UAAN,EAJW,CAWbE,QAAQ,EAAG,CACT,KAAMA,CAAAA,QAAN,EAEA,KAAKlD,CAAAA,cAAL,EAEA,KAAKzK,CAAAA,oBAAqB4B,CAAAA,eAA1B,CAA0C,IAA1C,CALS,CAaX+M,MAAM,CAACC,YAAA,CAAe,CAAA,CAAhB,CAAuB,CAEvB,IAAKjE,CAAAA,cAAL,EAAJ,EAIA,KAAMgE,CAAAA,MAAN,CAAaC,YAAb,CAN2B,CAiB7BC,OAAO,CAAC3J,KAAD,CAAQE,MAAR,CAAgBwJ,YAAA,CAAe,CAAA,CAA/B,CAAsC,CAK3C,GAJI,CAAC,IAAK/P,CAAAA,gBAIV,EAAI,CAAC,KAAMgQ,CAAAA,OAAN,CAAc3J,KAAd,CAAqBE,MAArB,CAA6BwJ,YAA7B,CAAL,CACE,MAAO,CAAA,CAGT,IAAI,IAAKvQ,CAAAA,MAAT,CAAiB,CACf,IAAS4O,KAAT;AAAiB,CAAjB,CAAoBA,KAApB,CAA4B,IAAK5O,CAAAA,MAAOH,CAAAA,MAAxC,CAAgD+O,KAAA,EAAhD,CAGE,IAFML,MAEGkC,CAFK,IAAKzQ,CAAAA,MAAL,CAAY4O,KAAZ,CAEL6B,CAAAA,YAAAA,CAAW,CAApB,CAAuBA,YAAvB,CAAkClC,MAAMmC,CAAAA,OAAQ7Q,CAAAA,MAAhD,CAAwD4Q,YAAA,EAAxD,CACclC,MAAMmC,CAAAA,OAANC,CAAcF,YAAdE,CACRC,CAAAA,gBAAJ,CAAuB,CAIvB,KAAKvP,CAAAA,kBAAmBwP,CAAAA,YAAxB,EAAJ,EACE,IAAKxP,CAAAA,kBAAmBkC,CAAAA,eAAxB,CAAwC,IAAxC,CAXa,CAejB,MAAO,CAAA,CAxBoC,CA2B7CuN,sBAAsB,CAACC,eAAD,CAAkB,CACTA,eAE7B,EAF6BA,eAEoB/D,CAAAA,OAAjD,EAF6B+D,eAGFC,CAAAA,iBAD3B,GAEI,IAAKC,CAAAA,uBAAL,CAJyBF,eAIyBC,CAAAA,iBAAlD,CACA,CALyBD,eAKJC,CAAAA,iBAArB,CAAyC,IAH7C,CAOA,MAAMF,CAAAA,sBAAN,CAA6BC,eAA7B,CAVsC,CAaxCG,mBAAmB,CAACH,eAAD;AAAkBI,UAAlB,CAA8BC,YAA9B,CAA4CC,OAA5C,CAAqDpS,OAArD,CAA8DqS,yBAAA,CAA4B,IAA1F,CAAgG,CACjHrS,OAAA,CAAUA,OAAV,EAAqB,IAAK2I,CAAAA,GAC1B,KAAKhG,CAAAA,mCAAoC2B,CAAAA,eAAzC,CAAyD,IAAzD,CACMyJ,gBAAAA,CAAU,KAAMkE,CAAAA,mBAAN,CAA0BH,eAA1B,CAA2CI,UAA3C,CAAuDC,YAAvD,CAAqEC,OAArE,CAA8EpS,OAA9E,CAAuFqS,yBAAvF,CAChB,KAAKzP,CAAAA,kCAAmC0B,CAAAA,eAAxC,CAAwD,IAAxD,CACA,OAAOyJ,gBAL0G,CAQnHuE,oBAAoB,CAACR,eAAD,CAAkBS,YAAlB,CAAgCC,cAAhC,CAAgDxS,OAAhD,CAAyDqS,yBAAA,CAA4B,IAArF,CAA2F,CAC7G,MAAMI,cAAgBzS,OAAQ0S,CAAAA,aAAR,EACtBZ;eAAgB/D,CAAAA,OAAhB,CAA0B0E,aAE1B,IAAI,CAACA,aAAL,CACE,KAAUrS,MAAJ,CAAU,0BAAV,CAAN,CAGFJ,OAAQ2S,CAAAA,YAAR,CAAqBF,aAArB,CAAoCF,YAApC,CACAvS,QAAQ2S,CAAAA,YAAR,CAAqBF,aAArB,CAAoCD,cAApC,CAEA,IAAwB,CAAxB,CAAI,IAAKI,CAAAA,YAAT,EAA6BP,yBAA7B,CAAwD,CACtD,MAAMN,kBAAoB,IAAKc,CAAAA,uBAAL,EAC1B,KAAKC,CAAAA,qBAAL,CAA2Bf,iBAA3B,CACA,KAAKgB,CAAAA,2BAAL,CAAiCN,aAAjC,CAAgDJ,yBAAhD,CACAP,gBAAgBC,CAAAA,iBAAhB,CAAoCA,iBAJkB,CAOxD/R,OAAQgT,CAAAA,WAAR,CAAoBP,aAApB,CAEwB;CAAxB,CAAI,IAAKG,CAAAA,YAAT,EAA6BP,yBAA7B,EACE,IAAKS,CAAAA,qBAAL,CAA2B,IAA3B,CAGFhB,gBAAgB9R,CAAAA,OAAhB,CAA0BA,OAC1B8R,gBAAgBS,CAAAA,YAAhB,CAA+BA,YAC/BT,gBAAgBU,CAAAA,cAAhB,CAAiCA,cAE5BV,gBAAgBmB,CAAAA,kBAArB,EACE,IAAKC,CAAAA,wBAAL,CAA8BpB,eAA9B,CAGF,OAAOW,cAhCsG,CAuC/GU,eAAe,CAAC5K,OAAD,CAAU,CACvB,KAAM4K,CAAAA,eAAN,CAAsB5K,OAAtB,CADuB,CAQzB6K,2BAA2B,CAACC,SAAD,CAAY,CACrC,KAAMD,CAAAA,2BAAN,CAAkCC,SAAlC,CAGA,KAAKtS,CAAAA,MAAOuS,CAAAA,OAAZ,CAAoBhE,KAAA,EAAS,CAC3BA,KAAMpN,CAAAA,aAAcoR,CAAAA,OAApB,CAA4B1E,WAAA;AAAe,CACrCA,WAAYQ,CAAAA,cAAhB,GAAmCiE,SAAnC,GACEzE,WAAYQ,CAAAA,cADd,CAC+B,IAD/B,CADyC,CAA3C,CAKAE,MAAMmC,CAAAA,OAAQ6B,CAAAA,OAAd,CAAsBC,MAAA,EAAU,CAC9BA,MAAOC,CAAAA,cAAeF,CAAAA,OAAtB,CAA8B1E,WAAA,EAAe,CACvCA,WAAJ,EACMA,WAAYQ,CAAAA,cADlB,GACqCiE,SADrC,GAEIzE,WAAYQ,CAAAA,cAFhB,CAEiC,IAFjC,CAD2C,CAA7C,CAD8B,CAAhC,CAN2B,CAA7B,CAJqC,CA2BvCqE,kBAAkB,EAAG,CACnB,MAAO,KAAKjQ,CAAAA,gBADO,CASrBkQ,wBAAwB,EAAG,CACzB,MAAO,KAAKlQ,CAAAA,gBAAL,CAAsB,IAAKD,CAAAA,mBAA3B,CADkB,CAU3BoQ,kBAAkB,CAACpF,IAAD,CAAO,CAEvB,MAAMqF,GAAK,EAAEpW,MAAOqW,CAAAA,oBACpB,KAAKrQ,CAAAA,gBAAL,CAAsBoQ,EAAtB,CAAA,CAAqC,IAAT,GAAArF,IAAA,EAA0B,IAAK,EAA/B,GAAiBA,IAAjB,CAAmCA,IAAnC,CAA0C,QACtE;MAAOqF,GAJgB,CAYzBE,mBAAmB,CAACF,EAAD,CAAK,CACtB,IAAKpQ,CAAAA,gBAAL,CAAsBoQ,EAAtB,CAAA,CAA4B7M,IAAAA,EAE5B,KAAK,IAAIgN,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAKhT,CAAAA,MAAOH,CAAAA,MAAhC,CAAwC,EAAEmT,CAA1C,CAA6C,CAC3C,MAAMzE,MAAQ,IAAKvO,CAAAA,MAAL,CAAYgT,CAAZ,CAEd,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoB1E,KAAM2E,CAAAA,MAAOrT,CAAAA,MAAjC,CAAyC,EAAEoT,CAA3C,CAA8C,CAC5C,MAAME,KAAO5E,KAAM2E,CAAAA,MAAN,CAAaD,CAAb,CAEb,IAAIE,IAAKC,CAAAA,SAAT,CACE,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,IAAKC,CAAAA,SAAUvT,CAAAA,MAAnC,CAA2C,EAAEwT,CAA7C,CACkBF,IAAKC,CAAAA,SAALE,CAAeD,CAAfC,CAERC,CAAAA,kBAAR,CAA2BV,EAA3B,CAPwC,CAHH,CAHvB,CA8BxBW,eAAe,CAACC,MAAD,CAASC,WAAT,CAAsBnF,KAAtB,CAA6BoF,cAA7B,CAA6CC,UAA7C,CAAyD,CACtE,IAAKhM,CAAAA,GAAIiM,CAAAA,aAAT,CAAuB,IAAKjM,CAAAA,GAAIkM,CAAAA,UAAhC,CAA4C,IAAKlM,CAAAA,GAAImM,CAAAA,kBAArD,CAAyE,IAAKnM,CAAAA,GAAIoM,CAAAA,MAAlF,CAEA,KAAKpM,CAAAA,GAAIiM,CAAAA,aAAT,CAAuB,IAAKjM,CAAAA,GAAIkM,CAAAA,UAAhC,CAA4C,IAAKlM,CAAAA,GAAIqM,CAAAA,kBAArD;AAAyE,IAAKrM,CAAAA,GAAIoM,CAAAA,MAAlF,CAEA,KAAKpM,CAAAA,GAAIiM,CAAAA,aAAT,CAAuB,IAAKjM,CAAAA,GAAIkM,CAAAA,UAAhC,CAA4C,IAAKlM,CAAAA,GAAIsM,CAAAA,cAArD,CAAqE,IAAKtM,CAAAA,GAAIuM,CAAAA,aAA9E,CAEA,KAAKvM,CAAAA,GAAIiM,CAAAA,aAAT,CAAuB,IAAKjM,CAAAA,GAAIkM,CAAAA,UAAhC,CAA4C,IAAKlM,CAAAA,GAAIwM,CAAAA,cAArD,CAAqE,IAAKxM,CAAAA,GAAIuM,CAAAA,aAA9E,CAEA,OAAME,IAAM,IAAKC,CAAAA,yBAAL,CAA+B,CACzCzN,MAAO6M,WAAY7M,CAAAA,KADsB,CAEzCE,OAAQ2M,WAAY3M,CAAAA,MAFqB,CAA/B,CAGT,CACDW,gBAAiB,CAAA,CADhB,CAED6M,KAAM,CAFL,CAGDC,aAAc,CAHb,CAIDC,oBAAqB,CAAA,CAJpB,CAKDC,sBAAuB,CAAA,CALtB,CAHS,CAWR,EAAC,IAAKtR,CAAAA,mBAAV,EAAiC3G,MAAO2D,CAAAA,0BAAxC,GACE,IAAKgD,CAAAA,mBADP,CAC6B3G,MAAO2D,CAAAA,0BAAP,CAAkC,IAAlC,CAD7B,CAII;IAAKgD,CAAAA,mBAAT,GACE,IAAKA,CAAAA,mBAAoBuR,CAAAA,6BAEzB,CAFyD,CAAA,CAEzD,CAAA,IAAKvR,CAAAA,mBAAoBwR,CAAAA,SAAzB,EAAqCC,CAAAA,mBAArC,CAAyD,EAAA,EAAM,CAC7D,IAAKzR,CAAAA,mBAAoB0R,CAAAA,OAAzB,CAAmCC,QAAS,CAACC,MAAD,CAAS,CACnDA,MAAO9G,CAAAA,YAAP,CAAoB,gBAApB,CAAsCuF,MAAtC,CADmD,CAIrD,KAAIwB,aAAe1G,KAEd0G,aAAL,GACEA,YADF,CACiB,IAAKjV,CAAAA,MAAL,CAAY,IAAKA,CAAAA,MAAOH,CAAAA,MAAxB,CAAiC,CAAjC,CADjB,CAIAoV,aAAaC,CAAAA,kBAAmBC,CAAAA,YAAhC,CAA6C,CAAC,IAAK/R,CAAAA,mBAAN,CAA7C,CAAyEiR,GAAzE,CAA8E,CAAA,CAA9E,CAEA,KAAKxM,CAAAA,oBAAL,CAA0B,IAAKD,CAAAA,GAAIkM,CAAAA,UAAnC,CAA+CJ,WAA/C,CAA4D,CAAA,CAA5D,CAEA,KAAK9L,CAAAA,GAAIwN,CAAAA,cAAT,CAAwB,IAAKxN,CAAAA,GAAIkM,CAAAA,UAAjC;AAA6C,CAA7C,CAAgDH,cAAhD,CAAgE,CAAhE,CAAmE,CAAnE,CAAsED,WAAY7M,CAAAA,KAAlF,CAAyF6M,WAAY3M,CAAAA,MAArG,CAA6G,CAA7G,CAEA,KAAKsO,CAAAA,iBAAL,CAAuBhB,GAAvB,CACAA,IAAIiB,CAAAA,OAAJ,EAEI1B,WAAJ,EACEA,UAAA,EArB2D,CAA/D,CAHF,CAxBsE,CA4DxE2B,MAAM,EAAG,CACP,MAAO,KAAKtT,CAAAA,IADL,CASTuT,YAAY,EAAG,CACb,MAAO,KAAKtT,CAAAA,UADC,CAIfmO,WAAW,EAAG,CACZ,IAAKrT,CAAAA,mBAAoByY,CAAAA,WAAzB,EAEA,KAAKxT,CAAAA,IAAL,CAAY,IAAKjF,CAAAA,mBAAoB0Y,CAAAA,UACrC,KAAKxT,CAAAA,UAAL,CAAkB,IAAKlF,CAAAA,mBAAoB2Y,CAAAA,sBAA3C,EAAqE,CAJzD,CAedC,gBAAgB,CAACpO,OAAD,CAAUqO,UAAA,CAAa,CAAA,CAAvB,CAA8BrB,YAAA,CAAe,CAA7C,CAAgD,CACxDsB,OAAAA,CAAkB,IAAI1Y,qBAAsB2Y,CAAAA,oBAA1B,CAA+CvO,OAA/C,CAAwD,IAAKI,CAAAA,GAA7D,CACxB,OAAMoO;AAAkB,IAAIrZ,gBAAiBsZ,CAAAA,eAArB,CAAqC,IAArC,CAA2CtZ,gBAAiBuZ,CAAAA,qBAAsBC,CAAAA,OAAlF,CAA2F,CAAA,CAA3F,CACxBH,gBAAgBI,CAAAA,gBAAhB,CAAmCN,OACnCE,gBAAgBK,CAAAA,OAAhB,CAA0B,CAAA,CAC1BL,gBAAgBM,CAAAA,UAAhB,CAA6BT,UAC7B,KAAKU,CAAAA,yBAAL,CAA+B/B,YAA/B,CAA6CwB,eAA7C,CACA,OAAOA,gBAPuD,CAchEQ,qBAAqB,CAAChP,OAAD,CAAUrJ,KAAV,CAAiBsY,SAAA,CAAY,CAA7B,CAAgCC,GAAA,CAAM,CAAtC,CAAyC,CAC5D,MAAM/O,GAAK,IAAKC,CAAAA,GAAhB,CAEM+O,YAAc,IAAKC,CAAAA,oBAAL,CAA0BpP,OAAQ+M,CAAAA,IAAlC,CAFpB,CAIMsC,OAAS,IAAKC,CAAAA,kBAAL,CAAwBtP,OAAQqP,CAAAA,MAAhC,CAJf,CAMMlD,eAAiB,IAAKoD,CAAAA,iCAAL,CAAuCvP,OAAQ+M,CAAAA,IAA/C;AAAqDsC,MAArD,CANvB,CAQMG,WAAaxP,OAAQyP,CAAAA,MAAR,CAAiBtP,EAAGG,CAAAA,gBAApB,CAAuCH,EAAGmM,CAAAA,UAE7D,KAAKjM,CAAAA,oBAAL,CAA0BmP,UAA1B,CAAsCxP,OAAtC,CAA+C,CAAA,CAA/C,CAEA,KAAK0P,CAAAA,YAAL,CAAkB1P,OAAQ2P,CAAAA,OAA1B,CAEA,KAAIC,OAASzP,EAAGmM,CAAAA,UAEZtM,QAAQyP,CAAAA,MAAZ,GACEG,MADF,CACWzP,EAAG0P,CAAAA,2BADd,CAC4CZ,SAD5C,CAIA9O,GAAG2P,CAAAA,UAAH,CAAcF,MAAd,CAAsBV,GAAtB,CAA2B/C,cAA3B,CAA2CkD,MAA3C,CAAmDF,WAAnD,CAAgExY,KAAhE,CAEA,KAAK0J,CAAAA,oBAAL,CAA0BmP,UAA1B,CAAsC,IAAtC,CAA4C,CAAA,CAA5C,CAvB4D,CAkC9DO,+BAA+B,CAAC/P,OAAD,CAAUgQ,kBAAV,CAA8B,CAC3D,GAA0B,CAA1B,GAAI,IAAK3F,CAAAA,YAAT,CACE1U,OAAQsa,CAAAA,MAAOpY,CAAAA,KAAf,CAAqB,8CAArB,CADF;IAAA,CAMA,IAAMsI,GAAK,IAAKC,CAAAA,GAEZJ,QAAQyP,CAAAA,MAAZ,EACE,IAAKpP,CAAAA,oBAAL,CAA0B,IAAKD,CAAAA,GAAIE,CAAAA,gBAAnC,CAAqDN,OAArD,CAA8D,CAAA,CAA9D,CAUA,CAR2B,CAA3B,GAAIgQ,kBAAJ,EACE7P,EAAGkM,CAAAA,aAAH,CAAiBlM,EAAGG,CAAAA,gBAApB,CAAsCH,EAAG+P,CAAAA,oBAAzC,CAA+D,GAA/D,CACA,CAAA/P,EAAGkM,CAAAA,aAAH,CAAiBlM,EAAGG,CAAAA,gBAApB,CAAsCH,EAAGgQ,CAAAA,oBAAzC,CAA+DhQ,EAAGiQ,CAAAA,IAAlE,CAFF,GAIEjQ,EAAGkM,CAAAA,aAAH,CAAiBlM,EAAGG,CAAAA,gBAApB,CAAsCH,EAAG+P,CAAAA,oBAAzC,CAA+DF,kBAA/D,CACA,CAAA7P,EAAGkM,CAAAA,aAAH,CAAiBlM,EAAGG,CAAAA,gBAApB,CAAsCH,EAAGgQ,CAAAA,oBAAzC,CAA+DhQ,EAAGkQ,CAAAA,sBAAlE,CALF,CAQA,CAAA,IAAKhQ,CAAAA,oBAAL,CAA0B,IAAKD,CAAAA,GAAIE,CAAAA,gBAAnC,CAAqD,IAArD,CAXF,GAaE,IAAKD,CAAAA,oBAAL,CAA0B,IAAKD,CAAAA,GAAIkM,CAAAA,UAAnC;AAA+CtM,OAA/C,CAAwD,CAAA,CAAxD,CAUA,CAR2B,CAA3B,GAAIgQ,kBAAJ,EACE7P,EAAGkM,CAAAA,aAAH,CAAiBlM,EAAGmM,CAAAA,UAApB,CAAgCnM,EAAG+P,CAAAA,oBAAnC,CAAyD,GAAzD,CACA,CAAA/P,EAAGkM,CAAAA,aAAH,CAAiBlM,EAAGmM,CAAAA,UAApB,CAAgCnM,EAAGgQ,CAAAA,oBAAnC,CAAyDhQ,EAAGiQ,CAAAA,IAA5D,CAFF,GAIEjQ,EAAGkM,CAAAA,aAAH,CAAiBlM,EAAGmM,CAAAA,UAApB,CAAgCnM,EAAG+P,CAAAA,oBAAnC,CAAyDF,kBAAzD,CACA,CAAA7P,EAAGkM,CAAAA,aAAH,CAAiBlM,EAAGmM,CAAAA,UAApB,CAAgCnM,EAAGgQ,CAAAA,oBAAnC,CAAyDhQ,EAAGkQ,CAAAA,sBAA5D,CALF,CAQA,CAAA,IAAKhQ,CAAAA,oBAAL,CAA0B,IAAKD,CAAAA,GAAIkM,CAAAA,UAAnC,CAA+C,IAA/C,CAvBF,CA0BAtM,QAAQsQ,CAAAA,mBAAR,CAA8BN,kBAlC9B,CAD2D,CA4C7DO,qBAAqB,CAACC,QAAD,CAAW,CAC9B,IAAMC,OAAS,IAAKrQ,CAAAA,GAAIsQ,CAAAA,YAAT,EAEf,IAAI,CAACD,MAAL,CACE,KAAU5Y,MAAJ,CAAU,kCAAV,CAAN;AAGI8Y,MAAAA,CAAS,IAAIjb,gBAAiBkb,CAAAA,eAArB,CAAqCH,MAArC,CACfE,OAAOH,CAAAA,QAAP,CAAkBA,QAClB,KAAKK,CAAAA,eAAL,CAAqBF,MAArB,CAEA,KAAKvQ,CAAAA,GAAI0Q,CAAAA,UAAT,CAAoB,IAAK1Q,CAAAA,GAAI2Q,CAAAA,YAA7B,CAA2CP,QAA3C,CAAqD,IAAKpQ,CAAAA,GAAI4Q,CAAAA,YAA9D,CAEAL,OAAOM,CAAAA,UAAP,CAAoB,CACpB,OAAON,OAduB,CAsBhCO,qBAAqB,CAACT,MAAD,CAAS,CAC5B,IAAKrQ,CAAAA,GAAI+Q,CAAAA,YAAT,CAAsBV,MAAtB,CAD4B,CAI9BW,gBAAgB,CAACC,IAAD,CAAOC,KAAA,CAAQ,CAAf,CAAkBC,UAAA,CAAa,EAA/B,CAAmC,CACjD,MAAMpR,GAAK,IAAKC,CAAAA,GAChB,OAAO,KAAI5J,OAAJ,CAAY,CAACC,OAAD,CAAUC,MAAV,CAAA,EAAqB,CACtC,MAAM8a,MAAQ,EAAAA,EAAM,CAClB,MAAMC,IAAMtR,EAAGuR,CAAAA,cAAH,CAAkBL,IAAlB,CAAwBC,KAAxB,CAA+B,CAA/B,CAERG,IAAJ,EAAWtR,EAAGwR,CAAAA,WAAd,CACEjb,MAAA,EADF,CAKI+a,GAAJ,EAAWtR,EAAGyR,CAAAA,eAAd,CACEC,UAAA,CAAWL,KAAX;AAAkBD,UAAlB,CADF,CAKA9a,OAAA,EAbkB,CAgBpB+a,MAAA,EAjBsC,CAAjC,CAF0C,CA2BnDM,gBAAgB,CAACjO,CAAD,CAAIC,CAAJ,CAAOiO,CAAP,CAAUC,CAAV,CAAa3C,MAAb,CAAqBtC,IAArB,CAA2BkF,YAA3B,CAAyC,CACvD,GAAyB,CAAzB,CAAI,IAAKC,CAAAA,aAAT,CACE,KAAUra,MAAJ,CAAU,uCAAV,CAAN,CAGF,MAAMsI,GAAK,IAAKC,CAAAA,GAAhB,CACM+R,IAAMhS,EAAGuQ,CAAAA,YAAH,EACZvQ,GAAGiS,CAAAA,UAAH,CAAcjS,EAAGkS,CAAAA,iBAAjB,CAAoCF,GAApC,CACAhS,GAAG2Q,CAAAA,UAAH,CAAc3Q,EAAGkS,CAAAA,iBAAjB,CAAoCJ,YAAaK,CAAAA,UAAjD,CAA6DnS,EAAGoS,CAAAA,WAAhE,CACApS,GAAGqS,CAAAA,UAAH,CAAc3O,CAAd,CAAiBC,CAAjB,CAAoBiO,CAApB,CAAuBC,CAAvB,CAA0B3C,MAA1B,CAAkCtC,IAAlC,CAAwC,CAAxC,CACA5M,GAAGiS,CAAAA,UAAH,CAAcjS,EAAGkS,CAAAA,iBAAjB,CAAoC,IAApC,CACA,OAAMhB,KAAOlR,EAAGsS,CAAAA,SAAH,CAAatS,EAAGuS,CAAAA,0BAAhB,CAA4C,CAA5C,CAEb,IAAI,CAACrB,IAAL,CACE,MAAO,KAGTlR,GAAGwS,CAAAA,KAAH,EACA,OAAO,KAAKvB,CAAAA,gBAAL,CAAsBC,IAAtB;AAA4B,CAA5B,CAA+B,EAA/B,CAAmCra,CAAAA,IAAnC,CAAwC,EAAA,EAAM,CACnDmJ,EAAGyS,CAAAA,UAAH,CAAcvB,IAAd,CACAlR,GAAGiS,CAAAA,UAAH,CAAcjS,EAAGkS,CAAAA,iBAAjB,CAAoCF,GAApC,CACAhS,GAAG0S,CAAAA,gBAAH,CAAoB1S,EAAGkS,CAAAA,iBAAvB,CAA0C,CAA1C,CAA6CJ,YAA7C,CACA9R,GAAGiS,CAAAA,UAAH,CAAcjS,EAAGkS,CAAAA,iBAAjB,CAAoC,IAApC,CACAlS,GAAGgR,CAAAA,YAAH,CAAgBgB,GAAhB,CACA,OAAOF,aAN4C,CAA9C,CAlBgD,CA4BzDnE,OAAO,EAAG,CACR,IAAKgF,CAAAA,aAAL,EAGA,KAFA,IAAKrZ,CAAAA,yBAA0B4K,CAAAA,KAA/B,EAEA,CAAO,IAAK1K,CAAAA,aAActB,CAAAA,MAA1B,CAAA,CACE,IAAKsB,CAAAA,aAAL,CAAmB,CAAnB,CAAsBmU,CAAAA,OAAtB,EASF,KALI,IAAKlS,CAAAA,mBAKT,EAJE,IAAKA,CAAAA,mBAAoBkS,CAAAA,OAAzB,EAIF,CAAO,IAAKtV,CAAAA,MAAOH,CAAAA,MAAnB,CAAA,CACE,IAAKG,CAAAA,MAAL,CAAY,CAAZ,CAAesV,CAAAA,OAAf,EAGF,KAAA,CAAO,IAAKtU,CAAAA,cAAenB,CAAAA,MAA3B,CAAA,CACE,IAAKmB,CAAAA,cAAL,CAAoB,CAApB,CAAuBsU,CAAAA,OAAvB,EAIgD;CAAlD,GAAIzY,YAAaW,CAAAA,WAAYC,CAAAA,SAAUoC,CAAAA,MAAvC,EAAuDpD,MAAOwI,CAAAA,WAA9D,GACExI,MAAOwI,CAAAA,WAAYqQ,CAAAA,OAAnB,EACA,CAAA7Y,MAAOwI,CAAAA,WAAP,CAAqB,IAFvB,CAMA,KAAKoH,CAAAA,SAAL,EAEA,KAAMxH,WAAa,IAAKC,CAAAA,aAAL,EAEfD,WAAJ,EAA4D,UAA5D,GAAkB,MAAOA,WAAW0V,CAAAA,mBAApC,GACE1V,UAAW0V,CAAAA,mBAAX,CAA+B,MAA/B,CAAuC,IAAKxW,CAAAA,OAA5C,CACA,CAAAc,UAAW0V,CAAAA,mBAAX,CAA+B,OAA/B,CAAwC,IAAKpW,CAAAA,QAA7C,CAFF,CAKI,KAAK3D,CAAAA,gBAAT,GACE,IAAKA,CAAAA,gBAAiB+Z,CAAAA,mBAAtB,CAA0C,OAA1C,CAAmD,IAAKlX,CAAAA,cAAxD,CAMA,CAJA,IAAK7C,CAAAA,gBAAiB+Z,CAAAA,mBAAtB,CAA0C,MAA1C,CAAkD,IAAK/W,CAAAA,aAAvD,CAIA;AAFA,IAAKhD,CAAAA,gBAAiB+Z,CAAAA,mBAAtB,CAA0C,YAA1C,CAAwD,IAAKjW,CAAAA,mBAA7D,CAEA,CAAA,IAAK9D,CAAAA,gBAAiB+Z,CAAAA,mBAAtB,CAA0C,aAA1C,CAAyD,IAAK7W,CAAAA,oBAA9D,CAPF,CAUI,IAAI9G,cAAe0I,CAAAA,mBAAnB,GAAJ,GACEb,QAAS8V,CAAAA,mBAAT,CAA6B,kBAA7B,CAAiD,IAAKhV,CAAAA,mBAAtD,CAOA,CANAd,QAAS8V,CAAAA,mBAAT,CAA6B,qBAA7B,CAAoD,IAAKhV,CAAAA,mBAAzD,CAMA,CALAd,QAAS8V,CAAAA,mBAAT,CAA6B,wBAA7B,CAAuD,IAAKhV,CAAAA,mBAA5D,CAKA,CAJAd,QAAS8V,CAAAA,mBAAT,CAA6B,oBAA7B,CAAmD,IAAKhV,CAAAA,mBAAxD,CAIA;AAHAd,QAAS8V,CAAAA,mBAAT,CAA6B,mBAA7B,CAAkD,IAAK1U,CAAAA,oBAAvD,CAGA,CAFApB,QAAS8V,CAAAA,mBAAT,CAA6B,qBAA7B,CAAoD,IAAK1U,CAAAA,oBAAzD,CAEA,CADApB,QAAS8V,CAAAA,mBAAT,CAA6B,sBAA7B,CAAqD,IAAK1U,CAAAA,oBAA1D,CACA,CAAApB,QAAS8V,CAAAA,mBAAT,CAA6B,yBAA7B,CAAwD,IAAK1U,CAAAA,oBAA7D,CARF,CAWA,MAAMyP,CAAAA,OAAN,EAEM1G,WAAAA,CAAQ/R,YAAaW,CAAAA,WAAYC,CAAAA,SAAU+c,CAAAA,OAAnC,CAA2C,IAA3C,CAED,EAAb,EAAI5L,UAAJ,EACE/R,YAAaW,CAAAA,WAAYC,CAAAA,SAAUgd,CAAAA,MAAnC,CAA0C7L,UAA1C,CAAiD,CAAjD,CAIGnS,OAAOgB,CAAAA,SAAUoC,CAAAA,MAAtB,EACEhD,YAAaW,CAAAA,WAAYkd,CAAAA,2BAA4BnX,CAAAA,eAArD,CAAqE,IAArE,CAIF;IAAKlC,CAAAA,kBAAmBwK,CAAAA,KAAxB,EACA,KAAKvK,CAAAA,sBAAuBuK,CAAAA,KAA5B,EACA,KAAKtK,CAAAA,uBAAwBsK,CAAAA,KAA7B,EACA,KAAKrK,CAAAA,4BAA6BqK,CAAAA,KAAlC,EACA,KAAKpK,CAAAA,sBAAuBoK,CAAAA,KAA5B,EACA,KAAKlK,CAAAA,oBAAqBkK,CAAAA,KAA1B,EA9EQ,CAiFV7G,mBAAmB,EAAG,CACf,IAAKxE,CAAAA,gBAAV,EAA+B,IAAKA,CAAAA,gBAAiBma,CAAAA,YAArD,GAIA,IAAKna,CAAAA,gBAAiBma,CAAAA,YAAtB,CAAmC,cAAnC,CAAmD,MAAnD,CAGA,CADA,IAAKna,CAAAA,gBAAiBoa,CAAAA,KAAMC,CAAAA,WAC5B,CAD0C,MAC1C,CAAA,IAAKra,CAAAA,gBAAiBoa,CAAAA,KAAME,CAAAA,uBAA5B,CAAsD,aAPtD,CADoB,CAiBtBC,gBAAgB,EAAG,CACjB,GAAK,GAAIne,cAAeoe,CAAAA,mBAAnB,GAAL,CAAA,CAIA,IAAMC;AAAgB,IAAKA,CAAAA,aAEvBA,cAAJ,EACEA,aAAcF,CAAAA,gBAAd,EAPF,CADiB,CAiBnBT,aAAa,EAAG,CACd,GAAK,GAAI1d,cAAeoe,CAAAA,mBAAnB,GAAL,CAAA,CAIA,IAAMC,cAAgB,IAAKC,CAAAA,cAEvBD,cAAJ,EACEA,aAAcX,CAAAA,aAAd,EAPF,CADc,CAiBZ,iBAAgB,EAAA,CACd,CAAC,IAAKY,CAAAA,cAAV,EAA4B,IAAK1a,CAAAA,gBAAjC,GACE,IAAK0a,CAAAA,cADP,CACwBze,MAAOyD,CAAAA,2BAAP,CAAmC,IAAKM,CAAAA,gBAAxC,CADxB,CAIA,OAAO,KAAK0a,CAAAA,cALM,CAahB,iBAAa,CAACD,aAAD,CAAgB,CAC/B,IAAKC,CAAAA,cAAL,CAAsBD,aADS,CAS7B,iBAAa,CAACE,IAAD,CAAO,CACtB,IAAKF,CAAAA,aAAcG,CAAAA,aAAnB;AAAmCD,IADb,CASpB,4BAAwB,CAACE,KAAD,CAAQ,CAClC,IAAKJ,CAAAA,aAAcK,CAAAA,wBAAnB,CAA8CD,KADZ,CAWpCE,kBAAkB,CAACC,WAAD,CAAc,CAC9B,MAAO/W,SAASgX,CAAAA,aAAT,CAAuB,OAAvB,CADuB,CAWzB7V,0BAAmB,CAAC8V,OAAD,CAAU,CAClC,GAAIA,OAAQ7L,CAAAA,kBAAZ,CAAgC,CAG9B,MAAM9R,QAAU2d,OAAQ7L,CAAAA,kBAAR,EACZ9R,QAAJ,WAAuBC,QAAvB,CAAgCD,OAAQS,CAAAA,IAAR,CAAa,EAAA,EAAM,CACjDkd,OAAQC,CAAAA,KAAR,EADiD,CAAnB,CAE7BC,CAAAA,KAF6B,CAEvB,EAAA,EAAM,EAFiB,CAAhC,CAEwBF,OAAQC,CAAAA,KAAR,EANM,CADE,CAe7BvL,uBAAgB,EAAG,CACpB3L,QAASoX,CAAAA,eAAb,EACEpX,QAASoX,CAAAA,eAAT,EAFsB,CAWnB7L,yBAAkB,CAAC0L,OAAD,CAAU,CACjC,MAAMI;AAAkBJ,OAAQK,CAAAA,iBAA1BD,EAA+CJ,OAAQM,CAAAA,uBAExDF,gBAAL,EAIAA,eAAgBvV,CAAAA,IAAhB,CAAqBmV,OAArB,CAPiC,CAc5BzL,sBAAe,EAAG,CACvB,MAAMgM,OAASxX,QAEXA,SAASqL,CAAAA,cAAb,CACErL,QAASqL,CAAAA,cAAT,EADF,CAEWmM,MAAOC,CAAAA,sBAFlB,EAGED,MAAOC,CAAAA,sBAAP,EANqB,CAgBzBC,aAAa,CAACC,IAAD,CAAO,CAClB,MAAMjB,KAAO1W,QAASgX,CAAAA,aAAT,CAAuB,MAAvB,CACbN,KAAKkB,CAAAA,SAAL,CAAiB,IACjBlB,KAAKR,CAAAA,YAAL,CAAkB,OAAlB,CAA4B,SAAQyB,IAAR,aAA5B,CACME,KAAAA,CAAQ7X,QAASgX,CAAAA,aAAT,CAAuB,KAAvB,CACda,KAAM1B,CAAAA,KAAM2B,CAAAA,OAAZ,CAAsB,cACtBD,KAAM1B,CAAAA,KAAM/T,CAAAA,KAAZ,CAAoB,KACpByV,KAAM1B,CAAAA,KAAM7T,CAAAA,MAAZ;AAAqB,KACrBuV,KAAM1B,CAAAA,KAAM4B,CAAAA,aAAZ,CAA4B,QAC5B,OAAMC,IAAMhY,QAASgX,CAAAA,aAAT,CAAuB,KAAvB,CACZgB,IAAI7B,CAAAA,KAAM8B,CAAAA,UAAV,CAAuB,QACvBD,IAAIE,CAAAA,WAAJ,CAAgBxB,IAAhB,CACAsB,IAAIE,CAAAA,WAAJ,CAAgBL,IAAhB,CACA7X,SAASmY,CAAAA,IAAKD,CAAAA,WAAd,CAA0BF,GAA1B,CACA,KAAII,WAAa,CAAjB,CACIC,WAAa,CAEjB,IAAI,CACFA,UAEA,CAFaR,IAAMpV,CAAAA,qBAAN,EAA8B6V,CAAAA,GAE3C,CAFiD5B,IAAKjU,CAAAA,qBAAL,EAA6B6V,CAAAA,GAE9E,CADAT,IAAM1B,CAAAA,KAAM4B,CAAAA,aACZ,CAD4B,UAC5B,CAAAK,UAAA,CAAaP,IAAMpV,CAAAA,qBAAN,EAA8B6V,CAAAA,GAA3C,CAAiD5B,IAAKjU,CAAAA,qBAAL,EAA6B6V,CAAAA,GAH5E,CAAJ,OAIU,CACRtY,QAASmY,CAAAA,IAAKI,CAAAA,WAAd,CAA0BP,GAA1B,CADQ,CAIV,MAAO,CACLQ,OAAQJ,UADH,CAEL9V,OAAQ+V,UAFH,CAGLI,QAASJ,UAATI;AAAsBL,UAHjB,CAzBW,CA70DtB,CAk3DAxgB,OAAQI,CAAAA,MAAR,CAAiBA,MACjBA,OAAO0gB,CAAAA,aAAP,CAAuB,CAGvB1gB,OAAO2gB,CAAAA,SAAP,CAAmB,CAGnB3gB,OAAO4gB,CAAAA,aAAP,CAAuB,CAGvB5gB,OAAO6gB,CAAAA,cAAP,CAAwB,CAGxB7gB,OAAO8gB,CAAAA,cAAP,CAAwB,CAGxB9gB,OAAO+gB,CAAAA,eAAP,CAAyB,CAGzB/gB,OAAOghB,CAAAA,YAAP,CAAsB,CAGtBhhB,OAAOihB,CAAAA,mBAAP,CAA6B,CAM7BjhB,OAAOkhB,CAAAA,8BAAP,CAAwC,CAGxClhB,OAAOmhB,CAAAA,iBAAP,CAA2B,CAM3BnhB,OAAOohB,CAAAA,gBAAP,CAA0B,EAG1BphB,OAAOqhB,CAAAA,mBAAP,CAA6B,CAG7BrhB,OAAOshB,CAAAA,qBAAP,CAA+B,CAG/BthB,OAAOuhB,CAAAA,sBAAP,CAAgC,CAGhCvhB,OAAOwhB,CAAAA,wBAAP,CAAkC,CAIlCxhB,OAAOyhB,CAAAA,KAAP,CAAe,GAGfzhB,OAAO0hB,CAAAA,MAAP,CAAgB,GAGhB1hB,OAAO2hB,CAAAA,IAAP,CAAc,GAGd3hB,OAAO4hB,CAAAA,KAAP;AAAe,GAGf5hB,OAAO6hB,CAAAA,MAAP,CAAgB,GAGhB7hB,OAAO8hB,CAAAA,OAAP,CAAiB,GAGjB9hB,OAAO+hB,CAAAA,MAAP,CAAgB,GAGhB/hB,OAAOgiB,CAAAA,QAAP,CAAkB,GAIlBhiB,OAAOiiB,CAAAA,IAAP,CAAc,IAGdjiB,OAAOkiB,CAAAA,OAAP,CAAiB,IAGjBliB,OAAOmiB,CAAAA,IAAP,CAAc,IAGdniB,OAAOoiB,CAAAA,IAAP,CAAc,IAGdpiB,OAAOqiB,CAAAA,MAAP,CAAgB,IAGhBriB,OAAOsiB,CAAAA,SAAP,CAAmB,KAGnBtiB,OAAOuiB,CAAAA,SAAP,CAAmB,KAGnBviB,OAAOwiB,CAAAA,yBAAP,CAAmC,CAGnCxiB,OAAOyiB,CAAAA,wBAAP,CAAkC,CAGlCziB,OAAO0iB,CAAAA,0BAAP,CAAoC,CAGpC1iB,OAAO2iB,CAAAA,mBAAP,CAA6B,CAG7B3iB,OAAO4iB,CAAAA,uBAAP,CAAiC,CAGjC5iB,OAAO6iB,CAAAA,6BAAP,CAAuC,CAGvC7iB,OAAO8iB,CAAAA,iBAAP,CAA2B,CAG3B9iB,OAAO+iB,CAAAA,kBAAP,CAA4B,CAG5B/iB,OAAOgjB,CAAAA,iBAAP;AAA2B,CAG3BhjB,OAAOijB,CAAAA,eAAP,CAAyB,CAGzBjjB,OAAOkjB,CAAAA,gBAAP,CAA0B,CAG1BljB,OAAOmjB,CAAAA,yBAAP,CAAmC,CAGnCnjB,OAAOojB,CAAAA,uBAAP,CAAiC,CAGjCpjB,OAAOqjB,CAAAA,wBAAP,CAAkC,CAGlCrjB,OAAOsjB,CAAAA,yBAAP,CAAmC,EAGnCtjB,OAAOujB,CAAAA,0BAAP,CAAoC,EAGpCvjB,OAAOwjB,CAAAA,yBAAP,CAAmC,CAGnCxjB,OAAOyjB,CAAAA,wBAAP,CAAkC,CAGlCzjB,OAAO0jB,CAAAA,iBAAP,CAA2B,CAG3B1jB,OAAO2jB,CAAAA,sBAAP,CAAgC,CAGhC3jB,OAAO4jB,CAAAA,gBAAP,CAA0B,CAG1B5jB,OAAO6jB,CAAAA,iBAAP,CAA2B,CAG3B7jB,OAAO8jB,CAAAA,0BAAP,CAAoC,CAGpC9jB,OAAO+jB,CAAAA,eAAP,CAAyB,CAGzB/jB,OAAOgkB,CAAAA,4BAAP;AAAsC,CAGtChkB,OAAOikB,CAAAA,kCAAP,CAA4C,CAG5CjkB,OAAOkkB,CAAAA,kCAAP,CAA4C,CAG5ClkB,OAAOmkB,CAAAA,gCAAP,CAA0C,EAG1CnkB,OAAOokB,CAAAA,uCAAP,CAAiD,EAGjDpkB,OAAOqkB,CAAAA,6BAAP,CAAuC,EAGvCrkB,OAAOskB,CAAAA,wCAAP,CAAkD,EAGlDtkB,OAAOukB,CAAAA,oCAAP,CAA8C,EAG9CvkB,OAAOwkB,CAAAA,0CAAP,CAAoD,EAGpDxkB,OAAOykB,CAAAA,4BAAP,CAAsC,CAGtCzkB,OAAO0kB,CAAAA,6BAAP,CAAuC,CAGvC1kB,OAAO2kB,CAAAA,8BAAP,CAAwC,CAGxC3kB,OAAO4kB,CAAAA,iCAAP;AAA2C,CAG3C5kB,OAAO6kB,CAAAA,gCAAP,CAA0C,EAG1C7kB,OAAO8kB,CAAAA,+BAAP,CAAyC,CAGzC9kB,OAAO+kB,CAAAA,kCAAP,CAA4C,CAG5C/kB,OAAOglB,CAAAA,iCAAP,CAA2C,CAG3ChlB,OAAOilB,CAAAA,gCAAP,CAA0C,CAG1CjlB,OAAOklB,CAAAA,sBAAP,CAAgC,CAGhCllB,OAAOmlB,CAAAA,uBAAP,CAAiC,CAGjCnlB,OAAOolB,CAAAA,iCAAP,CAA2C,CAG3CplB,OAAOqlB,CAAAA,gCAAP,CAA0C,EAG1CrlB,OAAOslB,CAAAA,qBAAP,CAA+B,CAG/BtlB,OAAOulB,CAAAA,sBAAP,CAAgC,EAGhCvlB,OAAOwlB,CAAAA,qBAAP,CAA+B,CAG/BxlB,OAAOylB,CAAAA,sBAAP,CAAgC,CAGhCzlB,OAAO0lB,CAAAA,mBAAP;AAA6B,CAG7B1lB,OAAO2lB,CAAAA,kBAAP,CAA4B,CAG5B3lB,OAAO4lB,CAAAA,uBAAP,CAAiC,CAGjC5lB,OAAO6lB,CAAAA,mBAAP,CAA6B,CAG7B7lB,OAAO8lB,CAAAA,qBAAP,CAA+B,CAG/B9lB,OAAO+lB,CAAAA,4BAAP,CAAsC,CAGtC/lB,OAAOgmB,CAAAA,kCAAP,CAA4C,CAG5ChmB,OAAOimB,CAAAA,2CAAP,CAAqD,CAIrDjmB,OAAOkmB,CAAAA,eAAP,CAAyB,CAGzBlmB,OAAOmmB,CAAAA,iBAAP,CAA2B,CAG3BnmB,OAAOomB,CAAAA,iBAAP,CAA2B,CAK3BpmB,OAAO2D,CAAAA,0BAAP,CAAoC,IAEpC3D,OAAOqW,CAAAA,oBAAP,CAA8B,CAxrEiF;",
"sources":["node_modules/@babylonjs/core/Engines/engine.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Engines$engine\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Engine = void 0;\n\nvar _observable = require(\"../Misc/observable.js\");\n\nvar _internalTexture = require(\"../Materials/Textures/internalTexture.js\");\n\nvar _domManagement = require(\"../Misc/domManagement.js\");\n\nvar _engineStore = require(\"./engineStore.js\");\n\nvar _devTools = require(\"../Misc/devTools.js\");\n\nvar _thinEngine = require(\"./thinEngine.js\");\n\nvar _performanceMonitor = require(\"../Misc/performanceMonitor.js\");\n\nvar _perfCounter = require(\"../Misc/perfCounter.js\");\n\nvar _webGLDataBuffer = require(\"../Meshes/WebGL/webGLDataBuffer.js\");\n\nvar _logger = require(\"../Misc/logger.js\");\n\nvar _webGLHardwareTexture = require(\"./WebGL/webGLHardwareTexture.js\");\n\nrequire(\"./Extensions/engine.alpha.js\");\n\nrequire(\"./Extensions/engine.readTexture.js\");\n\nrequire(\"./Extensions/engine.dynamicBuffer.js\");\n\n/**\n * The engine class is responsible for interfacing with all lower-level APIs such as WebGL and Audio\n */\nclass Engine extends _thinEngine.ThinEngine {\n  /**\n   * Returns the current npm package of the sdk\n   */\n  // Not mixed with Version for tooling purpose.\n  static get NpmPackage() {\n    return _thinEngine.ThinEngine.NpmPackage;\n  }\n  /**\n   * Returns the current version of the framework\n   */\n\n\n  static get Version() {\n    return _thinEngine.ThinEngine.Version;\n  }\n  /** Gets the list of created engines */\n\n\n  static get Instances() {\n    return _engineStore.EngineStore.Instances;\n  }\n  /**\n   * Gets the latest created engine\n   */\n\n\n  static get LastCreatedEngine() {\n    return _engineStore.EngineStore.LastCreatedEngine;\n  }\n  /**\n   * Gets the latest created scene\n   */\n\n\n  static get LastCreatedScene() {\n    return _engineStore.EngineStore.LastCreatedScene;\n  }\n  /** @internal */\n\n  /**\n   * Engine abstraction for loading and creating an image bitmap from a given source string.\n   * @param imageSource source to load the image from.\n   * @param options An object that sets options for the image's extraction.\n   * @returns ImageBitmap.\n   */\n\n\n  _createImageBitmapFromSource(imageSource, options) {\n    const promise = new Promise((resolve, reject) => {\n      const image = new Image();\n\n      image.onload = () => {\n        image.decode().then(() => {\n          this.createImageBitmap(image, options).then(imageBitmap => {\n            resolve(imageBitmap);\n          });\n        });\n      };\n\n      image.onerror = () => {\n        reject(`Error loading image ${image.src}`);\n      };\n\n      image.src = imageSource;\n    });\n    return promise;\n  }\n  /**\n   * Engine abstraction for createImageBitmap\n   * @param image source for image\n   * @param options An object that sets options for the image's extraction.\n   * @returns ImageBitmap\n   */\n\n\n  createImageBitmap(image, options) {\n    return createImageBitmap(image, options);\n  }\n  /**\n   * Resize an image and returns the image data as an uint8array\n   * @param image image to resize\n   * @param bufferWidth destination buffer width\n   * @param bufferHeight destination buffer height\n   * @returns an uint8array containing RGBA values of bufferWidth * bufferHeight size\n   */\n\n\n  resizeImageBitmap(image, bufferWidth, bufferHeight) {\n    const canvas = this.createCanvas(bufferWidth, bufferHeight);\n    const context = canvas.getContext(\"2d\");\n\n    if (!context) {\n      throw new Error(\"Unable to get 2d context for resizeImageBitmap\");\n    }\n\n    context.drawImage(image, 0, 0); // Create VertexData from map data\n    // Cast is due to wrong definition in lib.d.ts from ts 1.3 - https://github.com/Microsoft/TypeScript/issues/949\n\n    const buffer = context.getImageData(0, 0, bufferWidth, bufferHeight).data;\n    return buffer;\n  }\n  /**\n   * Will flag all materials in all scenes in all engines as dirty to trigger new shader compilation\n   * @param flag defines which part of the materials must be marked as dirty\n   * @param predicate defines a predicate used to filter which materials should be affected\n   */\n\n\n  static MarkAllMaterialsAsDirty(flag, predicate) {\n    for (let engineIndex = 0; engineIndex < Engine.Instances.length; engineIndex++) {\n      const engine = Engine.Instances[engineIndex];\n\n      for (let sceneIndex = 0; sceneIndex < engine.scenes.length; sceneIndex++) {\n        engine.scenes[sceneIndex].markAllMaterialsAsDirty(flag, predicate);\n      }\n    }\n  }\n  /**\n   * Method called to create the default loading screen.\n   * This can be overridden in your own app.\n   * @param canvas The rendering canvas element\n   * @returns The loading screen\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  static DefaultLoadingScreenFactory(canvas) {\n    throw (0, _devTools._WarnImport)(\"LoadingScreen\");\n  }\n\n  get _supportsHardwareTextureRescaling() {\n    return !!Engine._RescalePostProcessFactory;\n  }\n  /**\n   * Gets the performance monitor attached to this engine\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/scene/optimize_your_scene#engineinstrumentation\n   */\n\n\n  get performanceMonitor() {\n    return this._performanceMonitor;\n  }\n  /**\n   * (WebGPU only) True (default) to be in compatibility mode, meaning rendering all existing scenes without artifacts (same rendering than WebGL).\n   * Setting the property to false will improve performances but may not work in some scenes if some precautions are not taken.\n   * See https://doc.babylonjs.com/setup/support/webGPU/webGPUOptimization/webGPUNonCompatibilityMode for more details\n   */\n\n\n  get compatibilityMode() {\n    return this._compatibilityMode;\n  }\n\n  set compatibilityMode(mode) {\n    // not supported in WebGL\n    this._compatibilityMode = true;\n  } // Events\n\n  /**\n   * Gets the HTML element used to attach event listeners\n   * @returns a HTML element\n   */\n\n\n  getInputElement() {\n    return this._renderingCanvas;\n  }\n  /**\n   * Creates a new engine\n   * @param canvasOrContext defines the canvas or WebGL context to use for rendering. If you provide a WebGL context, Babylon.js will not hook events on the canvas (like pointers, keyboards, etc...) so no event observables will be available. This is mostly used when Babylon.js is used as a plugin on a system which already used the WebGL context\n   * @param antialias defines enable antialiasing (default: false)\n   * @param options defines further options to be sent to the getContext() function\n   * @param adaptToDeviceRatio defines whether to adapt to the device's viewport characteristics (default: false)\n   */\n\n\n  constructor(canvasOrContext, antialias, options, adaptToDeviceRatio = false) {\n    super(canvasOrContext, antialias, options, adaptToDeviceRatio); // Members\n\n    /**\n     * Gets or sets a boolean to enable/disable IndexedDB support and avoid XHR on .manifest\n     **/\n\n    this.enableOfflineSupport = false;\n    /**\n     * Gets or sets a boolean to enable/disable checking manifest if IndexedDB support is enabled (js will always consider the database is up to date)\n     **/\n\n    this.disableManifestCheck = false;\n    /**\n     * Gets or sets a boolean to enable/disable the context menu (right-click) from appearing on the main canvas\n     */\n\n    this.disableContextMenu = true;\n    /**\n     * Gets the list of created scenes\n     */\n\n    this.scenes = new Array();\n    /** @internal */\n\n    this._virtualScenes = new Array();\n    /**\n     * Event raised when a new scene is created\n     */\n\n    this.onNewSceneAddedObservable = new _observable.Observable();\n    /**\n     * Gets the list of created postprocesses\n     */\n\n    this.postProcesses = new Array();\n    /**\n     * Gets a boolean indicating if the pointer is currently locked\n     */\n\n    this.isPointerLock = false; // Observables\n\n    /**\n     * Observable event triggered each time the rendering canvas is resized\n     */\n\n    this.onResizeObservable = new _observable.Observable();\n    /**\n     * Observable event triggered each time the canvas loses focus\n     */\n\n    this.onCanvasBlurObservable = new _observable.Observable();\n    /**\n     * Observable event triggered each time the canvas gains focus\n     */\n\n    this.onCanvasFocusObservable = new _observable.Observable();\n    /**\n     * Observable event triggered each time the canvas receives pointerout event\n     */\n\n    this.onCanvasPointerOutObservable = new _observable.Observable();\n    /**\n     * Observable raised when the engine begins a new frame\n     */\n\n    this.onBeginFrameObservable = new _observable.Observable();\n    /**\n     * If set, will be used to request the next animation frame for the render loop\n     */\n\n    this.customAnimationFrameRequester = null;\n    /**\n     * Observable raised when the engine ends the current frame\n     */\n\n    this.onEndFrameObservable = new _observable.Observable();\n    /**\n     * Observable raised when the engine is about to compile a shader\n     */\n\n    this.onBeforeShaderCompilationObservable = new _observable.Observable();\n    /**\n     * Observable raised when the engine has just compiled a shader\n     */\n\n    this.onAfterShaderCompilationObservable = new _observable.Observable(); // Deterministic lockstepMaxSteps\n\n    this._deterministicLockstep = false;\n    this._lockstepMaxSteps = 4;\n    this._timeStep = 1 / 60; // FPS\n\n    this._fps = 60;\n    this._deltaTime = 0;\n    /** @internal */\n\n    this._drawCalls = new _perfCounter.PerfCounter();\n    /** Gets or sets the tab index to set to the rendering canvas. 1 is the minimum value to set to be able to capture keyboard events */\n\n    this.canvasTabIndex = 1;\n    /**\n     * Turn this value on if you want to pause FPS computation when in background\n     */\n\n    this.disablePerformanceMonitorInBackground = false;\n    this._performanceMonitor = new _performanceMonitor.PerformanceMonitor();\n    this._compatibilityMode = true;\n    /**\n     * Gets or sets the current render pass id\n     */\n\n    this.currentRenderPassId = 0;\n    this._renderPassNames = [\"main\"];\n    Engine.Instances.push(this);\n\n    if (!canvasOrContext) {\n      return;\n    }\n\n    this._features.supportRenderPasses = true;\n    options = this._creationOptions;\n\n    if (canvasOrContext.getContext) {\n      const canvas = canvasOrContext;\n\n      this._sharedInit(canvas);\n\n      this._connectVREvents();\n    } // Load WebVR Devices\n\n\n    this._prepareVRComponent();\n\n    if (options.autoEnableWebVR) {\n      this.initWebVR();\n    }\n  }\n\n  _initGLContext() {\n    super._initGLContext();\n\n    this._rescalePostProcess = null;\n  }\n  /**\n   * Shared initialization across engines types.\n   * @param canvas The canvas associated with this instance of the engine.\n   */\n\n\n  _sharedInit(canvas) {\n    super._sharedInit(canvas);\n\n    this._onCanvasFocus = () => {\n      this.onCanvasFocusObservable.notifyObservers(this);\n    };\n\n    this._onCanvasBlur = () => {\n      this.onCanvasBlurObservable.notifyObservers(this);\n    };\n\n    this._onCanvasContextMenu = evt => {\n      if (this.disableContextMenu) {\n        evt.preventDefault();\n      }\n    };\n\n    canvas.addEventListener(\"focus\", this._onCanvasFocus);\n    canvas.addEventListener(\"blur\", this._onCanvasBlur);\n    canvas.addEventListener(\"contextmenu\", this._onCanvasContextMenu);\n\n    this._onBlur = () => {\n      if (this.disablePerformanceMonitorInBackground) {\n        this._performanceMonitor.disable();\n      }\n\n      this._windowIsBackground = true;\n    };\n\n    this._onFocus = () => {\n      if (this.disablePerformanceMonitorInBackground) {\n        this._performanceMonitor.enable();\n      }\n\n      this._windowIsBackground = false;\n    };\n\n    this._onCanvasPointerOut = ev => {\n      // Check that the element at the point of the pointer out isn't the canvas and if it isn't, notify observers\n      // Note: This is a workaround for a bug with Safari\n      if (document.elementFromPoint(ev.clientX, ev.clientY) !== canvas) {\n        this.onCanvasPointerOutObservable.notifyObservers(ev);\n      }\n    };\n\n    const hostWindow = this.getHostWindow(); // it calls IsWindowObjectExist()\n\n    if (hostWindow && typeof hostWindow.addEventListener === \"function\") {\n      hostWindow.addEventListener(\"blur\", this._onBlur);\n      hostWindow.addEventListener(\"focus\", this._onFocus);\n    }\n\n    canvas.addEventListener(\"pointerout\", this._onCanvasPointerOut);\n\n    if (!this._creationOptions.doNotHandleTouchAction) {\n      this._disableTouchAction();\n    } // Create Audio Engine if needed.\n\n\n    if (!Engine.audioEngine && this._creationOptions.audioEngine && Engine.AudioEngineFactory) {\n      Engine.audioEngine = Engine.AudioEngineFactory(this.getRenderingCanvas(), this.getAudioContext(), this.getAudioDestination());\n    }\n\n    if ((0, _domManagement.IsDocumentAvailable)()) {\n      // Fullscreen\n      this._onFullscreenChange = () => {\n        this.isFullscreen = !!document.fullscreenElement; // Pointer lock\n\n        if (this.isFullscreen && this._pointerLockRequested && canvas) {\n          Engine._RequestPointerlock(canvas);\n        }\n      };\n\n      document.addEventListener(\"fullscreenchange\", this._onFullscreenChange, false);\n      document.addEventListener(\"webkitfullscreenchange\", this._onFullscreenChange, false); // Pointer lock\n\n      this._onPointerLockChange = () => {\n        this.isPointerLock = document.pointerLockElement === canvas;\n      };\n\n      document.addEventListener(\"pointerlockchange\", this._onPointerLockChange, false);\n      document.addEventListener(\"webkitpointerlockchange\", this._onPointerLockChange, false);\n    }\n\n    this.enableOfflineSupport = Engine.OfflineProviderFactory !== undefined;\n    this._deterministicLockstep = !!this._creationOptions.deterministicLockstep;\n    this._lockstepMaxSteps = this._creationOptions.lockstepMaxSteps || 0;\n    this._timeStep = this._creationOptions.timeStep || 1 / 60;\n  }\n  /** @internal */\n\n\n  _verifyPointerLock() {\n    var _a;\n\n    (_a = this._onPointerLockChange) === null || _a === void 0 ? void 0 : _a.call(this);\n  }\n  /**\n   * Gets current aspect ratio\n   * @param viewportOwner defines the camera to use to get the aspect ratio\n   * @param useScreen defines if screen size must be used (or the current render target if any)\n   * @returns a number defining the aspect ratio\n   */\n\n\n  getAspectRatio(viewportOwner, useScreen = false) {\n    const viewport = viewportOwner.viewport;\n    return this.getRenderWidth(useScreen) * viewport.width / (this.getRenderHeight(useScreen) * viewport.height);\n  }\n  /**\n   * Gets current screen aspect ratio\n   * @returns a number defining the aspect ratio\n   */\n\n\n  getScreenAspectRatio() {\n    return this.getRenderWidth(true) / this.getRenderHeight(true);\n  }\n  /**\n   * Gets the client rect of the HTML canvas attached with the current webGL context\n   * @returns a client rectangle\n   */\n\n\n  getRenderingCanvasClientRect() {\n    if (!this._renderingCanvas) {\n      return null;\n    }\n\n    return this._renderingCanvas.getBoundingClientRect();\n  }\n  /**\n   * Gets the client rect of the HTML element used for events\n   * @returns a client rectangle\n   */\n\n\n  getInputElementClientRect() {\n    if (!this._renderingCanvas) {\n      return null;\n    }\n\n    return this.getInputElement().getBoundingClientRect();\n  }\n  /**\n   * Gets a boolean indicating that the engine is running in deterministic lock step mode\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#deterministic-lockstep\n   * @returns true if engine is in deterministic lock step mode\n   */\n\n\n  isDeterministicLockStep() {\n    return this._deterministicLockstep;\n  }\n  /**\n   * Gets the max steps when engine is running in deterministic lock step\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#deterministic-lockstep\n   * @returns the max steps\n   */\n\n\n  getLockstepMaxSteps() {\n    return this._lockstepMaxSteps;\n  }\n  /**\n   * Returns the time in ms between steps when using deterministic lock step.\n   * @returns time step in (ms)\n   */\n\n\n  getTimeStep() {\n    return this._timeStep * 1000;\n  }\n  /**\n   * Force the mipmap generation for the given render target texture\n   * @param texture defines the render target texture to use\n   * @param unbind defines whether or not to unbind the texture after generation. Defaults to true.\n   */\n\n\n  generateMipMapsForCubemap(texture, unbind = true) {\n    if (texture.generateMipMaps) {\n      const gl = this._gl;\n\n      this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, texture, true);\n\n      gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n\n      if (unbind) {\n        this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, null);\n      }\n    }\n  }\n  /** States */\n\n  /**\n   * Gets a boolean indicating if depth writing is enabled\n   * @returns the current depth writing state\n   */\n\n\n  getDepthWrite() {\n    return this._depthCullingState.depthMask;\n  }\n  /**\n   * Enable or disable depth writing\n   * @param enable defines the state to set\n   */\n\n\n  setDepthWrite(enable) {\n    this._depthCullingState.depthMask = enable;\n  }\n  /**\n   * Gets a boolean indicating if stencil buffer is enabled\n   * @returns the current stencil buffer state\n   */\n\n\n  getStencilBuffer() {\n    return this._stencilState.stencilTest;\n  }\n  /**\n   * Enable or disable the stencil buffer\n   * @param enable defines if the stencil buffer must be enabled or disabled\n   */\n\n\n  setStencilBuffer(enable) {\n    this._stencilState.stencilTest = enable;\n  }\n  /**\n   * Gets the current stencil mask\n   * @returns a number defining the new stencil mask to use\n   */\n\n\n  getStencilMask() {\n    return this._stencilState.stencilMask;\n  }\n  /**\n   * Sets the current stencil mask\n   * @param mask defines the new stencil mask to use\n   */\n\n\n  setStencilMask(mask) {\n    this._stencilState.stencilMask = mask;\n  }\n  /**\n   * Gets the current stencil function\n   * @returns a number defining the stencil function to use\n   */\n\n\n  getStencilFunction() {\n    return this._stencilState.stencilFunc;\n  }\n  /**\n   * Gets the current stencil reference value\n   * @returns a number defining the stencil reference value to use\n   */\n\n\n  getStencilFunctionReference() {\n    return this._stencilState.stencilFuncRef;\n  }\n  /**\n   * Gets the current stencil mask\n   * @returns a number defining the stencil mask to use\n   */\n\n\n  getStencilFunctionMask() {\n    return this._stencilState.stencilFuncMask;\n  }\n  /**\n   * Sets the current stencil function\n   * @param stencilFunc defines the new stencil function to use\n   */\n\n\n  setStencilFunction(stencilFunc) {\n    this._stencilState.stencilFunc = stencilFunc;\n  }\n  /**\n   * Sets the current stencil reference\n   * @param reference defines the new stencil reference to use\n   */\n\n\n  setStencilFunctionReference(reference) {\n    this._stencilState.stencilFuncRef = reference;\n  }\n  /**\n   * Sets the current stencil mask\n   * @param mask defines the new stencil mask to use\n   */\n\n\n  setStencilFunctionMask(mask) {\n    this._stencilState.stencilFuncMask = mask;\n  }\n  /**\n   * Gets the current stencil operation when stencil fails\n   * @returns a number defining stencil operation to use when stencil fails\n   */\n\n\n  getStencilOperationFail() {\n    return this._stencilState.stencilOpStencilFail;\n  }\n  /**\n   * Gets the current stencil operation when depth fails\n   * @returns a number defining stencil operation to use when depth fails\n   */\n\n\n  getStencilOperationDepthFail() {\n    return this._stencilState.stencilOpDepthFail;\n  }\n  /**\n   * Gets the current stencil operation when stencil passes\n   * @returns a number defining stencil operation to use when stencil passes\n   */\n\n\n  getStencilOperationPass() {\n    return this._stencilState.stencilOpStencilDepthPass;\n  }\n  /**\n   * Sets the stencil operation to use when stencil fails\n   * @param operation defines the stencil operation to use when stencil fails\n   */\n\n\n  setStencilOperationFail(operation) {\n    this._stencilState.stencilOpStencilFail = operation;\n  }\n  /**\n   * Sets the stencil operation to use when depth fails\n   * @param operation defines the stencil operation to use when depth fails\n   */\n\n\n  setStencilOperationDepthFail(operation) {\n    this._stencilState.stencilOpDepthFail = operation;\n  }\n  /**\n   * Sets the stencil operation to use when stencil passes\n   * @param operation defines the stencil operation to use when stencil passes\n   */\n\n\n  setStencilOperationPass(operation) {\n    this._stencilState.stencilOpStencilDepthPass = operation;\n  }\n  /**\n   * Sets a boolean indicating if the dithering state is enabled or disabled\n   * @param value defines the dithering state\n   */\n\n\n  setDitheringState(value) {\n    if (value) {\n      this._gl.enable(this._gl.DITHER);\n    } else {\n      this._gl.disable(this._gl.DITHER);\n    }\n  }\n  /**\n   * Sets a boolean indicating if the rasterizer state is enabled or disabled\n   * @param value defines the rasterizer state\n   */\n\n\n  setRasterizerState(value) {\n    if (value) {\n      this._gl.disable(this._gl.RASTERIZER_DISCARD);\n    } else {\n      this._gl.enable(this._gl.RASTERIZER_DISCARD);\n    }\n  }\n  /**\n   * Gets the current depth function\n   * @returns a number defining the depth function\n   */\n\n\n  getDepthFunction() {\n    return this._depthCullingState.depthFunc;\n  }\n  /**\n   * Sets the current depth function\n   * @param depthFunc defines the function to use\n   */\n\n\n  setDepthFunction(depthFunc) {\n    this._depthCullingState.depthFunc = depthFunc;\n  }\n  /**\n   * Sets the current depth function to GREATER\n   */\n\n\n  setDepthFunctionToGreater() {\n    this.setDepthFunction(516);\n  }\n  /**\n   * Sets the current depth function to GEQUAL\n   */\n\n\n  setDepthFunctionToGreaterOrEqual() {\n    this.setDepthFunction(518);\n  }\n  /**\n   * Sets the current depth function to LESS\n   */\n\n\n  setDepthFunctionToLess() {\n    this.setDepthFunction(513);\n  }\n  /**\n   * Sets the current depth function to LEQUAL\n   */\n\n\n  setDepthFunctionToLessOrEqual() {\n    this.setDepthFunction(515);\n  }\n  /**\n   * Caches the the state of the stencil buffer\n   */\n\n\n  cacheStencilState() {\n    this._cachedStencilBuffer = this.getStencilBuffer();\n    this._cachedStencilFunction = this.getStencilFunction();\n    this._cachedStencilMask = this.getStencilMask();\n    this._cachedStencilOperationPass = this.getStencilOperationPass();\n    this._cachedStencilOperationFail = this.getStencilOperationFail();\n    this._cachedStencilOperationDepthFail = this.getStencilOperationDepthFail();\n    this._cachedStencilReference = this.getStencilFunctionReference();\n  }\n  /**\n   * Restores the state of the stencil buffer\n   */\n\n\n  restoreStencilState() {\n    this.setStencilFunction(this._cachedStencilFunction);\n    this.setStencilMask(this._cachedStencilMask);\n    this.setStencilBuffer(this._cachedStencilBuffer);\n    this.setStencilOperationPass(this._cachedStencilOperationPass);\n    this.setStencilOperationFail(this._cachedStencilOperationFail);\n    this.setStencilOperationDepthFail(this._cachedStencilOperationDepthFail);\n    this.setStencilFunctionReference(this._cachedStencilReference);\n  }\n  /**\n   * Directly set the WebGL Viewport\n   * @param x defines the x coordinate of the viewport (in screen space)\n   * @param y defines the y coordinate of the viewport (in screen space)\n   * @param width defines the width of the viewport (in screen space)\n   * @param height defines the height of the viewport (in screen space)\n   * @returns the current viewport Object (if any) that is being replaced by this call. You can restore this viewport later on to go back to the original state\n   */\n\n\n  setDirectViewport(x, y, width, height) {\n    const currentViewport = this._cachedViewport;\n    this._cachedViewport = null;\n\n    this._viewport(x, y, width, height);\n\n    return currentViewport;\n  }\n  /**\n   * Executes a scissor clear (ie. a clear on a specific portion of the screen)\n   * @param x defines the x-coordinate of the bottom left corner of the clear rectangle\n   * @param y defines the y-coordinate of the corner of the clear rectangle\n   * @param width defines the width of the clear rectangle\n   * @param height defines the height of the clear rectangle\n   * @param clearColor defines the clear color\n   */\n\n\n  scissorClear(x, y, width, height, clearColor) {\n    this.enableScissor(x, y, width, height);\n    this.clear(clearColor, true, true, true);\n    this.disableScissor();\n  }\n  /**\n   * Enable scissor test on a specific rectangle (ie. render will only be executed on a specific portion of the screen)\n   * @param x defines the x-coordinate of the bottom left corner of the clear rectangle\n   * @param y defines the y-coordinate of the corner of the clear rectangle\n   * @param width defines the width of the clear rectangle\n   * @param height defines the height of the clear rectangle\n   */\n\n\n  enableScissor(x, y, width, height) {\n    const gl = this._gl; // Change state\n\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(x, y, width, height);\n  }\n  /**\n   * Disable previously set scissor test rectangle\n   */\n\n\n  disableScissor() {\n    const gl = this._gl;\n    gl.disable(gl.SCISSOR_TEST);\n  }\n  /**\n   * @internal\n   */\n\n\n  _reportDrawCall(numDrawCalls = 1) {\n    this._drawCalls.addCount(numDrawCalls, false);\n  }\n  /**\n   * Initializes a webVR display and starts listening to display change events\n   * The onVRDisplayChangedObservable will be notified upon these changes\n   * @returns The onVRDisplayChangedObservable\n   */\n\n\n  initWebVR() {\n    throw (0, _devTools._WarnImport)(\"WebVRCamera\");\n  }\n  /** @internal */\n\n\n  _prepareVRComponent() {// Do nothing as the engine side effect will overload it\n  }\n  /**\n   * @internal\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  _connectVREvents(canvas, document) {// Do nothing as the engine side effect will overload it\n  }\n  /** @internal */\n\n\n  _submitVRFrame() {// Do nothing as the engine side effect will overload it\n  }\n  /**\n   * Call this function to leave webVR mode\n   * Will do nothing if webVR is not supported or if there is no webVR device\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/cameras/webVRCamera\n   */\n\n\n  disableVR() {// Do nothing as the engine side effect will overload it\n  }\n  /**\n   * Gets a boolean indicating that the system is in VR mode and is presenting\n   * @returns true if VR mode is engaged\n   */\n\n\n  isVRPresenting() {\n    return false;\n  }\n  /** @internal */\n\n\n  _requestVRFrame() {// Do nothing as the engine side effect will overload it\n  }\n  /**\n   * @internal\n   */\n\n\n  _loadFileAsync(url, offlineProvider, useArrayBuffer) {\n    return new Promise((resolve, reject) => {\n      this._loadFile(url, data => {\n        resolve(data);\n      }, undefined, offlineProvider, useArrayBuffer, (request, exception) => {\n        reject(exception);\n      });\n    });\n  }\n  /**\n   * Gets the source code of the vertex shader associated with a specific webGL program\n   * @param program defines the program to use\n   * @returns a string containing the source code of the vertex shader associated with the program\n   */\n\n\n  getVertexShaderSource(program) {\n    const shaders = this._gl.getAttachedShaders(program);\n\n    if (!shaders) {\n      return null;\n    }\n\n    return this._gl.getShaderSource(shaders[0]);\n  }\n  /**\n   * Gets the source code of the fragment shader associated with a specific webGL program\n   * @param program defines the program to use\n   * @returns a string containing the source code of the fragment shader associated with the program\n   */\n\n\n  getFragmentShaderSource(program) {\n    const shaders = this._gl.getAttachedShaders(program);\n\n    if (!shaders) {\n      return null;\n    }\n\n    return this._gl.getShaderSource(shaders[1]);\n  }\n  /**\n   * Sets a depth stencil texture from a render target to the according uniform.\n   * @param channel The texture channel\n   * @param uniform The uniform to set\n   * @param texture The render target texture containing the depth stencil texture to apply\n   * @param name The texture name\n   */\n\n\n  setDepthStencilTexture(channel, uniform, texture, name) {\n    if (channel === undefined) {\n      return;\n    }\n\n    if (uniform) {\n      this._boundUniforms[channel] = uniform;\n    }\n\n    if (!texture || !texture.depthStencilTexture) {\n      this._setTexture(channel, null, undefined, undefined, name);\n    } else {\n      this._setTexture(channel, texture, false, true, name);\n    }\n  }\n  /**\n   * Sets a texture to the webGL context from a postprocess\n   * @param channel defines the channel to use\n   * @param postProcess defines the source postprocess\n   * @param name name of the channel\n   */\n\n\n  setTextureFromPostProcess(channel, postProcess, name) {\n    var _a;\n\n    let postProcessInput = null;\n\n    if (postProcess) {\n      if (postProcess._forcedOutputTexture) {\n        postProcessInput = postProcess._forcedOutputTexture;\n      } else if (postProcess._textures.data[postProcess._currentRenderTextureInd]) {\n        postProcessInput = postProcess._textures.data[postProcess._currentRenderTextureInd];\n      }\n    }\n\n    this._bindTexture(channel, (_a = postProcessInput === null || postProcessInput === void 0 ? void 0 : postProcessInput.texture) !== null && _a !== void 0 ? _a : null, name);\n  }\n  /**\n   * Binds the output of the passed in post process to the texture channel specified\n   * @param channel The channel the texture should be bound to\n   * @param postProcess The post process which's output should be bound\n   * @param name name of the channel\n   */\n\n\n  setTextureFromPostProcessOutput(channel, postProcess, name) {\n    var _a, _b;\n\n    this._bindTexture(channel, (_b = (_a = postProcess === null || postProcess === void 0 ? void 0 : postProcess._outputTexture) === null || _a === void 0 ? void 0 : _a.texture) !== null && _b !== void 0 ? _b : null, name);\n  }\n\n  _rebuildBuffers() {\n    // Index / Vertex\n    for (const scene of this.scenes) {\n      scene.resetCachedMaterial();\n\n      scene._rebuildGeometries();\n\n      scene._rebuildTextures();\n    }\n\n    for (const scene of this._virtualScenes) {\n      scene.resetCachedMaterial();\n\n      scene._rebuildGeometries();\n\n      scene._rebuildTextures();\n    }\n\n    super._rebuildBuffers();\n  }\n  /** @internal */\n\n\n  _renderFrame() {\n    for (let index = 0; index < this._activeRenderLoops.length; index++) {\n      const renderFunction = this._activeRenderLoops[index];\n      renderFunction();\n    }\n  }\n\n  _renderLoop() {\n    if (!this._contextWasLost) {\n      let shouldRender = true;\n\n      if (this.isDisposed || !this.renderEvenInBackground && this._windowIsBackground) {\n        shouldRender = false;\n      }\n\n      if (shouldRender) {\n        // Start new frame\n        this.beginFrame(); // Child canvases\n\n        if (!this._renderViews()) {\n          // Main frame\n          this._renderFrame();\n        } // Present\n\n\n        this.endFrame();\n      }\n    }\n\n    if (this._activeRenderLoops.length > 0) {\n      // Register new frame\n      if (this.customAnimationFrameRequester) {\n        this.customAnimationFrameRequester.requestID = this._queueNewFrame(this.customAnimationFrameRequester.renderFunction || this._boundRenderFunction, this.customAnimationFrameRequester);\n        this._frameHandler = this.customAnimationFrameRequester.requestID;\n      } else if (this.isVRPresenting()) {\n        this._requestVRFrame();\n      } else {\n        this._frameHandler = this._queueNewFrame(this._boundRenderFunction, this.getHostWindow());\n      }\n    } else {\n      this._renderingQueueLaunched = false;\n    }\n  }\n  /** @internal */\n\n\n  _renderViews() {\n    return false;\n  }\n  /**\n   * Toggle full screen mode\n   * @param requestPointerLock defines if a pointer lock should be requested from the user\n   */\n\n\n  switchFullscreen(requestPointerLock) {\n    if (this.isFullscreen) {\n      this.exitFullscreen();\n    } else {\n      this.enterFullscreen(requestPointerLock);\n    }\n  }\n  /**\n   * Enters full screen mode\n   * @param requestPointerLock defines if a pointer lock should be requested from the user\n   */\n\n\n  enterFullscreen(requestPointerLock) {\n    if (!this.isFullscreen) {\n      this._pointerLockRequested = requestPointerLock;\n\n      if (this._renderingCanvas) {\n        Engine._RequestFullscreen(this._renderingCanvas);\n      }\n    }\n  }\n  /**\n   * Exits full screen mode\n   */\n\n\n  exitFullscreen() {\n    if (this.isFullscreen) {\n      Engine._ExitFullscreen();\n    }\n  }\n  /**\n   * Enters Pointerlock mode\n   */\n\n\n  enterPointerlock() {\n    if (this._renderingCanvas) {\n      Engine._RequestPointerlock(this._renderingCanvas);\n    }\n  }\n  /**\n   * Exits Pointerlock mode\n   */\n\n\n  exitPointerlock() {\n    Engine._ExitPointerlock();\n  }\n  /**\n   * Begin a new frame\n   */\n\n\n  beginFrame() {\n    this._measureFps();\n\n    this.onBeginFrameObservable.notifyObservers(this);\n    super.beginFrame();\n  }\n  /**\n   * End the current frame\n   */\n\n\n  endFrame() {\n    super.endFrame();\n\n    this._submitVRFrame();\n\n    this.onEndFrameObservable.notifyObservers(this);\n  }\n  /**\n   * Resize the view according to the canvas' size\n   * @param forceSetSize true to force setting the sizes of the underlying canvas\n   */\n\n\n  resize(forceSetSize = false) {\n    // We're not resizing the size of the canvas while in VR mode & presenting\n    if (this.isVRPresenting()) {\n      return;\n    }\n\n    super.resize(forceSetSize);\n  }\n  /**\n   * Force a specific size of the canvas\n   * @param width defines the new canvas' width\n   * @param height defines the new canvas' height\n   * @param forceSetSize true to force setting the sizes of the underlying canvas\n   * @returns true if the size was changed\n   */\n\n\n  setSize(width, height, forceSetSize = false) {\n    if (!this._renderingCanvas) {\n      return false;\n    }\n\n    if (!super.setSize(width, height, forceSetSize)) {\n      return false;\n    }\n\n    if (this.scenes) {\n      for (let index = 0; index < this.scenes.length; index++) {\n        const scene = this.scenes[index];\n\n        for (let camIndex = 0; camIndex < scene.cameras.length; camIndex++) {\n          const cam = scene.cameras[camIndex];\n          cam._currentRenderId = 0;\n        }\n      }\n\n      if (this.onResizeObservable.hasObservers()) {\n        this.onResizeObservable.notifyObservers(this);\n      }\n    }\n\n    return true;\n  }\n\n  _deletePipelineContext(pipelineContext) {\n    const webGLPipelineContext = pipelineContext;\n\n    if (webGLPipelineContext && webGLPipelineContext.program) {\n      if (webGLPipelineContext.transformFeedback) {\n        this.deleteTransformFeedback(webGLPipelineContext.transformFeedback);\n        webGLPipelineContext.transformFeedback = null;\n      }\n    }\n\n    super._deletePipelineContext(pipelineContext);\n  }\n\n  createShaderProgram(pipelineContext, vertexCode, fragmentCode, defines, context, transformFeedbackVaryings = null) {\n    context = context || this._gl;\n    this.onBeforeShaderCompilationObservable.notifyObservers(this);\n    const program = super.createShaderProgram(pipelineContext, vertexCode, fragmentCode, defines, context, transformFeedbackVaryings);\n    this.onAfterShaderCompilationObservable.notifyObservers(this);\n    return program;\n  }\n\n  _createShaderProgram(pipelineContext, vertexShader, fragmentShader, context, transformFeedbackVaryings = null) {\n    const shaderProgram = context.createProgram();\n    pipelineContext.program = shaderProgram;\n\n    if (!shaderProgram) {\n      throw new Error(\"Unable to create program\");\n    }\n\n    context.attachShader(shaderProgram, vertexShader);\n    context.attachShader(shaderProgram, fragmentShader);\n\n    if (this.webGLVersion > 1 && transformFeedbackVaryings) {\n      const transformFeedback = this.createTransformFeedback();\n      this.bindTransformFeedback(transformFeedback);\n      this.setTranformFeedbackVaryings(shaderProgram, transformFeedbackVaryings);\n      pipelineContext.transformFeedback = transformFeedback;\n    }\n\n    context.linkProgram(shaderProgram);\n\n    if (this.webGLVersion > 1 && transformFeedbackVaryings) {\n      this.bindTransformFeedback(null);\n    }\n\n    pipelineContext.context = context;\n    pipelineContext.vertexShader = vertexShader;\n    pipelineContext.fragmentShader = fragmentShader;\n\n    if (!pipelineContext.isParallelCompiled) {\n      this._finalizePipelineContext(pipelineContext);\n    }\n\n    return shaderProgram;\n  }\n  /**\n   * @internal\n   */\n\n\n  _releaseTexture(texture) {\n    super._releaseTexture(texture);\n  }\n  /**\n   * @internal\n   */\n\n\n  _releaseRenderTargetWrapper(rtWrapper) {\n    super._releaseRenderTargetWrapper(rtWrapper); // Set output texture of post process to null if the framebuffer has been released/disposed\n\n\n    this.scenes.forEach(scene => {\n      scene.postProcesses.forEach(postProcess => {\n        if (postProcess._outputTexture === rtWrapper) {\n          postProcess._outputTexture = null;\n        }\n      });\n      scene.cameras.forEach(camera => {\n        camera._postProcesses.forEach(postProcess => {\n          if (postProcess) {\n            if (postProcess._outputTexture === rtWrapper) {\n              postProcess._outputTexture = null;\n            }\n          }\n        });\n      });\n    });\n  }\n  /**\n   * Gets the names of the render passes that are currently created\n   * @returns list of the render pass names\n   */\n\n\n  getRenderPassNames() {\n    return this._renderPassNames;\n  }\n  /**\n   * Gets the name of the current render pass\n   * @returns name of the current render pass\n   */\n\n\n  getCurrentRenderPassName() {\n    return this._renderPassNames[this.currentRenderPassId];\n  }\n  /**\n   * Creates a render pass id\n   * @param name Name of the render pass (for debug purpose only)\n   * @returns the id of the new render pass\n   */\n\n\n  createRenderPassId(name) {\n    // Note: render pass id == 0 is always for the main render pass\n    const id = ++Engine._RenderPassIdCounter;\n    this._renderPassNames[id] = name !== null && name !== void 0 ? name : \"NONAME\";\n    return id;\n  }\n  /**\n   * Releases a render pass id\n   * @param id id of the render pass to release\n   */\n\n\n  releaseRenderPassId(id) {\n    this._renderPassNames[id] = undefined;\n\n    for (let s = 0; s < this.scenes.length; ++s) {\n      const scene = this.scenes[s];\n\n      for (let m = 0; m < scene.meshes.length; ++m) {\n        const mesh = scene.meshes[m];\n\n        if (mesh.subMeshes) {\n          for (let b = 0; b < mesh.subMeshes.length; ++b) {\n            const subMesh = mesh.subMeshes[b];\n\n            subMesh._removeDrawWrapper(id);\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @internal\n   * Rescales a texture\n   * @param source input texture\n   * @param destination destination texture\n   * @param scene scene to use to render the resize\n   * @param internalFormat format to use when resizing\n   * @param onComplete callback to be called when resize has completed\n   */\n\n\n  _rescaleTexture(source, destination, scene, internalFormat, onComplete) {\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.LINEAR);\n\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.LINEAR);\n\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\n\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\n\n    const rtt = this.createRenderTargetTexture({\n      width: destination.width,\n      height: destination.height\n    }, {\n      generateMipMaps: false,\n      type: 0,\n      samplingMode: 2,\n      generateDepthBuffer: false,\n      generateStencilBuffer: false\n    });\n\n    if (!this._rescalePostProcess && Engine._RescalePostProcessFactory) {\n      this._rescalePostProcess = Engine._RescalePostProcessFactory(this);\n    }\n\n    if (this._rescalePostProcess) {\n      this._rescalePostProcess.externalTextureSamplerBinding = true;\n\n      this._rescalePostProcess.getEffect().executeWhenCompiled(() => {\n        this._rescalePostProcess.onApply = function (effect) {\n          effect._bindTexture(\"textureSampler\", source);\n        };\n\n        let hostingScene = scene;\n\n        if (!hostingScene) {\n          hostingScene = this.scenes[this.scenes.length - 1];\n        }\n\n        hostingScene.postProcessManager.directRender([this._rescalePostProcess], rtt, true);\n\n        this._bindTextureDirectly(this._gl.TEXTURE_2D, destination, true);\n\n        this._gl.copyTexImage2D(this._gl.TEXTURE_2D, 0, internalFormat, 0, 0, destination.width, destination.height, 0);\n\n        this.unBindFramebuffer(rtt);\n        rtt.dispose();\n\n        if (onComplete) {\n          onComplete();\n        }\n      });\n    }\n  } // FPS\n\n  /**\n   * Gets the current framerate\n   * @returns a number representing the framerate\n   */\n\n\n  getFps() {\n    return this._fps;\n  }\n  /**\n   * Gets the time spent between current and previous frame\n   * @returns a number representing the delta time in ms\n   */\n\n\n  getDeltaTime() {\n    return this._deltaTime;\n  }\n\n  _measureFps() {\n    this._performanceMonitor.sampleFrame();\n\n    this._fps = this._performanceMonitor.averageFPS;\n    this._deltaTime = this._performanceMonitor.instantaneousFrameTime || 0;\n  }\n  /**\n   * Wraps an external web gl texture in a Babylon texture.\n   * @param texture defines the external texture\n   * @param hasMipMaps defines whether the external texture has mip maps (default: false)\n   * @param samplingMode defines the sampling mode for the external texture (default: 3)\n   * @returns the babylon internal texture\n   */\n\n\n  wrapWebGLTexture(texture, hasMipMaps = false, samplingMode = 3) {\n    const hardwareTexture = new _webGLHardwareTexture.WebGLHardwareTexture(texture, this._gl);\n    const internalTexture = new _internalTexture.InternalTexture(this, _internalTexture.InternalTextureSource.Unknown, true);\n    internalTexture._hardwareTexture = hardwareTexture;\n    internalTexture.isReady = true;\n    internalTexture.useMipMaps = hasMipMaps;\n    this.updateTextureSamplingMode(samplingMode, internalTexture);\n    return internalTexture;\n  }\n  /**\n   * @internal\n   */\n\n\n  _uploadImageToTexture(texture, image, faceIndex = 0, lod = 0) {\n    const gl = this._gl;\n\n    const textureType = this._getWebGLTextureType(texture.type);\n\n    const format = this._getInternalFormat(texture.format);\n\n    const internalFormat = this._getRGBABufferInternalSizedFormat(texture.type, format);\n\n    const bindTarget = texture.isCube ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D;\n\n    this._bindTextureDirectly(bindTarget, texture, true);\n\n    this._unpackFlipY(texture.invertY);\n\n    let target = gl.TEXTURE_2D;\n\n    if (texture.isCube) {\n      target = gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex;\n    }\n\n    gl.texImage2D(target, lod, internalFormat, format, textureType, image);\n\n    this._bindTextureDirectly(bindTarget, null, true);\n  }\n  /**\n   * Updates a depth texture Comparison Mode and Function.\n   * If the comparison Function is equal to 0, the mode will be set to none.\n   * Otherwise, this only works in webgl 2 and requires a shadow sampler in the shader.\n   * @param texture The texture to set the comparison function for\n   * @param comparisonFunction The comparison function to set, 0 if no comparison required\n   */\n\n\n  updateTextureComparisonFunction(texture, comparisonFunction) {\n    if (this.webGLVersion === 1) {\n      _logger.Logger.Error(\"WebGL 1 does not support texture comparison.\");\n\n      return;\n    }\n\n    const gl = this._gl;\n\n    if (texture.isCube) {\n      this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP, texture, true);\n\n      if (comparisonFunction === 0) {\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_FUNC, 515);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_MODE, gl.NONE);\n      } else {\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_FUNC, comparisonFunction);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n      }\n\n      this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP, null);\n    } else {\n      this._bindTextureDirectly(this._gl.TEXTURE_2D, texture, true);\n\n      if (comparisonFunction === 0) {\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_FUNC, 515);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_MODE, gl.NONE);\n      } else {\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_FUNC, comparisonFunction);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n      }\n\n      this._bindTextureDirectly(this._gl.TEXTURE_2D, null);\n    }\n\n    texture._comparisonFunction = comparisonFunction;\n  }\n  /**\n   * Creates a webGL buffer to use with instantiation\n   * @param capacity defines the size of the buffer\n   * @returns the webGL buffer\n   */\n\n\n  createInstancesBuffer(capacity) {\n    const buffer = this._gl.createBuffer();\n\n    if (!buffer) {\n      throw new Error(\"Unable to create instance buffer\");\n    }\n\n    const result = new _webGLDataBuffer.WebGLDataBuffer(buffer);\n    result.capacity = capacity;\n    this.bindArrayBuffer(result);\n\n    this._gl.bufferData(this._gl.ARRAY_BUFFER, capacity, this._gl.DYNAMIC_DRAW);\n\n    result.references = 1;\n    return result;\n  }\n  /**\n   * Delete a webGL buffer used with instantiation\n   * @param buffer defines the webGL buffer to delete\n   */\n\n\n  deleteInstancesBuffer(buffer) {\n    this._gl.deleteBuffer(buffer);\n  }\n\n  _clientWaitAsync(sync, flags = 0, intervalms = 10) {\n    const gl = this._gl;\n    return new Promise((resolve, reject) => {\n      const check = () => {\n        const res = gl.clientWaitSync(sync, flags, 0);\n\n        if (res == gl.WAIT_FAILED) {\n          reject();\n          return;\n        }\n\n        if (res == gl.TIMEOUT_EXPIRED) {\n          setTimeout(check, intervalms);\n          return;\n        }\n\n        resolve();\n      };\n\n      check();\n    });\n  }\n  /**\n   * @internal\n   */\n\n\n  _readPixelsAsync(x, y, w, h, format, type, outputBuffer) {\n    if (this._webGLVersion < 2) {\n      throw new Error(\"_readPixelsAsync only work on WebGL2+\");\n    }\n\n    const gl = this._gl;\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\n    gl.bufferData(gl.PIXEL_PACK_BUFFER, outputBuffer.byteLength, gl.STREAM_READ);\n    gl.readPixels(x, y, w, h, format, type, 0);\n    gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n    const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\n\n    if (!sync) {\n      return null;\n    }\n\n    gl.flush();\n    return this._clientWaitAsync(sync, 0, 10).then(() => {\n      gl.deleteSync(sync);\n      gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\n      gl.getBufferSubData(gl.PIXEL_PACK_BUFFER, 0, outputBuffer);\n      gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n      gl.deleteBuffer(buf);\n      return outputBuffer;\n    });\n  }\n\n  dispose() {\n    this.hideLoadingUI();\n    this.onNewSceneAddedObservable.clear(); // Release postProcesses\n\n    while (this.postProcesses.length) {\n      this.postProcesses[0].dispose();\n    } // Rescale PP\n\n\n    if (this._rescalePostProcess) {\n      this._rescalePostProcess.dispose();\n    } // Release scenes\n\n\n    while (this.scenes.length) {\n      this.scenes[0].dispose();\n    }\n\n    while (this._virtualScenes.length) {\n      this._virtualScenes[0].dispose();\n    } // Release audio engine\n\n\n    if (_engineStore.EngineStore.Instances.length === 1 && Engine.audioEngine) {\n      Engine.audioEngine.dispose();\n      Engine.audioEngine = null;\n    } //WebVR\n\n\n    this.disableVR(); // Events\n\n    const hostWindow = this.getHostWindow(); // it calls IsWindowObjectExist()\n\n    if (hostWindow && typeof hostWindow.removeEventListener === \"function\") {\n      hostWindow.removeEventListener(\"blur\", this._onBlur);\n      hostWindow.removeEventListener(\"focus\", this._onFocus);\n    }\n\n    if (this._renderingCanvas) {\n      this._renderingCanvas.removeEventListener(\"focus\", this._onCanvasFocus);\n\n      this._renderingCanvas.removeEventListener(\"blur\", this._onCanvasBlur);\n\n      this._renderingCanvas.removeEventListener(\"pointerout\", this._onCanvasPointerOut);\n\n      this._renderingCanvas.removeEventListener(\"contextmenu\", this._onCanvasContextMenu);\n    }\n\n    if ((0, _domManagement.IsDocumentAvailable)()) {\n      document.removeEventListener(\"fullscreenchange\", this._onFullscreenChange);\n      document.removeEventListener(\"mozfullscreenchange\", this._onFullscreenChange);\n      document.removeEventListener(\"webkitfullscreenchange\", this._onFullscreenChange);\n      document.removeEventListener(\"msfullscreenchange\", this._onFullscreenChange);\n      document.removeEventListener(\"pointerlockchange\", this._onPointerLockChange);\n      document.removeEventListener(\"mspointerlockchange\", this._onPointerLockChange);\n      document.removeEventListener(\"mozpointerlockchange\", this._onPointerLockChange);\n      document.removeEventListener(\"webkitpointerlockchange\", this._onPointerLockChange);\n    }\n\n    super.dispose(); // Remove from Instances\n\n    const index = _engineStore.EngineStore.Instances.indexOf(this);\n\n    if (index >= 0) {\n      _engineStore.EngineStore.Instances.splice(index, 1);\n    } // no more engines left in the engine store? Notify!\n\n\n    if (!Engine.Instances.length) {\n      _engineStore.EngineStore.OnEnginesDisposedObservable.notifyObservers(this);\n    } // Observables\n\n\n    this.onResizeObservable.clear();\n    this.onCanvasBlurObservable.clear();\n    this.onCanvasFocusObservable.clear();\n    this.onCanvasPointerOutObservable.clear();\n    this.onBeginFrameObservable.clear();\n    this.onEndFrameObservable.clear();\n  }\n\n  _disableTouchAction() {\n    if (!this._renderingCanvas || !this._renderingCanvas.setAttribute) {\n      return;\n    }\n\n    this._renderingCanvas.setAttribute(\"touch-action\", \"none\");\n\n    this._renderingCanvas.style.touchAction = \"none\";\n    this._renderingCanvas.style.webkitTapHighlightColor = \"transparent\";\n  } // Loading screen\n\n  /**\n   * Display the loading screen\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/scene/customLoadingScreen\n   */\n\n\n  displayLoadingUI() {\n    if (!(0, _domManagement.IsWindowObjectExist)()) {\n      return;\n    }\n\n    const loadingScreen = this.loadingScreen;\n\n    if (loadingScreen) {\n      loadingScreen.displayLoadingUI();\n    }\n  }\n  /**\n   * Hide the loading screen\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/scene/customLoadingScreen\n   */\n\n\n  hideLoadingUI() {\n    if (!(0, _domManagement.IsWindowObjectExist)()) {\n      return;\n    }\n\n    const loadingScreen = this._loadingScreen;\n\n    if (loadingScreen) {\n      loadingScreen.hideLoadingUI();\n    }\n  }\n  /**\n   * Gets the current loading screen object\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/scene/customLoadingScreen\n   */\n\n\n  get loadingScreen() {\n    if (!this._loadingScreen && this._renderingCanvas) {\n      this._loadingScreen = Engine.DefaultLoadingScreenFactory(this._renderingCanvas);\n    }\n\n    return this._loadingScreen;\n  }\n  /**\n   * Sets the current loading screen object\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/scene/customLoadingScreen\n   */\n\n\n  set loadingScreen(loadingScreen) {\n    this._loadingScreen = loadingScreen;\n  }\n  /**\n   * Sets the current loading screen text\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/scene/customLoadingScreen\n   */\n\n\n  set loadingUIText(text) {\n    this.loadingScreen.loadingUIText = text;\n  }\n  /**\n   * Sets the current loading screen background color\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/scene/customLoadingScreen\n   */\n\n\n  set loadingUIBackgroundColor(color) {\n    this.loadingScreen.loadingUIBackgroundColor = color;\n  }\n  /**\n   * creates and returns a new video element\n   * @param constraints video constraints\n   * @returns video element\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  createVideoElement(constraints) {\n    return document.createElement(\"video\");\n  }\n  /** Pointerlock and fullscreen */\n\n  /**\n   * Ask the browser to promote the current element to pointerlock mode\n   * @param element defines the DOM element to promote\n   */\n\n\n  static _RequestPointerlock(element) {\n    if (element.requestPointerLock) {\n      // In some browsers, requestPointerLock returns a promise.\n      // Handle possible rejections to avoid an unhandled top-level exception.\n      const promise = element.requestPointerLock();\n      if (promise instanceof Promise) promise.then(() => {\n        element.focus();\n      }).catch(() => {});else element.focus();\n    }\n  }\n  /**\n   * Asks the browser to exit pointerlock mode\n   */\n\n\n  static _ExitPointerlock() {\n    if (document.exitPointerLock) {\n      document.exitPointerLock();\n    }\n  }\n  /**\n   * Ask the browser to promote the current element to fullscreen rendering mode\n   * @param element defines the DOM element to promote\n   */\n\n\n  static _RequestFullscreen(element) {\n    const requestFunction = element.requestFullscreen || element.webkitRequestFullscreen;\n\n    if (!requestFunction) {\n      return;\n    }\n\n    requestFunction.call(element);\n  }\n  /**\n   * Asks the browser to exit fullscreen mode\n   */\n\n\n  static _ExitFullscreen() {\n    const anyDoc = document;\n\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (anyDoc.webkitCancelFullScreen) {\n      anyDoc.webkitCancelFullScreen();\n    }\n  }\n  /**\n   * Get Font size information\n   * @param font font name\n   * @returns an object containing ascent, height and descent\n   */\n\n\n  getFontOffset(font) {\n    const text = document.createElement(\"span\");\n    text.innerHTML = \"Hg\";\n    text.setAttribute(\"style\", `font: ${font} !important`);\n    const block = document.createElement(\"div\");\n    block.style.display = \"inline-block\";\n    block.style.width = \"1px\";\n    block.style.height = \"0px\";\n    block.style.verticalAlign = \"bottom\";\n    const div = document.createElement(\"div\");\n    div.style.whiteSpace = \"nowrap\";\n    div.appendChild(text);\n    div.appendChild(block);\n    document.body.appendChild(div);\n    let fontAscent = 0;\n    let fontHeight = 0;\n\n    try {\n      fontHeight = block.getBoundingClientRect().top - text.getBoundingClientRect().top;\n      block.style.verticalAlign = \"baseline\";\n      fontAscent = block.getBoundingClientRect().top - text.getBoundingClientRect().top;\n    } finally {\n      document.body.removeChild(div);\n    }\n\n    return {\n      ascent: fontAscent,\n      height: fontHeight,\n      descent: fontHeight - fontAscent\n    };\n  }\n\n} // Const statics\n\n/** Defines that alpha blending is disabled */\n\n\nexports.Engine = Engine;\nEngine.ALPHA_DISABLE = 0;\n/** Defines that alpha blending to SRC ALPHA * SRC + DEST */\n\nEngine.ALPHA_ADD = 1;\n/** Defines that alpha blending to SRC ALPHA * SRC + (1 - SRC ALPHA) * DEST */\n\nEngine.ALPHA_COMBINE = 2;\n/** Defines that alpha blending to DEST - SRC * DEST */\n\nEngine.ALPHA_SUBTRACT = 3;\n/** Defines that alpha blending to SRC * DEST */\n\nEngine.ALPHA_MULTIPLY = 4;\n/** Defines that alpha blending to SRC ALPHA * SRC + (1 - SRC) * DEST */\n\nEngine.ALPHA_MAXIMIZED = 5;\n/** Defines that alpha blending to SRC + DEST */\n\nEngine.ALPHA_ONEONE = 6;\n/** Defines that alpha blending to SRC + (1 - SRC ALPHA) * DEST */\n\nEngine.ALPHA_PREMULTIPLIED = 7;\n/**\n * Defines that alpha blending to SRC + (1 - SRC ALPHA) * DEST\n * Alpha will be set to (1 - SRC ALPHA) * DEST ALPHA\n */\n\nEngine.ALPHA_PREMULTIPLIED_PORTERDUFF = 8;\n/** Defines that alpha blending to CST * SRC + (1 - CST) * DEST */\n\nEngine.ALPHA_INTERPOLATE = 9;\n/**\n * Defines that alpha blending to SRC + (1 - SRC) * DEST\n * Alpha will be set to SRC ALPHA + (1 - SRC ALPHA) * DEST ALPHA\n */\n\nEngine.ALPHA_SCREENMODE = 10;\n/** Defines that the resource is not delayed*/\n\nEngine.DELAYLOADSTATE_NONE = 0;\n/** Defines that the resource was successfully delay loaded */\n\nEngine.DELAYLOADSTATE_LOADED = 1;\n/** Defines that the resource is currently delay loading */\n\nEngine.DELAYLOADSTATE_LOADING = 2;\n/** Defines that the resource is delayed and has not started loading */\n\nEngine.DELAYLOADSTATE_NOTLOADED = 4; // Depht or Stencil test Constants.\n\n/** Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass. i.e. Nothing will be drawn */\n\nEngine.NEVER = 512;\n/** Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn */\n\nEngine.ALWAYS = 519;\n/** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value */\n\nEngine.LESS = 513;\n/** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value */\n\nEngine.EQUAL = 514;\n/** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value */\n\nEngine.LEQUAL = 515;\n/** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value */\n\nEngine.GREATER = 516;\n/** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value */\n\nEngine.GEQUAL = 518;\n/** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value */\n\nEngine.NOTEQUAL = 517; // Stencil Actions Constants.\n\n/** Passed to stencilOperation to specify that stencil value must be kept */\n\nEngine.KEEP = 7680;\n/** Passed to stencilOperation to specify that stencil value must be replaced */\n\nEngine.REPLACE = 7681;\n/** Passed to stencilOperation to specify that stencil value must be incremented */\n\nEngine.INCR = 7682;\n/** Passed to stencilOperation to specify that stencil value must be decremented */\n\nEngine.DECR = 7683;\n/** Passed to stencilOperation to specify that stencil value must be inverted */\n\nEngine.INVERT = 5386;\n/** Passed to stencilOperation to specify that stencil value must be incremented with wrapping */\n\nEngine.INCR_WRAP = 34055;\n/** Passed to stencilOperation to specify that stencil value must be decremented with wrapping */\n\nEngine.DECR_WRAP = 34056;\n/** Texture is not repeating outside of 0..1 UVs */\n\nEngine.TEXTURE_CLAMP_ADDRESSMODE = 0;\n/** Texture is repeating outside of 0..1 UVs */\n\nEngine.TEXTURE_WRAP_ADDRESSMODE = 1;\n/** Texture is repeating and mirrored */\n\nEngine.TEXTURE_MIRROR_ADDRESSMODE = 2;\n/** ALPHA */\n\nEngine.TEXTUREFORMAT_ALPHA = 0;\n/** LUMINANCE */\n\nEngine.TEXTUREFORMAT_LUMINANCE = 1;\n/** LUMINANCE_ALPHA */\n\nEngine.TEXTUREFORMAT_LUMINANCE_ALPHA = 2;\n/** RGB */\n\nEngine.TEXTUREFORMAT_RGB = 4;\n/** RGBA */\n\nEngine.TEXTUREFORMAT_RGBA = 5;\n/** RED */\n\nEngine.TEXTUREFORMAT_RED = 6;\n/** RED (2nd reference) */\n\nEngine.TEXTUREFORMAT_R = 6;\n/** RG */\n\nEngine.TEXTUREFORMAT_RG = 7;\n/** RED_INTEGER */\n\nEngine.TEXTUREFORMAT_RED_INTEGER = 8;\n/** RED_INTEGER (2nd reference) */\n\nEngine.TEXTUREFORMAT_R_INTEGER = 8;\n/** RG_INTEGER */\n\nEngine.TEXTUREFORMAT_RG_INTEGER = 9;\n/** RGB_INTEGER */\n\nEngine.TEXTUREFORMAT_RGB_INTEGER = 10;\n/** RGBA_INTEGER */\n\nEngine.TEXTUREFORMAT_RGBA_INTEGER = 11;\n/** UNSIGNED_BYTE */\n\nEngine.TEXTURETYPE_UNSIGNED_BYTE = 0;\n/** UNSIGNED_BYTE (2nd reference) */\n\nEngine.TEXTURETYPE_UNSIGNED_INT = 0;\n/** FLOAT */\n\nEngine.TEXTURETYPE_FLOAT = 1;\n/** HALF_FLOAT */\n\nEngine.TEXTURETYPE_HALF_FLOAT = 2;\n/** BYTE */\n\nEngine.TEXTURETYPE_BYTE = 3;\n/** SHORT */\n\nEngine.TEXTURETYPE_SHORT = 4;\n/** UNSIGNED_SHORT */\n\nEngine.TEXTURETYPE_UNSIGNED_SHORT = 5;\n/** INT */\n\nEngine.TEXTURETYPE_INT = 6;\n/** UNSIGNED_INT */\n\nEngine.TEXTURETYPE_UNSIGNED_INTEGER = 7;\n/** UNSIGNED_SHORT_4_4_4_4 */\n\nEngine.TEXTURETYPE_UNSIGNED_SHORT_4_4_4_4 = 8;\n/** UNSIGNED_SHORT_5_5_5_1 */\n\nEngine.TEXTURETYPE_UNSIGNED_SHORT_5_5_5_1 = 9;\n/** UNSIGNED_SHORT_5_6_5 */\n\nEngine.TEXTURETYPE_UNSIGNED_SHORT_5_6_5 = 10;\n/** UNSIGNED_INT_2_10_10_10_REV */\n\nEngine.TEXTURETYPE_UNSIGNED_INT_2_10_10_10_REV = 11;\n/** UNSIGNED_INT_24_8 */\n\nEngine.TEXTURETYPE_UNSIGNED_INT_24_8 = 12;\n/** UNSIGNED_INT_10F_11F_11F_REV */\n\nEngine.TEXTURETYPE_UNSIGNED_INT_10F_11F_11F_REV = 13;\n/** UNSIGNED_INT_5_9_9_9_REV */\n\nEngine.TEXTURETYPE_UNSIGNED_INT_5_9_9_9_REV = 14;\n/** FLOAT_32_UNSIGNED_INT_24_8_REV */\n\nEngine.TEXTURETYPE_FLOAT_32_UNSIGNED_INT_24_8_REV = 15;\n/** nearest is mag = nearest and min = nearest and mip = none */\n\nEngine.TEXTURE_NEAREST_SAMPLINGMODE = 1;\n/** Bilinear is mag = linear and min = linear and mip = nearest */\n\nEngine.TEXTURE_BILINEAR_SAMPLINGMODE = 2;\n/** Trilinear is mag = linear and min = linear and mip = linear */\n\nEngine.TEXTURE_TRILINEAR_SAMPLINGMODE = 3;\n/** nearest is mag = nearest and min = nearest and mip = linear */\n\nEngine.TEXTURE_NEAREST_NEAREST_MIPLINEAR = 8;\n/** Bilinear is mag = linear and min = linear and mip = nearest */\n\nEngine.TEXTURE_LINEAR_LINEAR_MIPNEAREST = 11;\n/** Trilinear is mag = linear and min = linear and mip = linear */\n\nEngine.TEXTURE_LINEAR_LINEAR_MIPLINEAR = 3;\n/** mag = nearest and min = nearest and mip = nearest */\n\nEngine.TEXTURE_NEAREST_NEAREST_MIPNEAREST = 4;\n/** mag = nearest and min = linear and mip = nearest */\n\nEngine.TEXTURE_NEAREST_LINEAR_MIPNEAREST = 5;\n/** mag = nearest and min = linear and mip = linear */\n\nEngine.TEXTURE_NEAREST_LINEAR_MIPLINEAR = 6;\n/** mag = nearest and min = linear and mip = none */\n\nEngine.TEXTURE_NEAREST_LINEAR = 7;\n/** mag = nearest and min = nearest and mip = none */\n\nEngine.TEXTURE_NEAREST_NEAREST = 1;\n/** mag = linear and min = nearest and mip = nearest */\n\nEngine.TEXTURE_LINEAR_NEAREST_MIPNEAREST = 9;\n/** mag = linear and min = nearest and mip = linear */\n\nEngine.TEXTURE_LINEAR_NEAREST_MIPLINEAR = 10;\n/** mag = linear and min = linear and mip = none */\n\nEngine.TEXTURE_LINEAR_LINEAR = 2;\n/** mag = linear and min = nearest and mip = none */\n\nEngine.TEXTURE_LINEAR_NEAREST = 12;\n/** Explicit coordinates mode */\n\nEngine.TEXTURE_EXPLICIT_MODE = 0;\n/** Spherical coordinates mode */\n\nEngine.TEXTURE_SPHERICAL_MODE = 1;\n/** Planar coordinates mode */\n\nEngine.TEXTURE_PLANAR_MODE = 2;\n/** Cubic coordinates mode */\n\nEngine.TEXTURE_CUBIC_MODE = 3;\n/** Projection coordinates mode */\n\nEngine.TEXTURE_PROJECTION_MODE = 4;\n/** Skybox coordinates mode */\n\nEngine.TEXTURE_SKYBOX_MODE = 5;\n/** Inverse Cubic coordinates mode */\n\nEngine.TEXTURE_INVCUBIC_MODE = 6;\n/** Equirectangular coordinates mode */\n\nEngine.TEXTURE_EQUIRECTANGULAR_MODE = 7;\n/** Equirectangular Fixed coordinates mode */\n\nEngine.TEXTURE_FIXED_EQUIRECTANGULAR_MODE = 8;\n/** Equirectangular Fixed Mirrored coordinates mode */\n\nEngine.TEXTURE_FIXED_EQUIRECTANGULAR_MIRRORED_MODE = 9; // Texture rescaling mode\n\n/** Defines that texture rescaling will use a floor to find the closer power of 2 size */\n\nEngine.SCALEMODE_FLOOR = 1;\n/** Defines that texture rescaling will look for the nearest power of 2 size */\n\nEngine.SCALEMODE_NEAREST = 2;\n/** Defines that texture rescaling will use a ceil to find the closer power of 2 size */\n\nEngine.SCALEMODE_CEILING = 3;\n/**\n * Method called to create the default rescale post process on each engine.\n */\n\nEngine._RescalePostProcessFactory = null; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nEngine._RenderPassIdCounter = 0;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Engine","_observable","_internalTexture","_domManagement","_engineStore","_devTools","_thinEngine","_performanceMonitor","_perfCounter","_webGLDataBuffer","_logger","_webGLHardwareTexture","ThinEngine","NpmPackage","Version","EngineStore","Instances","LastCreatedEngine","LastCreatedScene","_createImageBitmapFromSource","imageSource","options","promise","Promise","resolve","reject","image","Image","onload","image.onload","decode","then","createImageBitmap","imageBitmap","onerror","image.onerror","src","resizeImageBitmap","bufferWidth","bufferHeight","context","createCanvas","canvas","getContext","Error","drawImage","getImageData","data","MarkAllMaterialsAsDirty","flag","predicate","engineIndex","length","engine","sceneIndex","scenes","markAllMaterialsAsDirty","DefaultLoadingScreenFactory","_WarnImport","_RescalePostProcessFactory","_compatibilityMode","mode","getInputElement","_renderingCanvas","constructor","canvasOrContext","antialias","adaptToDeviceRatio","disableManifestCheck","enableOfflineSupport","disableContextMenu","_virtualScenes","onNewSceneAddedObservable","Observable","postProcesses","isPointerLock","onResizeObservable","onCanvasBlurObservable","onCanvasFocusObservable","onCanvasPointerOutObservable","onBeginFrameObservable","customAnimationFrameRequester","onEndFrameObservable","onBeforeShaderCompilationObservable","onAfterShaderCompilationObservable","_deterministicLockstep","_lockstepMaxSteps","_timeStep","_fps","_deltaTime","_drawCalls","PerfCounter","canvasTabIndex","disablePerformanceMonitorInBackground","PerformanceMonitor","currentRenderPassId","_renderPassNames","push","_features","supportRenderPasses","_creationOptions","_sharedInit","_connectVREvents","_prepareVRComponent","autoEnableWebVR","initWebVR","_initGLContext","_rescalePostProcess","_onCanvasFocus","this._onCanvasFocus","notifyObservers","_onCanvasBlur","this._onCanvasBlur","_onCanvasContextMenu","evt","this._onCanvasContextMenu","preventDefault","addEventListener","_onBlur","this._onBlur","disable","_windowIsBackground","_onFocus","this._onFocus","enable","_onCanvasPointerOut","ev","this._onCanvasPointerOut","document","elementFromPoint","clientX","clientY","hostWindow","getHostWindow","doNotHandleTouchAction","_disableTouchAction","audioEngine","AudioEngineFactory","getRenderingCanvas","getAudioContext","getAudioDestination","IsDocumentAvailable","_onFullscreenChange","this._onFullscreenChange","isFullscreen","fullscreenElement","_pointerLockRequested","_RequestPointerlock","_onPointerLockChange","this._onPointerLockChange","pointerLockElement","undefined","OfflineProviderFactory","deterministicLockstep","lockstepMaxSteps","timeStep","_verifyPointerLock","_a","call","getAspectRatio","viewportOwner","useScreen","viewport","getRenderWidth","width","getRenderHeight","height","getScreenAspectRatio","getRenderingCanvasClientRect","getBoundingClientRect","getInputElementClientRect","isDeterministicLockStep","getLockstepMaxSteps","getTimeStep","generateMipMapsForCubemap","texture","unbind","generateMipMaps","gl","_gl","_bindTextureDirectly","TEXTURE_CUBE_MAP","generateMipmap","getDepthWrite","_depthCullingState","depthMask","setDepthWrite","getStencilBuffer","_stencilState","stencilTest","setStencilBuffer","getStencilMask","stencilMask","setStencilMask","mask","getStencilFunction","stencilFunc","getStencilFunctionReference","stencilFuncRef","getStencilFunctionMask","stencilFuncMask","setStencilFunction","setStencilFunctionReference","reference","setStencilFunctionMask","getStencilOperationFail","stencilOpStencilFail","getStencilOperationDepthFail","stencilOpDepthFail","getStencilOperationPass","stencilOpStencilDepthPass","setStencilOperationFail","operation","setStencilOperationDepthFail","setStencilOperationPass","setDitheringState","DITHER","setRasterizerState","RASTERIZER_DISCARD","getDepthFunction","depthFunc","setDepthFunction","setDepthFunctionToGreater","setDepthFunctionToGreaterOrEqual","setDepthFunctionToLess","setDepthFunctionToLessOrEqual","cacheStencilState","_cachedStencilBuffer","_cachedStencilFunction","_cachedStencilMask","_cachedStencilOperationPass","_cachedStencilOperationFail","_cachedStencilOperationDepthFail","_cachedStencilReference","restoreStencilState","setDirectViewport","x","y","currentViewport","_cachedViewport","_viewport","scissorClear","clearColor","enableScissor","clear","disableScissor","SCISSOR_TEST","scissor","_reportDrawCall","numDrawCalls","addCount","_submitVRFrame","disableVR","isVRPresenting","_requestVRFrame","_loadFileAsync","url","offlineProvider","useArrayBuffer","_loadFile","request","exception","getVertexShaderSource","program","shaders","getAttachedShaders","getShaderSource","getFragmentShaderSource","setDepthStencilTexture","channel","uniform","name","_boundUniforms","depthStencilTexture","_setTexture","setTextureFromPostProcess","postProcess","postProcessInput","_forcedOutputTexture","_textures","_currentRenderTextureInd","_bindTexture","setTextureFromPostProcessOutput","_b","_outputTexture","_rebuildBuffers","scene","resetCachedMaterial","_rebuildGeometries","_rebuildTextures","_renderFrame","index","_activeRenderLoops","renderFunction","_renderLoop","_contextWasLost","shouldRender","isDisposed","renderEvenInBackground","beginFrame","_renderViews","endFrame","requestID","_queueNewFrame","_boundRenderFunction","_frameHandler","_renderingQueueLaunched","switchFullscreen","requestPointerLock","exitFullscreen","enterFullscreen","_RequestFullscreen","_ExitFullscreen","enterPointerlock","exitPointerlock","_ExitPointerlock","_measureFps","resize","forceSetSize","setSize","camIndex","cameras","cam","_currentRenderId","hasObservers","_deletePipelineContext","pipelineContext","transformFeedback","deleteTransformFeedback","createShaderProgram","vertexCode","fragmentCode","defines","transformFeedbackVaryings","_createShaderProgram","vertexShader","fragmentShader","shaderProgram","createProgram","attachShader","webGLVersion","createTransformFeedback","bindTransformFeedback","setTranformFeedbackVaryings","linkProgram","isParallelCompiled","_finalizePipelineContext","_releaseTexture","_releaseRenderTargetWrapper","rtWrapper","forEach","camera","_postProcesses","getRenderPassNames","getCurrentRenderPassName","createRenderPassId","id","_RenderPassIdCounter","releaseRenderPassId","s","m","meshes","mesh","subMeshes","b","subMesh","_removeDrawWrapper","_rescaleTexture","source","destination","internalFormat","onComplete","texParameteri","TEXTURE_2D","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","rtt","createRenderTargetTexture","type","samplingMode","generateDepthBuffer","generateStencilBuffer","externalTextureSamplerBinding","getEffect","executeWhenCompiled","onApply","this._rescalePostProcess.onApply","effect","hostingScene","postProcessManager","directRender","copyTexImage2D","unBindFramebuffer","dispose","getFps","getDeltaTime","sampleFrame","averageFPS","instantaneousFrameTime","wrapWebGLTexture","hasMipMaps","hardwareTexture","WebGLHardwareTexture","internalTexture","InternalTexture","InternalTextureSource","Unknown","_hardwareTexture","isReady","useMipMaps","updateTextureSamplingMode","_uploadImageToTexture","faceIndex","lod","textureType","_getWebGLTextureType","format","_getInternalFormat","_getRGBABufferInternalSizedFormat","bindTarget","isCube","_unpackFlipY","invertY","target","TEXTURE_CUBE_MAP_POSITIVE_X","texImage2D","updateTextureComparisonFunction","comparisonFunction","Logger","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","NONE","COMPARE_REF_TO_TEXTURE","_comparisonFunction","createInstancesBuffer","capacity","buffer","createBuffer","result","WebGLDataBuffer","bindArrayBuffer","bufferData","ARRAY_BUFFER","DYNAMIC_DRAW","references","deleteInstancesBuffer","deleteBuffer","_clientWaitAsync","sync","flags","intervalms","check","res","clientWaitSync","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","_readPixelsAsync","w","h","outputBuffer","_webGLVersion","buf","bindBuffer","PIXEL_PACK_BUFFER","byteLength","STREAM_READ","readPixels","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","deleteSync","getBufferSubData","hideLoadingUI","removeEventListener","indexOf","splice","OnEnginesDisposedObservable","setAttribute","style","touchAction","webkitTapHighlightColor","displayLoadingUI","IsWindowObjectExist","loadingScreen","_loadingScreen","text","loadingUIText","color","loadingUIBackgroundColor","createVideoElement","constraints","createElement","element","focus","catch","exitPointerLock","requestFunction","requestFullscreen","webkitRequestFullscreen","anyDoc","webkitCancelFullScreen","getFontOffset","font","innerHTML","block","display","verticalAlign","div","whiteSpace","appendChild","body","fontAscent","fontHeight","top","removeChild","ascent","descent","ALPHA_DISABLE","ALPHA_ADD","ALPHA_COMBINE","ALPHA_SUBTRACT","ALPHA_MULTIPLY","ALPHA_MAXIMIZED","ALPHA_ONEONE","ALPHA_PREMULTIPLIED","ALPHA_PREMULTIPLIED_PORTERDUFF","ALPHA_INTERPOLATE","ALPHA_SCREENMODE","DELAYLOADSTATE_NONE","DELAYLOADSTATE_LOADED","DELAYLOADSTATE_LOADING","DELAYLOADSTATE_NOTLOADED","NEVER","ALWAYS","LESS","EQUAL","LEQUAL","GREATER","GEQUAL","NOTEQUAL","KEEP","REPLACE","INCR","DECR","INVERT","INCR_WRAP","DECR_WRAP","TEXTURE_CLAMP_ADDRESSMODE","TEXTURE_WRAP_ADDRESSMODE","TEXTURE_MIRROR_ADDRESSMODE","TEXTUREFORMAT_ALPHA","TEXTUREFORMAT_LUMINANCE","TEXTUREFORMAT_LUMINANCE_ALPHA","TEXTUREFORMAT_RGB","TEXTUREFORMAT_RGBA","TEXTUREFORMAT_RED","TEXTUREFORMAT_R","TEXTUREFORMAT_RG","TEXTUREFORMAT_RED_INTEGER","TEXTUREFORMAT_R_INTEGER","TEXTUREFORMAT_RG_INTEGER","TEXTUREFORMAT_RGB_INTEGER","TEXTUREFORMAT_RGBA_INTEGER","TEXTURETYPE_UNSIGNED_BYTE","TEXTURETYPE_UNSIGNED_INT","TEXTURETYPE_FLOAT","TEXTURETYPE_HALF_FLOAT","TEXTURETYPE_BYTE","TEXTURETYPE_SHORT","TEXTURETYPE_UNSIGNED_SHORT","TEXTURETYPE_INT","TEXTURETYPE_UNSIGNED_INTEGER","TEXTURETYPE_UNSIGNED_SHORT_4_4_4_4","TEXTURETYPE_UNSIGNED_SHORT_5_5_5_1","TEXTURETYPE_UNSIGNED_SHORT_5_6_5","TEXTURETYPE_UNSIGNED_INT_2_10_10_10_REV","TEXTURETYPE_UNSIGNED_INT_24_8","TEXTURETYPE_UNSIGNED_INT_10F_11F_11F_REV","TEXTURETYPE_UNSIGNED_INT_5_9_9_9_REV","TEXTURETYPE_FLOAT_32_UNSIGNED_INT_24_8_REV","TEXTURE_NEAREST_SAMPLINGMODE","TEXTURE_BILINEAR_SAMPLINGMODE","TEXTURE_TRILINEAR_SAMPLINGMODE","TEXTURE_NEAREST_NEAREST_MIPLINEAR","TEXTURE_LINEAR_LINEAR_MIPNEAREST","TEXTURE_LINEAR_LINEAR_MIPLINEAR","TEXTURE_NEAREST_NEAREST_MIPNEAREST","TEXTURE_NEAREST_LINEAR_MIPNEAREST","TEXTURE_NEAREST_LINEAR_MIPLINEAR","TEXTURE_NEAREST_LINEAR","TEXTURE_NEAREST_NEAREST","TEXTURE_LINEAR_NEAREST_MIPNEAREST","TEXTURE_LINEAR_NEAREST_MIPLINEAR","TEXTURE_LINEAR_LINEAR","TEXTURE_LINEAR_NEAREST","TEXTURE_EXPLICIT_MODE","TEXTURE_SPHERICAL_MODE","TEXTURE_PLANAR_MODE","TEXTURE_CUBIC_MODE","TEXTURE_PROJECTION_MODE","TEXTURE_SKYBOX_MODE","TEXTURE_INVCUBIC_MODE","TEXTURE_EQUIRECTANGULAR_MODE","TEXTURE_FIXED_EQUIRECTANGULAR_MODE","TEXTURE_FIXED_EQUIRECTANGULAR_MIRRORED_MODE","SCALEMODE_FLOOR","SCALEMODE_NEAREST","SCALEMODE_CEILING"]
}
