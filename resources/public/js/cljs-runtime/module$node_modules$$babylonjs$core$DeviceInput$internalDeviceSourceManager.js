shadow$provide.module$node_modules$$babylonjs$core$DeviceInput$internalDeviceSourceManager=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.InternalDeviceSourceManager=void 0;var _deviceEnums=require("module$node_modules$$babylonjs$core$DeviceInput$InputDevices$deviceEnums"),_nativeDeviceInputSystem=require("module$node_modules$$babylonjs$core$DeviceInput$nativeDeviceInputSystem"),_webDeviceInputSystem=require("module$node_modules$$babylonjs$core$DeviceInput$webDeviceInputSystem"),
_deviceSource=require("module$node_modules$$babylonjs$core$DeviceInput$InputDevices$deviceSource");class InternalDeviceSourceManager{constructor(engine){this._registeredManagers=[];this._refCount=0;this.registerManager=manager=>{for(let deviceType=0;deviceType<this._devices.length;deviceType++){const device=this._devices[deviceType];for(const deviceSlotKey in device)manager._addDevice(new _deviceSource.DeviceSource(this._deviceInputSystem,deviceType,+deviceSlotKey))}this._registeredManagers.push(manager)};
this.unregisterManager=manager=>{manager=this._registeredManagers.indexOf(manager);-1<manager&&this._registeredManagers.splice(manager,1)};var numberOfDeviceTypes=Object.keys(_deviceEnums.DeviceType).length/2;this._devices=Array(numberOfDeviceTypes);numberOfDeviceTypes=(deviceType,deviceSlot)=>{this._devices[deviceType]||(this._devices[deviceType]=[]);this._devices[deviceType][deviceSlot]||(this._devices[deviceType][deviceSlot]=deviceSlot);for(const manager of this._registeredManagers){const deviceSource=
new _deviceSource.DeviceSource(this._deviceInputSystem,deviceType,deviceSlot);manager._addDevice(deviceSource)}};const onDeviceDisconnected=(deviceType,deviceSlot)=>{var _a;(null===(_a=this._devices[deviceType])||void 0===_a?0:_a[deviceSlot])&&delete this._devices[deviceType][deviceSlot];for(const manager of this._registeredManagers)manager._removeDevice(deviceType,deviceSlot)},onInputChanged=(deviceType,deviceSlot,eventData)=>{if(eventData)for(const manager of this._registeredManagers)manager._onInputChanged(deviceType,
deviceSlot,eventData)};this._deviceInputSystem="undefined"!==typeof _native?new _nativeDeviceInputSystem.NativeDeviceInputSystem(numberOfDeviceTypes,onDeviceDisconnected,onInputChanged):new _webDeviceInputSystem.WebDeviceInputSystem(engine,numberOfDeviceTypes,onDeviceDisconnected,onInputChanged)}dispose(){this._deviceInputSystem.dispose()}}exports.InternalDeviceSourceManager=InternalDeviceSourceManager}
//# sourceMappingURL=module$node_modules$$babylonjs$core$DeviceInput$internalDeviceSourceManager.js.map
