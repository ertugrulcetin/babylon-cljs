shadow$provide.module$node_modules$$babylonjs$core$Engines$WebGL$webGL2ShaderProcessors=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.WebGL2ShaderProcessor=void 0;var _shaderLanguage=require("module$node_modules$$babylonjs$core$Materials$shaderLanguage");const varyingRegex=/(flat\s)?\s*varying\s*.*/;class WebGL2ShaderProcessor{constructor(){this.shaderLanguage=_shaderLanguage.ShaderLanguage.GLSL}attributeProcessor(attribute){return attribute.replace("attribute",
"in")}varyingCheck(varying,_isFragment){return varyingRegex.test(varying)}varyingProcessor(varying,isFragment){return varying.replace("varying",isFragment?"in":"out")}postProcessor(code,defines,isFragment){const hasDrawBuffersExtension=-1!==code.search(/#extension.+GL_EXT_draw_buffers.+require/);code=code.replace(/#extension.+(GL_OVR_multiview2|GL_OES_standard_derivatives|GL_EXT_shader_texture_lod|GL_EXT_frag_depth|GL_EXT_draw_buffers).+(enable|require)/g,"");code=code.replace(/texture2D\s*\(/g,"texture(");
if(isFragment)code=code.replace(/texture2DLodEXT\s*\(/g,"textureLod("),code=code.replace(/textureCubeLodEXT\s*\(/g,"textureLod("),code=code.replace(/textureCube\s*\(/g,"texture("),code=code.replace(/gl_FragDepthEXT/g,"gl_FragDepth"),code=code.replace(/gl_FragColor/g,"glFragColor"),code=code.replace(/gl_FragData/g,"glFragData"),code=code.replace(/void\s+?main\s*\(/g,(hasDrawBuffersExtension?"":"layout(location \x3d 0) out vec4 glFragColor;\n")+"void main(");else if(-1!==defines.indexOf("#define MULTIVIEW"))return"#extension GL_OVR_multiview2 : require\nlayout (num_views \x3d 2) in;\n"+
code;return code}}exports.WebGL2ShaderProcessor=WebGL2ShaderProcessor}
//# sourceMappingURL=module$node_modules$$babylonjs$core$Engines$WebGL$webGL2ShaderProcessors.js.map
