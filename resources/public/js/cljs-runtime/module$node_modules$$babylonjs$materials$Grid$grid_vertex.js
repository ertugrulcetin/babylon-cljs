shadow$provide.module$node_modules$$babylonjs$materials$Grid$grid_vertex=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.gridVertexShader=void 0;global=require("module$node_modules$$babylonjs$core$Engines$shaderStore");require("module$node_modules$$babylonjs$core$Shaders$ShadersInclude$instancesDeclaration");require("module$node_modules$$babylonjs$core$Shaders$ShadersInclude$fogVertexDeclaration");require("module$node_modules$$babylonjs$core$Shaders$ShadersInclude$instancesVertex");
require("module$node_modules$$babylonjs$core$Shaders$ShadersInclude$fogVertex");global.ShaderStore.ShadersStore.gridVertexShader="precision highp float;\nattribute vec3 position;\nattribute vec3 normal;\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#include\x3cinstancesDeclaration\x3e\nuniform mat4 projection;\nuniform mat4 view;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n#include\x3cfogVertexDeclaration\x3e\n#ifdef OPACITY\nvarying vec2 vOpacityUV;\nuniform mat4 opacityMatrix;\nuniform vec2 vOpacityInfos;\n#endif\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include\x3cinstancesVertex\x3e\nvec4 worldPos\x3dfinalWorld*vec4(position,1.0);\n#include\x3cfogVertex\x3e\nvec4 cameraSpacePosition\x3dview*worldPos;\ngl_Position\x3dprojection*cameraSpacePosition;\n#ifdef OPACITY\n#ifndef UV1\nvec2 uv\x3dvec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2\x3dvec2(0.,0.);\n#endif\nif (vOpacityInfos.x\x3d\x3d0.)\n{\nvOpacityUV\x3dvec2(opacityMatrix*vec4(uv,1.0,0.0));\n}\nelse\n{\nvOpacityUV\x3dvec2(opacityMatrix*vec4(uv2,1.0,0.0));\n}\n#endif \nvPosition\x3dposition;\nvNormal\x3dnormal;\n#define CUSTOM_VERTEX_MAIN_END\n}";
exports.gridVertexShader={name:"gridVertexShader",shader:"precision highp float;\nattribute vec3 position;\nattribute vec3 normal;\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#include\x3cinstancesDeclaration\x3e\nuniform mat4 projection;\nuniform mat4 view;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n#include\x3cfogVertexDeclaration\x3e\n#ifdef OPACITY\nvarying vec2 vOpacityUV;\nuniform mat4 opacityMatrix;\nuniform vec2 vOpacityInfos;\n#endif\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include\x3cinstancesVertex\x3e\nvec4 worldPos\x3dfinalWorld*vec4(position,1.0);\n#include\x3cfogVertex\x3e\nvec4 cameraSpacePosition\x3dview*worldPos;\ngl_Position\x3dprojection*cameraSpacePosition;\n#ifdef OPACITY\n#ifndef UV1\nvec2 uv\x3dvec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2\x3dvec2(0.,0.);\n#endif\nif (vOpacityInfos.x\x3d\x3d0.)\n{\nvOpacityUV\x3dvec2(opacityMatrix*vec4(uv,1.0,0.0));\n}\nelse\n{\nvOpacityUV\x3dvec2(opacityMatrix*vec4(uv2,1.0,0.0));\n}\n#endif \nvPosition\x3dposition;\nvNormal\x3dnormal;\n#define CUSTOM_VERTEX_MAIN_END\n}"}}
//# sourceMappingURL=module$node_modules$$babylonjs$materials$Grid$grid_vertex.js.map
