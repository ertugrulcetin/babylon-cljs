{
"version":3,
"file":"module$node_modules$$babylonjs$core$Materials$materialStencilState.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@babylonjs/core/Materials/materialStencilState.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Materials$materialStencilState\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MaterialStencilState = void 0;\n\nvar _tslibEs = require(\"../tslib.es6.js\");\n\nvar _decorators = require(\"../Misc/decorators.js\");\n\n/**\n * Class that holds the different stencil states of a material\n * Usage example: https://playground.babylonjs.com/#CW5PRI#10\n */\nclass MaterialStencilState {\n  /**\n   * Creates a material stencil state instance\n   */\n  constructor() {\n    this.reset();\n  }\n  /**\n   * Resets all the stencil states to default values\n   */\n\n\n  reset() {\n    this.enabled = false;\n    this.mask = 0xff;\n    this.func = 519;\n    this.funcRef = 1;\n    this.funcMask = 0xff;\n    this.opStencilFail = 7680;\n    this.opDepthFail = 7680;\n    this.opStencilDepthPass = 7681;\n  }\n  /**\n   * Gets or sets the stencil function\n   */\n\n\n  get func() {\n    return this._func;\n  }\n\n  set func(value) {\n    this._func = value;\n  }\n  /**\n   * Gets or sets the stencil function reference\n   */\n\n\n  get funcRef() {\n    return this._funcRef;\n  }\n\n  set funcRef(value) {\n    this._funcRef = value;\n  }\n  /**\n   * Gets or sets the stencil function mask\n   */\n\n\n  get funcMask() {\n    return this._funcMask;\n  }\n\n  set funcMask(value) {\n    this._funcMask = value;\n  }\n  /**\n   * Gets or sets the operation when the stencil test fails\n   */\n\n\n  get opStencilFail() {\n    return this._opStencilFail;\n  }\n\n  set opStencilFail(value) {\n    this._opStencilFail = value;\n  }\n  /**\n   * Gets or sets the operation when the depth test fails\n   */\n\n\n  get opDepthFail() {\n    return this._opDepthFail;\n  }\n\n  set opDepthFail(value) {\n    this._opDepthFail = value;\n  }\n  /**\n   * Gets or sets the operation when the stencil+depth test succeeds\n   */\n\n\n  get opStencilDepthPass() {\n    return this._opStencilDepthPass;\n  }\n\n  set opStencilDepthPass(value) {\n    this._opStencilDepthPass = value;\n  }\n  /**\n   * Gets or sets the stencil mask\n   */\n\n\n  get mask() {\n    return this._mask;\n  }\n\n  set mask(value) {\n    this._mask = value;\n  }\n  /**\n   * Enables or disables the stencil test\n   */\n\n\n  get enabled() {\n    return this._enabled;\n  }\n\n  set enabled(value) {\n    this._enabled = value;\n  }\n  /**\n   * Get the current class name, useful for serialization or dynamic coding.\n   * @returns \"MaterialStencilState\"\n   */\n\n\n  getClassName() {\n    return \"MaterialStencilState\";\n  }\n  /**\n   * Makes a duplicate of the current configuration into another one.\n   * @param stencilState defines stencil state where to copy the info\n   */\n\n\n  copyTo(stencilState) {\n    _decorators.SerializationHelper.Clone(() => stencilState, this);\n  }\n  /**\n   * Serializes this stencil configuration.\n   * @returns - An object with the serialized config.\n   */\n\n\n  serialize() {\n    return _decorators.SerializationHelper.Serialize(this);\n  }\n  /**\n   * Parses a stencil state configuration from a serialized object.\n   * @param source - Serialized object.\n   * @param scene Defines the scene we are parsing for\n   * @param rootUrl Defines the rootUrl to load from\n   */\n\n\n  parse(source, scene, rootUrl) {\n    _decorators.SerializationHelper.Parse(() => this, source, scene, rootUrl);\n  }\n\n}\n\nexports.MaterialStencilState = MaterialStencilState;\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], MaterialStencilState.prototype, \"func\", null);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], MaterialStencilState.prototype, \"funcRef\", null);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], MaterialStencilState.prototype, \"funcMask\", null);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], MaterialStencilState.prototype, \"opStencilFail\", null);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], MaterialStencilState.prototype, \"opDepthFail\", null);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], MaterialStencilState.prototype, \"opStencilDepthPass\", null);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], MaterialStencilState.prototype, \"mask\", null);\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], MaterialStencilState.prototype, \"enabled\", null);\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","MaterialStencilState","_tslibEs","_decorators","constructor","reset","enabled","mask","func","funcRef","funcMask","opDepthFail","opStencilFail","opStencilDepthPass","_func","_funcRef","_funcMask","_opStencilFail","_opDepthFail","_opStencilDepthPass","_mask","_enabled","getClassName","copyTo","stencilState","SerializationHelper","Clone","serialize","Serialize","parse","source","scene","rootUrl","Parse","__decorate","prototype"]
}
