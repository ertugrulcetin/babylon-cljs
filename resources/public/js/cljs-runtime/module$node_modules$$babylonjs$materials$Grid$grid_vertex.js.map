{
"version":3,
"file":"module$node_modules$$babylonjs$materials$Grid$grid_vertex.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,gBAAR,CAA2B,IAAK,EAE5BC,OAAAA,CAAeP,OAAA,CAAQ,yDAAR,CAEnBA,QAAA,CAAQ,iFAAR,CAEAA,QAAA,CAAQ,iFAAR,CAEAA,QAAA,CAAQ,4EAAR,CAEAA;OAAA,CAAQ,sEAAR,CAqDAO,OAAaC,CAAAA,WAAYC,CAAAA,YAAzB,CAAA,gBAAA,CAjDgBC,ojCAwDhBR;OAAQI,CAAAA,gBAAR,CAJyBA,CACvBK,KAtDWA,kBAqDYL,CAEvBI,OAtDcA,ojCAoDSJ,CAxE6F;",
"sources":["node_modules/@babylonjs/materials/Grid/grid.vertex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$materials$Grid$grid_vertex\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gridVertexShader = void 0;\n\nvar _shaderStore = require(\"@babylonjs/core/Engines/shaderStore.js\");\n\nrequire(\"@babylonjs/core/Shaders/ShadersInclude/instancesDeclaration.js\");\n\nrequire(\"@babylonjs/core/Shaders/ShadersInclude/fogVertexDeclaration.js\");\n\nrequire(\"@babylonjs/core/Shaders/ShadersInclude/instancesVertex.js\");\n\nrequire(\"@babylonjs/core/Shaders/ShadersInclude/fogVertex.js\");\n\n// Do not edit.\nconst name = \"gridVertexShader\";\nconst shader = `precision highp float;\nattribute vec3 position;\nattribute vec3 normal;\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#include<instancesDeclaration>\nuniform mat4 projection;\nuniform mat4 view;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n#include<fogVertexDeclaration>\n#ifdef OPACITY\nvarying vec2 vOpacityUV;\nuniform mat4 opacityMatrix;\nuniform vec2 vOpacityInfos;\n#endif\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\nvec4 worldPos=finalWorld*vec4(position,1.0);\n#include<fogVertex>\nvec4 cameraSpacePosition=view*worldPos;\ngl_Position=projection*cameraSpacePosition;\n#ifdef OPACITY\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\nif (vOpacityInfos.x==0.)\n{\nvOpacityUV=vec2(opacityMatrix*vec4(uv,1.0,0.0));\n}\nelse\n{\nvOpacityUV=vec2(opacityMatrix*vec4(uv2,1.0,0.0));\n}\n#endif \nvPosition=position;\nvNormal=normal;\n#define CUSTOM_VERTEX_MAIN_END\n}`; // Sideeffect\n\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\n\nconst gridVertexShader = {\n  name,\n  shader\n};\nexports.gridVertexShader = gridVertexShader;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","gridVertexShader","_shaderStore","ShaderStore","ShadersStore","shader","name"]
}
