{
"version":3,
"file":"module$node_modules$$babylonjs$core$Misc$domManagement.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkBnHC,QAASA,oBAAmB,EAAG,CAC7B,MAAyB,WAAzB,GAAO,MAAOC,OADe,CAS/BC,QAASA,qBAAoB,EAAG,CAC9B,MAA4B,WAA5B,GAAO,MAAOC,UADgB,CAShCC,QAASA,oBAAmB,EAAG,CAC7B,MAA2B,WAA3B,GAAO,MAAOC,SADe,CAU/BC,QAASA,kBAAiB,CAACC,OAAD,CAAU,CAClC,IAAIC,OAAS,EAGb,KAFIC,OAEJ,CAFYF,OAAQG,CAAAA,UAEpB,CAAOD,OAAP,CAAA,CACyB,CAIvB,GAJIA,OAAME,CAAAA,QAIV,GAHEH,MAGF,EAHYC,OAAMG,CAAAA,WAGlB,EAAAH,OAAA,CAAQA,OAAMI,CAAAA,WAGhB,OAAOL,OAZ2B,CA3CpCM,MAAOC,CAAAA,cAAP,CAAsBhB,OAAtB;AAA+B,YAA/B,CAA6C,CAC3CiB,MAAO,CAAA,CADoC,CAA7C,CAGAjB,QAAQC,CAAAA,mBAAR,CAA8BA,mBAC9BD,QAAQG,CAAAA,oBAAR,CAA+BA,oBAC/BH,QAAQK,CAAAA,mBAAR,CAA8BA,mBAC9BL,QAAQO,CAAAA,iBAAR,CAA4BA,iBAC5BP,QAAQkB,CAAAA,aAAR,CAAwB,IAAK,EAkF7BlB,QAAQkB,CAAAA,aAAR,CA1BsBA,CAKpBjB,mBALoBiB,CAWpBf,oBAXoBe,CAiBpBb,mBAjBoBa,CAwBpBX,iBAxBoBW,CAlE6F;",
"sources":["node_modules/@babylonjs/core/Misc/domManagement.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Misc$domManagement\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IsWindowObjectExist = IsWindowObjectExist;\nexports.IsNavigatorAvailable = IsNavigatorAvailable;\nexports.IsDocumentAvailable = IsDocumentAvailable;\nexports.GetDOMTextContent = GetDOMTextContent;\nexports.DomManagement = void 0;\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/**\n * Checks if the window object exists\n * @returns true if the window object exists\n */\nfunction IsWindowObjectExist() {\n  return typeof window !== \"undefined\";\n}\n/**\n * Checks if the navigator object exists\n * @returns true if the navigator object exists\n */\n\n\nfunction IsNavigatorAvailable() {\n  return typeof navigator !== \"undefined\";\n}\n/**\n * Check if the document object exists\n * @returns true if the document object exists\n */\n\n\nfunction IsDocumentAvailable() {\n  return typeof document !== \"undefined\";\n}\n/**\n * Extracts text content from a DOM element hierarchy\n * @param element defines the root element\n * @returns a string\n */\n\n\nfunction GetDOMTextContent(element) {\n  let result = \"\";\n  let child = element.firstChild;\n\n  while (child) {\n    if (child.nodeType === 3) {\n      result += child.textContent;\n    }\n\n    child = child.nextSibling;\n  }\n\n  return result;\n}\n/**\n * Sets of helpers dealing with the DOM and some of the recurrent functions needed in\n * Babylon.js\n */\n\n\nconst DomManagement = {\n  /**\n   * Checks if the window object exists\n   * @returns true if the window object exists\n   */\n  IsWindowObjectExist,\n\n  /**\n   * Checks if the navigator object exists\n   * @returns true if the navigator object exists\n   */\n  IsNavigatorAvailable,\n\n  /**\n   * Check if the document object exists\n   * @returns true if the document object exists\n   */\n  IsDocumentAvailable,\n\n  /**\n   * Extracts text content from a DOM element hierarchy\n   * @param element defines the root element\n   * @returns a string\n   */\n  GetDOMTextContent\n};\nexports.DomManagement = DomManagement;\n};"],
"names":["shadow$provide","global","require","module","exports","IsWindowObjectExist","window","IsNavigatorAvailable","navigator","IsDocumentAvailable","document","GetDOMTextContent","element","result","child","firstChild","nodeType","textContent","nextSibling","Object","defineProperty","value","DomManagement"]
}
