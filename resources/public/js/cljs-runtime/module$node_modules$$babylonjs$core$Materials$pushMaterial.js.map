{
"version":3,
"file":"module$node_modules$$babylonjs$core$Materials$pushMaterial.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@babylonjs/core/Materials/pushMaterial.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Materials$pushMaterial\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PushMaterial = void 0;\n\nvar _mathVector = require(\"../Maths/math.vector.js\");\n\nvar _material = require(\"../Materials/material.js\");\n\n/**\n * Base class of materials working in push mode in babylon JS\n * @internal\n */\nclass PushMaterial extends _material.Material {\n  constructor(name, scene, storeEffectOnSubMeshes = true) {\n    super(name, scene);\n    this._normalMatrix = new _mathVector.Matrix();\n    this._storeEffectOnSubMeshes = storeEffectOnSubMeshes;\n  }\n\n  getEffect() {\n    return this._storeEffectOnSubMeshes ? this._activeEffect : super.getEffect();\n  }\n\n  isReady(mesh, useInstances) {\n    if (!mesh) {\n      return false;\n    }\n\n    if (!this._storeEffectOnSubMeshes) {\n      return true;\n    }\n\n    if (!mesh.subMeshes || mesh.subMeshes.length === 0) {\n      return true;\n    }\n\n    return this.isReadyForSubMesh(mesh, mesh.subMeshes[0], useInstances);\n  }\n\n  _isReadyForSubMesh(subMesh) {\n    const defines = subMesh.materialDefines;\n\n    if (!this.checkReadyOnEveryCall && subMesh.effect && defines) {\n      if (defines._renderId === this.getScene().getRenderId()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Binds the given world matrix to the active effect\n   *\n   * @param world the matrix to bind\n   */\n\n\n  bindOnlyWorldMatrix(world) {\n    this._activeEffect.setMatrix(\"world\", world);\n  }\n  /**\n   * Binds the given normal matrix to the active effect\n   *\n   * @param normalMatrix the matrix to bind\n   */\n\n\n  bindOnlyNormalMatrix(normalMatrix) {\n    this._activeEffect.setMatrix(\"normalMatrix\", normalMatrix);\n  }\n\n  bind(world, mesh) {\n    if (!mesh) {\n      return;\n    }\n\n    this.bindForSubMesh(world, mesh, mesh.subMeshes[0]);\n  }\n\n  _afterBind(mesh, effect = null) {\n    super._afterBind(mesh, effect);\n\n    this.getScene()._cachedEffect = effect;\n\n    if (effect) {\n      effect._forceRebindOnNextCall = false;\n    }\n  }\n\n  _mustRebind(scene, effect, visibility = 1) {\n    return scene.isCachedMaterialInvalid(this, effect, visibility);\n  }\n\n  dispose(forceDisposeEffect, forceDisposeTextures, notBoundToMesh) {\n    this._activeEffect = undefined;\n    super.dispose(forceDisposeEffect, forceDisposeTextures, notBoundToMesh);\n  }\n\n}\n\nexports.PushMaterial = PushMaterial;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","PushMaterial","_mathVector","_material","Material","constructor","name","scene","storeEffectOnSubMeshes","_normalMatrix","Matrix","_storeEffectOnSubMeshes","getEffect","_activeEffect","isReady","mesh","useInstances","subMeshes","length","isReadyForSubMesh","_isReadyForSubMesh","subMesh","defines","materialDefines","checkReadyOnEveryCall","effect","_renderId","getScene","getRenderId","bindOnlyWorldMatrix","world","setMatrix","bindOnlyNormalMatrix","normalMatrix","bind","bindForSubMesh","_afterBind","_cachedEffect","_forceRebindOnNextCall","_mustRebind","visibility","isCachedMaterialInvalid","dispose","forceDisposeEffect","forceDisposeTextures","notBoundToMesh","undefined"]
}
