{
"version":3,
"file":"module$node_modules$$babylonjs$core$Rendering$renderingGroup.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/@babylonjs/core/Rendering/renderingGroup.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Rendering$renderingGroup\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RenderingGroup = void 0;\n\nvar _smartArray = require(\"../Misc/smartArray.js\");\n\nvar _mathVector = require(\"../Maths/math.vector.js\");\n\n/**\n * This represents the object necessary to create a rendering group.\n * This is exclusively used and created by the rendering manager.\n * To modify the behavior, you use the available helpers in your scene or meshes.\n * @internal\n */\nclass RenderingGroup {\n  /**\n   * Set the opaque sort comparison function.\n   * If null the sub meshes will be render in the order they were created\n   */\n  set opaqueSortCompareFn(value) {\n    if (value) {\n      this._opaqueSortCompareFn = value;\n    } else {\n      this._opaqueSortCompareFn = RenderingGroup.PainterSortCompare;\n    }\n\n    this._renderOpaque = this._renderOpaqueSorted;\n  }\n  /**\n   * Set the alpha test sort comparison function.\n   * If null the sub meshes will be render in the order they were created\n   */\n\n\n  set alphaTestSortCompareFn(value) {\n    if (value) {\n      this._alphaTestSortCompareFn = value;\n    } else {\n      this._alphaTestSortCompareFn = RenderingGroup.PainterSortCompare;\n    }\n\n    this._renderAlphaTest = this._renderAlphaTestSorted;\n  }\n  /**\n   * Set the transparent sort comparison function.\n   * If null the sub meshes will be render in the order they were created\n   */\n\n\n  set transparentSortCompareFn(value) {\n    if (value) {\n      this._transparentSortCompareFn = value;\n    } else {\n      this._transparentSortCompareFn = RenderingGroup.defaultTransparentSortCompare;\n    }\n\n    this._renderTransparent = this._renderTransparentSorted;\n  }\n  /**\n   * Creates a new rendering group.\n   * @param index The rendering group index\n   * @param scene\n   * @param opaqueSortCompareFn The opaque sort comparison function. If null no order is applied\n   * @param alphaTestSortCompareFn The alpha test sort comparison function. If null no order is applied\n   * @param transparentSortCompareFn The transparent sort comparison function. If null back to front + alpha index sort is applied\n   */\n\n\n  constructor(index, scene, opaqueSortCompareFn = null, alphaTestSortCompareFn = null, transparentSortCompareFn = null) {\n    this.index = index;\n    this._opaqueSubMeshes = new _smartArray.SmartArray(256);\n    this._transparentSubMeshes = new _smartArray.SmartArray(256);\n    this._alphaTestSubMeshes = new _smartArray.SmartArray(256);\n    this._depthOnlySubMeshes = new _smartArray.SmartArray(256);\n    this._particleSystems = new _smartArray.SmartArray(256);\n    this._spriteManagers = new _smartArray.SmartArray(256);\n    /** @internal */\n\n    this._empty = true;\n    /** @internal */\n\n    this._edgesRenderers = new _smartArray.SmartArrayNoDuplicate(16);\n    this._scene = scene;\n    this.opaqueSortCompareFn = opaqueSortCompareFn;\n    this.alphaTestSortCompareFn = alphaTestSortCompareFn;\n    this.transparentSortCompareFn = transparentSortCompareFn;\n  }\n  /**\n   * Render all the sub meshes contained in the group.\n   * @param customRenderFunction Used to override the default render behaviour of the group.\n   * @param renderSprites\n   * @param renderParticles\n   * @param activeMeshes\n   * @returns true if rendered some submeshes.\n   */\n\n\n  render(customRenderFunction, renderSprites, renderParticles, activeMeshes) {\n    if (customRenderFunction) {\n      customRenderFunction(this._opaqueSubMeshes, this._alphaTestSubMeshes, this._transparentSubMeshes, this._depthOnlySubMeshes);\n      return;\n    }\n\n    const engine = this._scene.getEngine(); // Depth only\n\n\n    if (this._depthOnlySubMeshes.length !== 0) {\n      engine.setColorWrite(false);\n\n      this._renderAlphaTest(this._depthOnlySubMeshes);\n\n      engine.setColorWrite(true);\n    } // Opaque\n\n\n    if (this._opaqueSubMeshes.length !== 0) {\n      this._renderOpaque(this._opaqueSubMeshes);\n    } // Alpha test\n\n\n    if (this._alphaTestSubMeshes.length !== 0) {\n      this._renderAlphaTest(this._alphaTestSubMeshes);\n    }\n\n    const stencilState = engine.getStencilBuffer();\n    engine.setStencilBuffer(false); // Sprites\n\n    if (renderSprites) {\n      this._renderSprites();\n    } // Particles\n\n\n    if (renderParticles) {\n      this._renderParticles(activeMeshes);\n    }\n\n    if (this.onBeforeTransparentRendering) {\n      this.onBeforeTransparentRendering();\n    } // Transparent\n\n\n    if (this._transparentSubMeshes.length !== 0 || this._scene.useOrderIndependentTransparency) {\n      engine.setStencilBuffer(stencilState);\n\n      if (this._scene.useOrderIndependentTransparency) {\n        const excludedMeshes = this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);\n\n        if (excludedMeshes.length) {\n          // Render leftover meshes that could not be processed by depth peeling\n          this._renderTransparent(excludedMeshes);\n        }\n      } else {\n        this._renderTransparent(this._transparentSubMeshes);\n      }\n\n      engine.setAlphaMode(0);\n    } // Set back stencil to false in case it changes before the edge renderer.\n\n\n    engine.setStencilBuffer(false); // Edges\n\n    if (this._edgesRenderers.length) {\n      for (let edgesRendererIndex = 0; edgesRendererIndex < this._edgesRenderers.length; edgesRendererIndex++) {\n        this._edgesRenderers.data[edgesRendererIndex].render();\n      }\n\n      engine.setAlphaMode(0);\n    } // Restore Stencil state.\n\n\n    engine.setStencilBuffer(stencilState);\n  }\n  /**\n   * Renders the opaque submeshes in the order from the opaqueSortCompareFn.\n   * @param subMeshes The submeshes to render\n   */\n\n\n  _renderOpaqueSorted(subMeshes) {\n    return RenderingGroup._RenderSorted(subMeshes, this._opaqueSortCompareFn, this._scene.activeCamera, false);\n  }\n  /**\n   * Renders the opaque submeshes in the order from the alphatestSortCompareFn.\n   * @param subMeshes The submeshes to render\n   */\n\n\n  _renderAlphaTestSorted(subMeshes) {\n    return RenderingGroup._RenderSorted(subMeshes, this._alphaTestSortCompareFn, this._scene.activeCamera, false);\n  }\n  /**\n   * Renders the opaque submeshes in the order from the transparentSortCompareFn.\n   * @param subMeshes The submeshes to render\n   */\n\n\n  _renderTransparentSorted(subMeshes) {\n    return RenderingGroup._RenderSorted(subMeshes, this._transparentSortCompareFn, this._scene.activeCamera, true);\n  }\n  /**\n   * Renders the submeshes in a specified order.\n   * @param subMeshes The submeshes to sort before render\n   * @param sortCompareFn The comparison function use to sort\n   * @param camera The camera position use to preprocess the submeshes to help sorting\n   * @param transparent Specifies to activate blending if true\n   */\n\n\n  static _RenderSorted(subMeshes, sortCompareFn, camera, transparent) {\n    let subIndex = 0;\n    let subMesh;\n    const cameraPosition = camera ? camera.globalPosition : RenderingGroup._ZeroVector;\n\n    if (transparent) {\n      for (; subIndex < subMeshes.length; subIndex++) {\n        subMesh = subMeshes.data[subIndex];\n        subMesh._alphaIndex = subMesh.getMesh().alphaIndex;\n        subMesh._distanceToCamera = _mathVector.Vector3.Distance(subMesh.getBoundingInfo().boundingSphere.centerWorld, cameraPosition);\n      }\n    }\n\n    const sortedArray = subMeshes.length === subMeshes.data.length ? subMeshes.data : subMeshes.data.slice(0, subMeshes.length);\n\n    if (sortCompareFn) {\n      sortedArray.sort(sortCompareFn);\n    }\n\n    const scene = sortedArray[0].getMesh().getScene();\n\n    for (subIndex = 0; subIndex < sortedArray.length; subIndex++) {\n      subMesh = sortedArray[subIndex];\n\n      if (scene._activeMeshesFrozenButKeepClipping && !subMesh.isInFrustum(scene._frustumPlanes)) {\n        continue;\n      }\n\n      if (transparent) {\n        const material = subMesh.getMaterial();\n\n        if (material && material.needDepthPrePass) {\n          const engine = material.getScene().getEngine();\n          engine.setColorWrite(false);\n          engine.setAlphaMode(0);\n          subMesh.render(false);\n          engine.setColorWrite(true);\n        }\n      }\n\n      subMesh.render(transparent);\n    }\n  }\n  /**\n   * Build in function which can be applied to ensure meshes of a special queue (opaque, alpha test, transparent)\n   * are rendered back to front if in the same alpha index.\n   *\n   * @param a The first submesh\n   * @param b The second submesh\n   * @returns The result of the comparison\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\n  static defaultTransparentSortCompare(a, b) {\n    // Alpha index first\n    if (a._alphaIndex > b._alphaIndex) {\n      return 1;\n    }\n\n    if (a._alphaIndex < b._alphaIndex) {\n      return -1;\n    } // Then distance to camera\n\n\n    return RenderingGroup.backToFrontSortCompare(a, b);\n  }\n  /**\n   * Build in function which can be applied to ensure meshes of a special queue (opaque, alpha test, transparent)\n   * are rendered back to front.\n   *\n   * @param a The first submesh\n   * @param b The second submesh\n   * @returns The result of the comparison\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\n  static backToFrontSortCompare(a, b) {\n    // Then distance to camera\n    if (a._distanceToCamera < b._distanceToCamera) {\n      return 1;\n    }\n\n    if (a._distanceToCamera > b._distanceToCamera) {\n      return -1;\n    }\n\n    return 0;\n  }\n  /**\n   * Build in function which can be applied to ensure meshes of a special queue (opaque, alpha test, transparent)\n   * are rendered front to back (prevent overdraw).\n   *\n   * @param a The first submesh\n   * @param b The second submesh\n   * @returns The result of the comparison\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\n  static frontToBackSortCompare(a, b) {\n    // Then distance to camera\n    if (a._distanceToCamera < b._distanceToCamera) {\n      return -1;\n    }\n\n    if (a._distanceToCamera > b._distanceToCamera) {\n      return 1;\n    }\n\n    return 0;\n  }\n  /**\n   * Build in function which can be applied to ensure meshes of a special queue (opaque, alpha test, transparent)\n   * are grouped by material then geometry.\n   *\n   * @param a The first submesh\n   * @param b The second submesh\n   * @returns The result of the comparison\n   */\n\n\n  static PainterSortCompare(a, b) {\n    const meshA = a.getMesh();\n    const meshB = b.getMesh();\n\n    if (meshA.material && meshB.material) {\n      return meshA.material.uniqueId - meshB.material.uniqueId;\n    }\n\n    return meshA.uniqueId - meshB.uniqueId;\n  }\n  /**\n   * Resets the different lists of submeshes to prepare a new frame.\n   */\n\n\n  prepare() {\n    this._opaqueSubMeshes.reset();\n\n    this._transparentSubMeshes.reset();\n\n    this._alphaTestSubMeshes.reset();\n\n    this._depthOnlySubMeshes.reset();\n\n    this._particleSystems.reset();\n\n    this.prepareSprites();\n\n    this._edgesRenderers.reset();\n\n    this._empty = true;\n  }\n  /**\n   * Resets the different lists of sprites to prepare a new frame.\n   */\n\n\n  prepareSprites() {\n    this._spriteManagers.reset();\n  }\n\n  dispose() {\n    this._opaqueSubMeshes.dispose();\n\n    this._transparentSubMeshes.dispose();\n\n    this._alphaTestSubMeshes.dispose();\n\n    this._depthOnlySubMeshes.dispose();\n\n    this._particleSystems.dispose();\n\n    this._spriteManagers.dispose();\n\n    this._edgesRenderers.dispose();\n  }\n  /**\n   * Inserts the submesh in its correct queue depending on its material.\n   * @param subMesh The submesh to dispatch\n   * @param [mesh] Optional reference to the submeshes's mesh. Provide if you have an exiting reference to improve performance.\n   * @param [material] Optional reference to the submeshes's material. Provide if you have an exiting reference to improve performance.\n   */\n\n\n  dispatch(subMesh, mesh, material) {\n    // Get mesh and materials if not provided\n    if (mesh === undefined) {\n      mesh = subMesh.getMesh();\n    }\n\n    if (material === undefined) {\n      material = subMesh.getMaterial();\n    }\n\n    if (material === null || material === undefined) {\n      return;\n    }\n\n    if (material.needAlphaBlendingForMesh(mesh)) {\n      // Transparent\n      this._transparentSubMeshes.push(subMesh);\n    } else if (material.needAlphaTesting()) {\n      // Alpha test\n      if (material.needDepthPrePass) {\n        this._depthOnlySubMeshes.push(subMesh);\n      }\n\n      this._alphaTestSubMeshes.push(subMesh);\n    } else {\n      if (material.needDepthPrePass) {\n        this._depthOnlySubMeshes.push(subMesh);\n      }\n\n      this._opaqueSubMeshes.push(subMesh); // Opaque\n\n    }\n\n    mesh._renderingGroup = this;\n\n    if (mesh._edgesRenderer && mesh._edgesRenderer.isEnabled) {\n      this._edgesRenderers.pushNoDuplicate(mesh._edgesRenderer);\n    }\n\n    this._empty = false;\n  }\n\n  dispatchSprites(spriteManager) {\n    this._spriteManagers.push(spriteManager);\n\n    this._empty = false;\n  }\n\n  dispatchParticles(particleSystem) {\n    this._particleSystems.push(particleSystem);\n\n    this._empty = false;\n  }\n\n  _renderParticles(activeMeshes) {\n    if (this._particleSystems.length === 0) {\n      return;\n    } // Particles\n\n\n    const activeCamera = this._scene.activeCamera;\n\n    this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);\n\n    for (let particleIndex = 0; particleIndex < this._particleSystems.length; particleIndex++) {\n      const particleSystem = this._particleSystems.data[particleIndex];\n\n      if ((activeCamera && activeCamera.layerMask & particleSystem.layerMask) === 0) {\n        continue;\n      }\n\n      const emitter = particleSystem.emitter;\n\n      if (!emitter.position || !activeMeshes || activeMeshes.indexOf(emitter) !== -1) {\n        this._scene._activeParticles.addCount(particleSystem.render(), false);\n      }\n    }\n\n    this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene);\n  }\n\n  _renderSprites() {\n    if (!this._scene.spritesEnabled || this._spriteManagers.length === 0) {\n      return;\n    } // Sprites\n\n\n    const activeCamera = this._scene.activeCamera;\n\n    this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);\n\n    for (let id = 0; id < this._spriteManagers.length; id++) {\n      const spriteManager = this._spriteManagers.data[id];\n\n      if ((activeCamera && activeCamera.layerMask & spriteManager.layerMask) !== 0) {\n        spriteManager.render();\n      }\n    }\n\n    this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene);\n  }\n\n}\n\nexports.RenderingGroup = RenderingGroup;\nRenderingGroup._ZeroVector = _mathVector.Vector3.Zero();\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","RenderingGroup","_smartArray","_mathVector","_opaqueSortCompareFn","PainterSortCompare","_renderOpaque","_renderOpaqueSorted","_alphaTestSortCompareFn","_renderAlphaTest","_renderAlphaTestSorted","_transparentSortCompareFn","defaultTransparentSortCompare","_renderTransparent","_renderTransparentSorted","constructor","index","scene","opaqueSortCompareFn","alphaTestSortCompareFn","transparentSortCompareFn","_opaqueSubMeshes","SmartArray","_transparentSubMeshes","_alphaTestSubMeshes","_depthOnlySubMeshes","_particleSystems","_spriteManagers","_empty","_edgesRenderers","SmartArrayNoDuplicate","_scene","render","customRenderFunction","renderSprites","renderParticles","activeMeshes","engine","getEngine","length","setColorWrite","stencilState","getStencilBuffer","setStencilBuffer","_renderSprites","_renderParticles","onBeforeTransparentRendering","useOrderIndependentTransparency","excludedMeshes","depthPeelingRenderer","setAlphaMode","edgesRendererIndex","data","subMeshes","_RenderSorted","activeCamera","sortCompareFn","camera","transparent","subIndex","cameraPosition","globalPosition","_ZeroVector","subMesh","_alphaIndex","getMesh","alphaIndex","_distanceToCamera","Vector3","Distance","getBoundingInfo","boundingSphere","centerWorld","sortedArray","slice","sort","getScene","_activeMeshesFrozenButKeepClipping","isInFrustum","_frustumPlanes","material","getMaterial","needDepthPrePass","a","b","backToFrontSortCompare","frontToBackSortCompare","meshA","meshB","uniqueId","prepare","reset","prepareSprites","dispose","dispatch","mesh","undefined","needAlphaBlendingForMesh","push","needAlphaTesting","_renderingGroup","_edgesRenderer","isEnabled","pushNoDuplicate","dispatchSprites","spriteManager","dispatchParticles","particleSystem","onBeforeParticlesRenderingObservable","notifyObservers","particleIndex","layerMask","emitter","position","indexOf","_activeParticles","addCount","onAfterParticlesRenderingObservable","spritesEnabled","onBeforeSpritesRenderingObservable","id","onAfterSpritesRenderingObservable","Zero"]
}
