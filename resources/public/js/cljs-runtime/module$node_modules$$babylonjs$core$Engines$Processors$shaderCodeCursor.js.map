{
"version":3,
"file":"module$node_modules$$babylonjs$core$Engines$Processors$shaderCodeCursor.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,uEAAA,CAA4F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,gBAAR,CAA2B,IAAK,EAGhC,MAAMA,iBAAN,CACEC,WAAW,EAAG,CACZ,IAAKC,CAAAA,MAAL,CAAc,EADF,CAIV,eAAc,EAAA,CAChB,MAAO,KAAKA,CAAAA,MAAL,CAAY,IAAKC,CAAAA,SAAjB,CADS,CAId,WAAU,EAAA,CACZ,MAAO,KAAKA,CAAAA,SAAZ,CAAwB,IAAKD,CAAAA,MAAOE,CAAAA,MAApC,CAA6C,CADjC,CAIV,SAAK,CAACL,KAAD,CAAQ,CACf,IAAKG,CAAAA,MAAOE,CAAAA,MAAZ,CAAqB,CAErB,KAAK,MAAMC,IAAX,GAAmBN,MAAnB,CAEE,GAAgB,GAAhB,GAAIM,IAAA,CAAK,CAAL,CAAJ,CACE,IAAKH,CAAAA,MAAOI,CAAAA,IAAZ,CAAiBD,IAAjB,CADF,KAOA,IAAIA,IAAKE,CAAAA,IAAL,EAAYC,CAAAA,UAAZ,CAAuB,IAAvB,CAAJ,CACE,IAAKN,CAAAA,MAAOI,CAAAA,IAAZ,CAAiBD,IAAjB,CADF;IAAA,CAMMI,KAAAA,CAAQJ,IAAKI,CAAAA,KAAL,CAAW,GAAX,CAEd,KAAK,IAAIC,MAAQ,CAAjB,CAAoBA,KAApB,CAA4BD,KAAML,CAAAA,MAAlC,CAA0CM,KAAA,EAA1C,CAAmD,CACjD,IAAIC,QAAUF,KAAA,CAAMC,KAAN,CAGd,EAFAC,OAEA,CAFUA,OAAQJ,CAAAA,IAAR,EAEV,GAIA,IAAKL,CAAAA,MAAOI,CAAAA,IAAZ,CAAiBK,OAAjB,EAA4BD,KAAA,GAAUD,KAAML,CAAAA,MAAhB,CAAyB,CAAzB,CAA6B,GAA7B,CAAmC,EAA/D,EARiD,CARnD,CAZa,CAbnB,CAgDAR,OAAQI,CAAAA,gBAAR,CAA2BA,gBAzDyG;",
"sources":["node_modules/@babylonjs/core/Engines/Processors/shaderCodeCursor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Engines$Processors$shaderCodeCursor\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShaderCodeCursor = void 0;\n\n/** @internal */\nclass ShaderCodeCursor {\n  constructor() {\n    this._lines = [];\n  }\n\n  get currentLine() {\n    return this._lines[this.lineIndex];\n  }\n\n  get canRead() {\n    return this.lineIndex < this._lines.length - 1;\n  }\n\n  set lines(value) {\n    this._lines.length = 0;\n\n    for (const line of value) {\n      // Prevent removing line break in macros.\n      if (line[0] === \"#\") {\n        this._lines.push(line);\n\n        continue;\n      } // Do not split single line comments\n\n\n      if (line.trim().startsWith(\"//\")) {\n        this._lines.push(line);\n\n        continue;\n      }\n\n      const split = line.split(\";\");\n\n      for (let index = 0; index < split.length; index++) {\n        let subLine = split[index];\n        subLine = subLine.trim();\n\n        if (!subLine) {\n          continue;\n        }\n\n        this._lines.push(subLine + (index !== split.length - 1 ? \";\" : \"\"));\n      }\n    }\n  }\n\n}\n\nexports.ShaderCodeCursor = ShaderCodeCursor;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","ShaderCodeCursor","constructor","_lines","lineIndex","length","line","push","trim","startsWith","split","index","subLine"]
}
