{
"version":3,
"file":"module$node_modules$$babylonjs$core$Misc$fileTools.js",
"lineCount":27,
"mappings":"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",
"sources":["node_modules/@babylonjs/core/Misc/fileTools.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Misc$fileTools\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DecodeBase64UrlToBinary = DecodeBase64UrlToBinary;\nexports._injectLTSFileTools = exports.FileTools = exports.DecodeBase64UrlToString = exports.TestBase64DataUrl = exports.IsBase64DataUrl = exports.IsFileURL = exports.RequestFile = exports.LoadFile = exports.ReadFile = exports.LoadImage = exports.SetCorsBehavior = exports.FileToolsOptions = exports.ReadFileError = exports.RequestFileError = exports.LoadFileError = void 0;\n\nvar _webRequest = require(\"./webRequest.js\");\n\nvar _domManagement = require(\"./domManagement.js\");\n\nvar _observable = require(\"./observable.js\");\n\nvar _filesInputStore = require(\"./filesInputStore.js\");\n\nvar _retryStrategy = require(\"./retryStrategy.js\");\n\nvar _error = require(\"./error.js\");\n\nvar _stringTools = require(\"./stringTools.js\");\n\nvar _shaderProcessor = require(\"../Engines/Processors/shaderProcessor.js\");\n\nvar _thinEngine = require(\"../Engines/thinEngine.js\");\n\nvar _engineStore = require(\"../Engines/engineStore.js\");\n\nvar _logger = require(\"./logger.js\");\n\nvar _timingTools = require(\"./timingTools.js\");\n\n/* eslint-disable @typescript-eslint/naming-convention */\nconst Base64DataUrlRegEx = new RegExp(/^data:([^,]+\\/[^,]+)?;base64,/i);\n/** @ignore */\n\nclass LoadFileError extends _error.RuntimeError {\n  /**\n   * Creates a new LoadFileError\n   * @param message defines the message of the error\n   * @param object defines the optional web request\n   */\n  constructor(message, object) {\n    super(message, _error.ErrorCodes.LoadFileError);\n    this.name = \"LoadFileError\";\n\n    _error.BaseError._setPrototypeOf(this, LoadFileError.prototype);\n\n    if (object instanceof _webRequest.WebRequest) {\n      this.request = object;\n    } else {\n      this.file = object;\n    }\n  }\n\n}\n/** @ignore */\n\n\nexports.LoadFileError = LoadFileError;\n\nclass RequestFileError extends _error.RuntimeError {\n  /**\n   * Creates a new LoadFileError\n   * @param message defines the message of the error\n   * @param request defines the optional web request\n   */\n  constructor(message, request) {\n    super(message, _error.ErrorCodes.RequestFileError);\n    this.request = request;\n    this.name = \"RequestFileError\";\n\n    _error.BaseError._setPrototypeOf(this, RequestFileError.prototype);\n  }\n\n}\n/** @ignore */\n\n\nexports.RequestFileError = RequestFileError;\n\nclass ReadFileError extends _error.RuntimeError {\n  /**\n   * Creates a new ReadFileError\n   * @param message defines the message of the error\n   * @param file defines the optional file\n   */\n  constructor(message, file) {\n    super(message, _error.ErrorCodes.ReadFileError);\n    this.file = file;\n    this.name = \"ReadFileError\";\n\n    _error.BaseError._setPrototypeOf(this, ReadFileError.prototype);\n  }\n\n}\n/**\n * @internal\n */\n\n\nexports.ReadFileError = ReadFileError;\nconst FileToolsOptions = {\n  /**\n   * Gets or sets the retry strategy to apply when an error happens while loading an asset.\n   * When defining this function, return the wait time before trying again or return -1 to\n   * stop retrying and error out.\n   */\n  DefaultRetryStrategy: _retryStrategy.RetryStrategy.ExponentialBackoff(),\n\n  /**\n   * Gets or sets the base URL to use to load assets\n   */\n  BaseUrl: \"\",\n\n  /**\n   * Default behaviour for cors in the application.\n   * It can be a string if the expected behavior is identical in the entire app.\n   * Or a callback to be able to set it per url or on a group of them (in case of Video source for instance)\n   */\n  CorsBehavior: \"anonymous\",\n\n  /**\n   * Gets or sets a function used to pre-process url before using them to load assets\n   * @param url\n   */\n  PreprocessUrl: url => {\n    return url;\n  }\n};\n/**\n * Removes unwanted characters from an url\n * @param url defines the url to clean\n * @returns the cleaned url\n */\n\nexports.FileToolsOptions = FileToolsOptions;\n\nconst _CleanUrl = url => {\n  url = url.replace(/#/gm, \"%23\");\n  return url;\n};\n/**\n * Sets the cors behavior on a dom element. This will add the required Tools.CorsBehavior to the element.\n * @param url define the url we are trying\n * @param element define the dom element where to configure the cors policy\n * @internal\n */\n\n\nconst SetCorsBehavior = (url, element) => {\n  if (url && url.indexOf(\"data:\") === 0) {\n    return;\n  }\n\n  if (FileToolsOptions.CorsBehavior) {\n    if (typeof FileToolsOptions.CorsBehavior === \"string\" || FileToolsOptions.CorsBehavior instanceof String) {\n      element.crossOrigin = FileToolsOptions.CorsBehavior;\n    } else {\n      const result = FileToolsOptions.CorsBehavior(url);\n\n      if (result) {\n        element.crossOrigin = result;\n      }\n    }\n  }\n};\n/**\n * Loads an image as an HTMLImageElement.\n * @param input url string, ArrayBuffer, or Blob to load\n * @param onLoad callback called when the image successfully loads\n * @param onError callback called when the image fails to load\n * @param offlineProvider offline provider for caching\n * @param mimeType optional mime type\n * @param imageBitmapOptions\n * @returns the HTMLImageElement of the loaded image\n * @internal\n */\n\n\nexports.SetCorsBehavior = SetCorsBehavior;\n\nconst LoadImage = (input, onLoad, onError, offlineProvider, mimeType = \"\", imageBitmapOptions) => {\n  var _a;\n\n  let url;\n  let usingObjectURL = false;\n\n  if (input instanceof ArrayBuffer || ArrayBuffer.isView(input)) {\n    if (typeof Blob !== \"undefined\" && typeof URL !== \"undefined\") {\n      url = URL.createObjectURL(new Blob([input], {\n        type: mimeType\n      }));\n      usingObjectURL = true;\n    } else {\n      url = `data:${mimeType};base64,` + (0, _stringTools.EncodeArrayBufferToBase64)(input);\n    }\n  } else if (input instanceof Blob) {\n    url = URL.createObjectURL(input);\n    usingObjectURL = true;\n  } else {\n    url = _CleanUrl(input);\n    url = FileToolsOptions.PreprocessUrl(input);\n  }\n\n  const engine = _engineStore.EngineStore.LastCreatedEngine;\n\n  const onErrorHandler = exception => {\n    if (onError) {\n      const inputText = url || input.toString();\n      onError(`Error while trying to load image: ${inputText.indexOf(\"http\") === 0 || inputText.length <= 128 ? inputText : inputText.slice(0, 128) + \"...\"}`, exception);\n    }\n  };\n\n  if (typeof Image === \"undefined\" || ((_a = engine === null || engine === void 0 ? void 0 : engine._features.forceBitmapOverHTMLImageElement) !== null && _a !== void 0 ? _a : false)) {\n    LoadFile(url, data => {\n      engine.createImageBitmap(new Blob([data], {\n        type: mimeType\n      }), Object.assign({\n        premultiplyAlpha: \"none\"\n      }, imageBitmapOptions)).then(imgBmp => {\n        onLoad(imgBmp);\n\n        if (usingObjectURL) {\n          URL.revokeObjectURL(url);\n        }\n      }).catch(reason => {\n        if (onError) {\n          onError(\"Error while trying to load image: \" + input, reason);\n        }\n      });\n    }, undefined, offlineProvider || undefined, true, (request, exception) => {\n      onErrorHandler(exception);\n    });\n    return null;\n  }\n\n  const img = new Image();\n  SetCorsBehavior(url, img);\n  const handlersList = [];\n\n  const loadHandlersList = () => {\n    handlersList.forEach(handler => {\n      handler.target.addEventListener(handler.name, handler.handler);\n    });\n  };\n\n  const unloadHandlersList = () => {\n    handlersList.forEach(handler => {\n      handler.target.removeEventListener(handler.name, handler.handler);\n    });\n    handlersList.length = 0;\n  };\n\n  const loadHandler = () => {\n    unloadHandlersList();\n    onLoad(img); // Must revoke the URL after calling onLoad to avoid security exceptions in\n    // certain scenarios (e.g. when hosted in vscode).\n\n    if (usingObjectURL && img.src) {\n      URL.revokeObjectURL(img.src);\n    }\n  };\n\n  const errorHandler = err => {\n    unloadHandlersList();\n    onErrorHandler(err);\n\n    if (usingObjectURL && img.src) {\n      URL.revokeObjectURL(img.src);\n    }\n  };\n\n  const cspHandler = err => {\n    if (err.blockedURI !== img.src) {\n      return;\n    }\n\n    unloadHandlersList();\n    const cspException = new Error(`CSP violation of policy ${err.effectiveDirective} ${err.blockedURI}. Current policy is ${err.originalPolicy}`);\n    _engineStore.EngineStore.UseFallbackTexture = false;\n    onErrorHandler(cspException);\n\n    if (usingObjectURL && img.src) {\n      URL.revokeObjectURL(img.src);\n    }\n\n    img.src = \"\";\n  };\n\n  handlersList.push({\n    target: img,\n    name: \"load\",\n    handler: loadHandler\n  });\n  handlersList.push({\n    target: img,\n    name: \"error\",\n    handler: errorHandler\n  });\n  handlersList.push({\n    target: document,\n    name: \"securitypolicyviolation\",\n    handler: cspHandler\n  });\n  loadHandlersList();\n  const fromBlob = url.substring(0, 5) === \"blob:\";\n  const fromData = url.substring(0, 5) === \"data:\";\n\n  const noOfflineSupport = () => {\n    if (fromBlob || fromData) {\n      img.src = url;\n    } else {\n      LoadFile(url, (data, _, contentType) => {\n        const type = !mimeType && contentType ? contentType : mimeType;\n        const blob = new Blob([data], {\n          type\n        });\n        const url = URL.createObjectURL(blob);\n        usingObjectURL = true;\n        img.src = url;\n      }, undefined, offlineProvider || undefined, true, (request, exception) => {\n        onErrorHandler(exception);\n      });\n    }\n  };\n\n  const loadFromOfflineSupport = () => {\n    if (offlineProvider) {\n      offlineProvider.loadImage(url, img);\n    }\n  };\n\n  if (!fromBlob && !fromData && offlineProvider && offlineProvider.enableTexturesOffline) {\n    offlineProvider.open(loadFromOfflineSupport, noOfflineSupport);\n  } else {\n    if (url.indexOf(\"file:\") !== -1) {\n      const textureName = decodeURIComponent(url.substring(5).toLowerCase());\n\n      if (_filesInputStore.FilesInputStore.FilesToLoad[textureName] && typeof URL !== \"undefined\") {\n        try {\n          let blobURL;\n\n          try {\n            blobURL = URL.createObjectURL(_filesInputStore.FilesInputStore.FilesToLoad[textureName]);\n          } catch (ex) {\n            // Chrome doesn't support oneTimeOnly parameter\n            blobURL = URL.createObjectURL(_filesInputStore.FilesInputStore.FilesToLoad[textureName]);\n          }\n\n          img.src = blobURL;\n          usingObjectURL = true;\n        } catch (e) {\n          img.src = \"\";\n        }\n\n        return img;\n      }\n    }\n\n    noOfflineSupport();\n  }\n\n  return img;\n};\n/**\n * Reads a file from a File object\n * @param file defines the file to load\n * @param onSuccess defines the callback to call when data is loaded\n * @param onProgress defines the callback to call during loading process\n * @param useArrayBuffer defines a boolean indicating that data must be returned as an ArrayBuffer\n * @param onError defines the callback to call when an error occurs\n * @returns a file request object\n * @internal\n */\n\n\nexports.LoadImage = LoadImage;\n\nconst ReadFile = (file, onSuccess, onProgress, useArrayBuffer, onError) => {\n  const reader = new FileReader();\n  const fileRequest = {\n    onCompleteObservable: new _observable.Observable(),\n    abort: () => reader.abort()\n  };\n\n  reader.onloadend = () => fileRequest.onCompleteObservable.notifyObservers(fileRequest);\n\n  if (onError) {\n    reader.onerror = () => {\n      onError(new ReadFileError(`Unable to read ${file.name}`, file));\n    };\n  }\n\n  reader.onload = e => {\n    //target doesn't have result from ts 1.3\n    onSuccess(e.target[\"result\"]);\n  };\n\n  if (onProgress) {\n    reader.onprogress = onProgress;\n  }\n\n  if (!useArrayBuffer) {\n    // Asynchronous read\n    reader.readAsText(file);\n  } else {\n    reader.readAsArrayBuffer(file);\n  }\n\n  return fileRequest;\n};\n/**\n * Loads a file from a url, a data url, or a file url\n * @param fileOrUrl file, url, data url, or file url to load\n * @param onSuccess callback called when the file successfully loads\n * @param onProgress callback called while file is loading (if the server supports this mode)\n * @param offlineProvider defines the offline provider for caching\n * @param useArrayBuffer defines a boolean indicating that date must be returned as ArrayBuffer\n * @param onError callback called when the file fails to load\n * @param onOpened\n * @returns a file request object\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nexports.ReadFile = ReadFile;\n\nconst LoadFile = (fileOrUrl, onSuccess, onProgress, offlineProvider, useArrayBuffer, onError, onOpened) => {\n  if (fileOrUrl.name) {\n    return ReadFile(fileOrUrl, onSuccess, onProgress, useArrayBuffer, onError ? error => {\n      onError(undefined, error);\n    } : undefined);\n  }\n\n  const url = fileOrUrl; // If file and file input are set\n\n  if (url.indexOf(\"file:\") !== -1) {\n    let fileName = decodeURIComponent(url.substring(5).toLowerCase());\n\n    if (fileName.indexOf(\"./\") === 0) {\n      fileName = fileName.substring(2);\n    }\n\n    const file = _filesInputStore.FilesInputStore.FilesToLoad[fileName];\n\n    if (file) {\n      return ReadFile(file, onSuccess, onProgress, useArrayBuffer, onError ? error => onError(undefined, new LoadFileError(error.message, error.file)) : undefined);\n    }\n  } // For a Base64 Data URL\n\n\n  const {\n    match,\n    type\n  } = TestBase64DataUrl(url);\n\n  if (match) {\n    const fileRequest = {\n      onCompleteObservable: new _observable.Observable(),\n      abort: () => () => {}\n    };\n\n    try {\n      const data = useArrayBuffer ? DecodeBase64UrlToBinary(url) : DecodeBase64UrlToString(url);\n      onSuccess(data, undefined, type);\n    } catch (error) {\n      if (onError) {\n        onError(undefined, error);\n      } else {\n        _logger.Logger.Error(error.message || \"Failed to parse the Data URL\");\n      }\n    }\n\n    _timingTools.TimingTools.SetImmediate(() => {\n      fileRequest.onCompleteObservable.notifyObservers(fileRequest);\n    });\n\n    return fileRequest;\n  }\n\n  return RequestFile(url, (data, request) => {\n    onSuccess(data, request === null || request === void 0 ? void 0 : request.responseURL, request === null || request === void 0 ? void 0 : request.getResponseHeader(\"content-type\"));\n  }, onProgress, offlineProvider, useArrayBuffer, onError ? error => {\n    onError(error.request, new LoadFileError(error.message, error.request));\n  } : undefined, onOpened);\n};\n/**\n * Loads a file from a url\n * @param url url to load\n * @param onSuccess callback called when the file successfully loads\n * @param onProgress callback called while file is loading (if the server supports this mode)\n * @param offlineProvider defines the offline provider for caching\n * @param useArrayBuffer defines a boolean indicating that date must be returned as ArrayBuffer\n * @param onError callback called when the file fails to load\n * @param onOpened callback called when the web request is opened\n * @returns a file request object\n * @internal\n */\n\n\nexports.LoadFile = LoadFile;\n\nconst RequestFile = (url, onSuccess, onProgress, offlineProvider, useArrayBuffer, onError, onOpened) => {\n  url = _CleanUrl(url);\n  url = FileToolsOptions.PreprocessUrl(url);\n  const loadUrl = FileToolsOptions.BaseUrl + url;\n  let aborted = false;\n  const fileRequest = {\n    onCompleteObservable: new _observable.Observable(),\n    abort: () => aborted = true\n  };\n\n  const requestFile = () => {\n    let request = new _webRequest.WebRequest();\n    let retryHandle = null;\n    let onReadyStateChange;\n\n    const unbindEvents = () => {\n      if (!request) {\n        return;\n      }\n\n      if (onProgress) {\n        request.removeEventListener(\"progress\", onProgress);\n      }\n\n      if (onReadyStateChange) {\n        request.removeEventListener(\"readystatechange\", onReadyStateChange);\n      }\n\n      request.removeEventListener(\"loadend\", onLoadEnd);\n    };\n\n    let onLoadEnd = () => {\n      unbindEvents();\n      fileRequest.onCompleteObservable.notifyObservers(fileRequest);\n      fileRequest.onCompleteObservable.clear();\n      onProgress = undefined;\n      onReadyStateChange = null;\n      onLoadEnd = null;\n      onError = undefined;\n      onOpened = undefined;\n      onSuccess = undefined;\n    };\n\n    fileRequest.abort = () => {\n      aborted = true;\n\n      if (onLoadEnd) {\n        onLoadEnd();\n      }\n\n      if (request && request.readyState !== (XMLHttpRequest.DONE || 4)) {\n        request.abort();\n      }\n\n      if (retryHandle !== null) {\n        clearTimeout(retryHandle);\n        retryHandle = null;\n      }\n\n      request = null;\n    };\n\n    const handleError = error => {\n      const message = error.message || \"Unknown error\";\n\n      if (onError && request) {\n        onError(new RequestFileError(message, request));\n      } else {\n        _logger.Logger.Error(message);\n      }\n    };\n\n    const retryLoop = retryIndex => {\n      if (!request) {\n        return;\n      }\n\n      request.open(\"GET\", loadUrl);\n\n      if (onOpened) {\n        try {\n          onOpened(request);\n        } catch (e) {\n          handleError(e);\n          return;\n        }\n      }\n\n      if (useArrayBuffer) {\n        request.responseType = \"arraybuffer\";\n      }\n\n      if (onProgress) {\n        request.addEventListener(\"progress\", onProgress);\n      }\n\n      if (onLoadEnd) {\n        request.addEventListener(\"loadend\", onLoadEnd);\n      }\n\n      onReadyStateChange = () => {\n        if (aborted || !request) {\n          return;\n        } // In case of undefined state in some browsers.\n\n\n        if (request.readyState === (XMLHttpRequest.DONE || 4)) {\n          // Some browsers have issues where onreadystatechange can be called multiple times with the same value.\n          if (onReadyStateChange) {\n            request.removeEventListener(\"readystatechange\", onReadyStateChange);\n          }\n\n          if (request.status >= 200 && request.status < 300 || request.status === 0 && (!(0, _domManagement.IsWindowObjectExist)() || IsFileURL())) {\n            try {\n              if (onSuccess) {\n                onSuccess(useArrayBuffer ? request.response : request.responseText, request);\n              }\n            } catch (e) {\n              handleError(e);\n            }\n\n            return;\n          }\n\n          const retryStrategy = FileToolsOptions.DefaultRetryStrategy;\n\n          if (retryStrategy) {\n            const waitTime = retryStrategy(loadUrl, request, retryIndex);\n\n            if (waitTime !== -1) {\n              // Prevent the request from completing for retry.\n              unbindEvents();\n              request = new _webRequest.WebRequest();\n              retryHandle = setTimeout(() => retryLoop(retryIndex + 1), waitTime);\n              return;\n            }\n          }\n\n          const error = new RequestFileError(\"Error status: \" + request.status + \" \" + request.statusText + \" - Unable to load \" + loadUrl, request);\n\n          if (onError) {\n            onError(error);\n          }\n        }\n      };\n\n      request.addEventListener(\"readystatechange\", onReadyStateChange);\n      request.send();\n    };\n\n    retryLoop(0);\n  }; // Caching all files\n\n\n  if (offlineProvider && offlineProvider.enableSceneOffline) {\n    const noOfflineSupport = request => {\n      if (request && request.status > 400) {\n        if (onError) {\n          onError(request);\n        }\n      } else {\n        requestFile();\n      }\n    };\n\n    const loadFromOfflineSupport = () => {\n      // TODO: database needs to support aborting and should return a IFileRequest\n      if (offlineProvider) {\n        offlineProvider.loadFile(FileToolsOptions.BaseUrl + url, data => {\n          if (!aborted && onSuccess) {\n            onSuccess(data);\n          }\n\n          fileRequest.onCompleteObservable.notifyObservers(fileRequest);\n        }, onProgress ? event => {\n          if (!aborted && onProgress) {\n            onProgress(event);\n          }\n        } : undefined, noOfflineSupport, useArrayBuffer);\n      }\n    };\n\n    offlineProvider.open(loadFromOfflineSupport, noOfflineSupport);\n  } else {\n    requestFile();\n  }\n\n  return fileRequest;\n};\n/**\n * Checks if the loaded document was accessed via `file:`-Protocol.\n * @returns boolean\n * @internal\n */\n\n\nexports.RequestFile = RequestFile;\n\nconst IsFileURL = () => {\n  return typeof location !== \"undefined\" && location.protocol === \"file:\";\n};\n/**\n * Test if the given uri is a valid base64 data url\n * @param uri The uri to test\n * @returns True if the uri is a base64 data url or false otherwise\n * @internal\n */\n\n\nexports.IsFileURL = IsFileURL;\n\nconst IsBase64DataUrl = uri => {\n  return Base64DataUrlRegEx.test(uri);\n};\n\nexports.IsBase64DataUrl = IsBase64DataUrl;\n\nconst TestBase64DataUrl = uri => {\n  const results = Base64DataUrlRegEx.exec(uri);\n\n  if (results === null || results.length === 0) {\n    return {\n      match: false,\n      type: \"\"\n    };\n  } else {\n    const type = results[0].replace(\"data:\", \"\").replace(\"base64,\", \"\");\n    return {\n      match: true,\n      type\n    };\n  }\n};\n/**\n * Decode the given base64 uri.\n * @param uri The uri to decode\n * @returns The decoded base64 data.\n * @internal\n */\n\n\nexports.TestBase64DataUrl = TestBase64DataUrl;\n\nfunction DecodeBase64UrlToBinary(uri) {\n  return (0, _stringTools.DecodeBase64ToBinary)(uri.split(\",\")[1]);\n}\n/**\n * Decode the given base64 uri into a UTF-8 encoded string.\n * @param uri The uri to decode\n * @returns The decoded base64 data.\n * @internal\n */\n\n\nconst DecodeBase64UrlToString = uri => {\n  return (0, _stringTools.DecodeBase64ToString)(uri.split(\",\")[1]);\n};\n/**\n * This will be executed automatically for UMD and es5.\n * If esm dev wants the side effects to execute they will have to run it manually\n * Once we build native modules those need to be exported.\n * @internal\n */\n\n\nexports.DecodeBase64UrlToString = DecodeBase64UrlToString;\n\nconst initSideEffects = () => {\n  _thinEngine.ThinEngine._FileToolsLoadImage = LoadImage;\n  _thinEngine.ThinEngine._FileToolsLoadFile = LoadFile;\n  _shaderProcessor.ShaderProcessor._FileToolsLoadFile = LoadFile;\n};\n\ninitSideEffects(); // deprecated\n\n/**\n * FileTools defined as any.\n * This should not be imported or used in future releases or in any module in the framework\n * @internal\n * @deprecated import the needed function from fileTools.ts\n */\n\nlet FileTools;\n/**\n * @param DecodeBase64UrlToBinary\n * @param DecodeBase64UrlToString\n * @param FileToolsOptions\n * @internal\n */\n\nexports.FileTools = FileTools;\n\nconst _injectLTSFileTools = (DecodeBase64UrlToBinary, DecodeBase64UrlToString, FileToolsOptions, IsBase64DataUrl, IsFileURL, LoadFile, LoadImage, ReadFile, RequestFile, SetCorsBehavior) => {\n  /**\n   * Backwards compatibility.\n   * @internal\n   * @deprecated\n   */\n  exports.FileTools = FileTools = {\n    DecodeBase64UrlToBinary,\n    DecodeBase64UrlToString,\n    DefaultRetryStrategy: FileToolsOptions.DefaultRetryStrategy,\n    BaseUrl: FileToolsOptions.BaseUrl,\n    CorsBehavior: FileToolsOptions.CorsBehavior,\n    PreprocessUrl: FileToolsOptions.PreprocessUrl,\n    IsBase64DataUrl,\n    IsFileURL,\n    LoadFile,\n    LoadImage,\n    ReadFile,\n    RequestFile,\n    SetCorsBehavior\n  };\n  Object.defineProperty(FileTools, \"DefaultRetryStrategy\", {\n    get: function () {\n      return FileToolsOptions.DefaultRetryStrategy;\n    },\n    set: function (value) {\n      FileToolsOptions.DefaultRetryStrategy = value;\n    }\n  });\n  Object.defineProperty(FileTools, \"BaseUrl\", {\n    get: function () {\n      return FileToolsOptions.BaseUrl;\n    },\n    set: function (value) {\n      FileToolsOptions.BaseUrl = value;\n    }\n  });\n  Object.defineProperty(FileTools, \"PreprocessUrl\", {\n    get: function () {\n      return FileToolsOptions.PreprocessUrl;\n    },\n    set: function (value) {\n      FileToolsOptions.PreprocessUrl = value;\n    }\n  });\n  Object.defineProperty(FileTools, \"CorsBehavior\", {\n    get: function () {\n      return FileToolsOptions.CorsBehavior;\n    },\n    set: function (value) {\n      FileToolsOptions.CorsBehavior = value;\n    }\n  });\n};\n\nexports._injectLTSFileTools = _injectLTSFileTools;\n\n_injectLTSFileTools(DecodeBase64UrlToBinary, DecodeBase64UrlToString, FileToolsOptions, IsBase64DataUrl, IsFileURL, LoadFile, LoadImage, ReadFile, RequestFile, SetCorsBehavior);\n};"],
"names":["shadow$provide","global","require","module","exports","DecodeBase64UrlToBinary","uri","_stringTools","DecodeBase64ToBinary","split","Object","defineProperty","value","_injectLTSFileTools","FileTools","DecodeBase64UrlToString","TestBase64DataUrl","IsBase64DataUrl","IsFileURL","RequestFile","LoadFile","ReadFile","LoadImage","SetCorsBehavior","FileToolsOptions","ReadFileError","RequestFileError","LoadFileError","_webRequest","_domManagement","_observable","_filesInputStore","_retryStrategy","_error","_shaderProcessor","_thinEngine","_engineStore","_logger","_timingTools","Base64DataUrlRegEx","RegExp","RuntimeError","constructor","message","object","ErrorCodes","name","BaseError","_setPrototypeOf","prototype","WebRequest","request","file","DefaultRetryStrategy","RetryStrategy","ExponentialBackoff","BaseUrl","CorsBehavior","PreprocessUrl","url","_CleanUrl","replace","element","indexOf","String","crossOrigin","result","input","onLoad","onError","offlineProvider","mimeType","imageBitmapOptions","_a","usingObjectURL","ArrayBuffer","isView","Blob","URL","createObjectURL","type","EncodeArrayBufferToBase64","engine","EngineStore","LastCreatedEngine","onErrorHandler","exception","inputText","toString","length","slice","Image","_features","forceBitmapOverHTMLImageElement","data","createImageBitmap","assign","premultiplyAlpha","then","imgBmp","revokeObjectURL","catch","reason","undefined","img","handlersList","unloadHandlersList","forEach","handler","target","removeEventListener","push","loadHandler","src","err","errorHandler","document","cspHandler","blockedURI","cspException","Error","effectiveDirective","originalPolicy","UseFallbackTexture","loadHandlersList","addEventListener","fromBlob","substring","fromData","noOfflineSupport","_","contentType","blob","loadFromOfflineSupport","loadImage","enableTexturesOffline","open","textureName","decodeURIComponent","toLowerCase","FilesInputStore","FilesToLoad","blobURL","ex","e","onSuccess","onProgress","useArrayBuffer","reader","FileReader","fileRequest","onCompleteObservable","Observable","abort","onloadend","reader.onloadend","notifyObservers","onerror","reader.onerror","onload","reader.onload","onprogress","readAsArrayBuffer","readAsText","fileOrUrl","onOpened","error","fileName","match","Logger","TimingTools","SetImmediate","responseURL","getResponseHeader","loadUrl","aborted","requestFile","retryHandle","onReadyStateChange","unbindEvents","onLoadEnd","clear","fileRequest.abort","readyState","XMLHttpRequest","DONE","clearTimeout","handleError","retryLoop","retryIndex","responseType","status","IsWindowObjectExist","response","responseText","retryStrategy","waitTime","setTimeout","statusText","send","enableSceneOffline","loadFile","event","location","protocol","test","results","exec","DecodeBase64ToString","ThinEngine","_FileToolsLoadImage","_FileToolsLoadFile","ShaderProcessor","get","set"]
}
