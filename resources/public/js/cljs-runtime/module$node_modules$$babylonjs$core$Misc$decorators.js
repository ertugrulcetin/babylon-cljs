shadow$provide.module$node_modules$$babylonjs$core$Misc$decorators=function(global,require,module,exports){function getMergedStore(target){var classKey=target.getClassName();if(__mergedStore[classKey])return __mergedStore[classKey];__mergedStore[classKey]={};const store=__mergedStore[classKey];for(;classKey;){var initialStore=__decoratorInitialStore[classKey];for(const property in initialStore)store[property]=initialStore[property];let done=!1;do{initialStore=Object.getPrototypeOf(target);if(!initialStore.getClassName){done=
!0;break}if(initialStore.getClassName()!==classKey)break;target=initialStore}while(initialStore);if(done)break;classKey=initialStore.getClassName();target=initialStore}return store}function generateSerializableMember(type,sourceName){return(target,propertyKey)=>{target=target.getClassName();__decoratorInitialStore[target]||(__decoratorInitialStore[target]={});target=__decoratorInitialStore[target];target[propertyKey]||(target[propertyKey]={type,sourceName})}}function generateExpandMember(setCallback,
targetKey=null){return(target,propertyKey)=>{const key=targetKey||"_"+propertyKey;Object.defineProperty(target,propertyKey,{get:function(){return this[key]},set:function(value){"function"===typeof this.equals&&this.equals(value)||this[key]===value||(this[key]=value,target[setCallback].apply(this))},enumerable:!0,configurable:!0})}}function nativeOverride(target,propertyKey,descriptor,predicate){const jsFunc=descriptor.value;descriptor.value=(...params$jscomp$0)=>{let func=jsFunc;if("undefined"!==
typeof _native&&_native[propertyKey]){const nativeFunc=_native[propertyKey];func=predicate?(...params)=>predicate(...params)?nativeFunc(...params):jsFunc(...params):nativeFunc}target[propertyKey]=func;return func(...params$jscomp$0)}}Object.defineProperty(exports,"__esModule",{value:!0});exports.expandToProperty=function(callback,targetKey=null){return generateExpandMember(callback,targetKey)};exports.serialize=function(sourceName){return generateSerializableMember(0,sourceName)};exports.serializeAsTexture=
function(sourceName){return generateSerializableMember(1,sourceName)};exports.serializeAsColor3=function(sourceName){return generateSerializableMember(2,sourceName)};exports.serializeAsFresnelParameters=function(sourceName){return generateSerializableMember(3,sourceName)};exports.serializeAsVector2=function(sourceName){return generateSerializableMember(4,sourceName)};exports.serializeAsVector3=function(sourceName){return generateSerializableMember(5,sourceName)};exports.serializeAsMeshReference=function(sourceName){return generateSerializableMember(6,
sourceName)};exports.serializeAsColorCurves=function(sourceName){return generateSerializableMember(7,sourceName)};exports.serializeAsColor4=function(sourceName){return generateSerializableMember(8,sourceName)};exports.serializeAsImageProcessingConfiguration=function(sourceName){return generateSerializableMember(9,sourceName)};exports.serializeAsQuaternion=function(sourceName){return generateSerializableMember(10,sourceName)};exports.serializeAsMatrix=function(sourceName){return generateSerializableMember(12,
sourceName)};exports.serializeAsCameraReference=function(sourceName){return generateSerializableMember(11,sourceName)};exports.nativeOverride=nativeOverride;exports.SerializationHelper=void 0;var _tags=require("module$node_modules$$babylonjs$core$Misc$tags"),_mathVector=require("module$node_modules$$babylonjs$core$Maths$math_vector"),_devTools=require("module$node_modules$$babylonjs$core$Misc$devTools"),_mathColor=require("module$node_modules$$babylonjs$core$Maths$math_color");const __decoratorInitialStore=
{},__mergedStore={},_copySource=function(creationFunction,source,instanciate,options={}){creationFunction=creationFunction();_tags.Tags&&_tags.Tags.HasTags(source)&&_tags.Tags.AddTagsTo(creationFunction,_tags.Tags.GetTags(source,!0));const classStore=getMergedStore(creationFunction),textureMap={};for(const property in classStore){const sourceProperty=source[property],propertyType=classStore[property].type;if(void 0!==sourceProperty&&null!==sourceProperty&&("uniqueId"!==property||SerializationHelper.AllowLoadingUniqueId))switch(propertyType){case 0:case 6:case 11:creationFunction[property]=
sourceProperty;break;case 1:options.cloneTexturesOnlyOnce&&textureMap[sourceProperty.uniqueId]?creationFunction[property]=textureMap[sourceProperty.uniqueId]:(creationFunction[property]=instanciate||sourceProperty.isRenderTarget?sourceProperty:sourceProperty.clone(),textureMap[sourceProperty.uniqueId]=creationFunction[property]);break;case 2:case 3:case 4:case 5:case 7:case 10:case 12:creationFunction[property]=instanciate?sourceProperty:sourceProperty.clone()}}return creationFunction};class SerializationHelper{static AppendSerializedAnimations(source,
destination){if(source.animations){destination.animations=[];for(let animationIndex=0;animationIndex<source.animations.length;animationIndex++)destination.animations.push(source.animations[animationIndex].serialize())}}static Serialize(entity,serializationObject){serializationObject||(serializationObject={});_tags.Tags&&(serializationObject.tags=_tags.Tags.GetTags(entity));const serializedProperties=getMergedStore(entity);for(const property in serializedProperties){var propertyDescriptor=serializedProperties[property];
const targetPropertyName=propertyDescriptor.sourceName||property;propertyDescriptor=propertyDescriptor.type;const sourceProperty=entity[property];if(void 0!==sourceProperty&&null!==sourceProperty&&("uniqueId"!==property||SerializationHelper.AllowLoadingUniqueId))switch(propertyDescriptor){case 0:serializationObject[targetPropertyName]=sourceProperty;break;case 1:serializationObject[targetPropertyName]=sourceProperty.serialize();break;case 2:serializationObject[targetPropertyName]=sourceProperty.asArray();
break;case 3:serializationObject[targetPropertyName]=sourceProperty.serialize();break;case 4:serializationObject[targetPropertyName]=sourceProperty.asArray();break;case 5:serializationObject[targetPropertyName]=sourceProperty.asArray();break;case 6:serializationObject[targetPropertyName]=sourceProperty.id;break;case 7:serializationObject[targetPropertyName]=sourceProperty.serialize();break;case 8:serializationObject[targetPropertyName]=sourceProperty.asArray();break;case 9:serializationObject[targetPropertyName]=
sourceProperty.serialize();break;case 10:serializationObject[targetPropertyName]=sourceProperty.asArray();break;case 11:serializationObject[targetPropertyName]=sourceProperty.id;break;case 12:serializationObject[targetPropertyName]=sourceProperty.asArray()}}return serializationObject}static ParseProperties(source,destination,scene,rootUrl){rootUrl||(rootUrl="");const classStore=getMergedStore(destination);for(const property in classStore){var propertyDescriptor=classStore[property];const sourceProperty=
source[propertyDescriptor.sourceName||property];propertyDescriptor=propertyDescriptor.type;if(void 0!==sourceProperty&&null!==sourceProperty&&("uniqueId"!==property||SerializationHelper.AllowLoadingUniqueId)){const dest=destination;switch(propertyDescriptor){case 0:dest[property]=sourceProperty;break;case 1:scene&&(dest[property]=SerializationHelper._TextureParser(sourceProperty,scene,rootUrl));break;case 2:dest[property]=_mathColor.Color3.FromArray(sourceProperty);break;case 3:dest[property]=SerializationHelper._FresnelParametersParser(sourceProperty);
break;case 4:dest[property]=_mathVector.Vector2.FromArray(sourceProperty);break;case 5:dest[property]=_mathVector.Vector3.FromArray(sourceProperty);break;case 6:scene&&(dest[property]=scene.getLastMeshById(sourceProperty));break;case 7:dest[property]=SerializationHelper._ColorCurvesParser(sourceProperty);break;case 8:dest[property]=_mathColor.Color4.FromArray(sourceProperty);break;case 9:dest[property]=SerializationHelper._ImageProcessingConfigurationParser(sourceProperty);break;case 10:dest[property]=
_mathVector.Quaternion.FromArray(sourceProperty);break;case 11:scene&&(dest[property]=scene.getCameraById(sourceProperty));break;case 12:dest[property]=_mathVector.Matrix.FromArray(sourceProperty)}}}}static Parse(creationFunction,source,scene,rootUrl=null){creationFunction=creationFunction();_tags.Tags&&_tags.Tags.AddTagsTo(creationFunction,source.tags);SerializationHelper.ParseProperties(source,creationFunction,scene,rootUrl);return creationFunction}static Clone(creationFunction,source,options={}){return _copySource(creationFunction,
source,!1,options)}static Instanciate(creationFunction,source){return _copySource(creationFunction,source,!0)}}exports.SerializationHelper=SerializationHelper;SerializationHelper.AllowLoadingUniqueId=!1;SerializationHelper._ImageProcessingConfigurationParser=sourceProperty=>{throw(0,_devTools._WarnImport)("ImageProcessingConfiguration");};SerializationHelper._FresnelParametersParser=sourceProperty=>{throw(0,_devTools._WarnImport)("FresnelParameters");};SerializationHelper._ColorCurvesParser=sourceProperty=>
{throw(0,_devTools._WarnImport)("ColorCurves");};SerializationHelper._TextureParser=(sourceProperty,scene,rootUrl)=>{throw(0,_devTools._WarnImport)("Texture");};nativeOverride.filter=function(predicate){return(target,propertyKey,descriptor)=>nativeOverride(target,propertyKey,descriptor,predicate)}}
//# sourceMappingURL=module$node_modules$$babylonjs$core$Misc$decorators.js.map
