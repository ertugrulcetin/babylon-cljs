shadow$provide.module$node_modules$$babylonjs$core$Cameras$camera=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Camera=void 0;global=require("module$node_modules$$babylonjs$core$tslib_es6");var _decorators=require("module$node_modules$$babylonjs$core$Misc$decorators"),_smartArray=require("module$node_modules$$babylonjs$core$Misc$smartArray"),_tools=require("module$node_modules$$babylonjs$core$Misc$tools"),_observable=require("module$node_modules$$babylonjs$core$Misc$observable"),
_mathVector=require("module$node_modules$$babylonjs$core$Maths$math_vector"),_node=require("module$node_modules$$babylonjs$core$node"),_logger=require("module$node_modules$$babylonjs$core$Misc$logger"),_typeStore=require("module$node_modules$$babylonjs$core$Misc$typeStore"),_devTools=require("module$node_modules$$babylonjs$core$Misc$devTools"),_mathViewport=require("module$node_modules$$babylonjs$core$Maths$math_viewport"),_mathFrustum=require("module$node_modules$$babylonjs$core$Maths$math_frustum");
class Camera extends _node.Node{get position(){return this._position}set position(newPosition){this._position=newPosition}set upVector(vec){this._upVector=vec}get upVector(){return this._upVector}get screenArea(){var _b,_c,_d;let x;if(this.mode===Camera.PERSPECTIVE_CAMERA)if(this.fovMode===Camera.FOVMODE_VERTICAL_FIXED){var _a=2*this.minZ*Math.tan(this.fov/2);x=this.getEngine().getAspectRatio(this)*_a}else x=2*this.minZ*Math.tan(this.fov/2),_a=x/this.getEngine().getAspectRatio(this);else{const halfWidth=
this.getEngine().getRenderWidth()/2,halfHeight=this.getEngine().getRenderHeight()/2;x=(null!==(_a=this.orthoRight)&&void 0!==_a?_a:halfWidth)-(null!==(_b=this.orthoLeft)&&void 0!==_b?_b:-halfWidth);_a=(null!==(_c=this.orthoTop)&&void 0!==_c?_c:halfHeight)-(null!==(_d=this.orthoBottom)&&void 0!==_d?_d:-halfHeight)}return x*_a}set orthoLeft(value){this._orthoLeft=value;for(const rigCamera of this._rigCameras)rigCamera.orthoLeft=value}get orthoLeft(){return this._orthoLeft}set orthoRight(value){this._orthoRight=
value;for(const rigCamera of this._rigCameras)rigCamera.orthoRight=value}get orthoRight(){return this._orthoRight}set orthoBottom(value){this._orthoBottom=value;for(const rigCamera of this._rigCameras)rigCamera.orthoBottom=value}get orthoBottom(){return this._orthoBottom}set orthoTop(value){this._orthoTop=value;for(const rigCamera of this._rigCameras)rigCamera.orthoTop=value}get orthoTop(){return this._orthoTop}set mode(mode){this._mode=mode;for(const rigCamera of this._rigCameras)rigCamera.mode=
mode}get mode(){return this._mode}constructor(name,position,scene,setActiveOnSceneIfNoneActive=!0){super(name,scene);this._position=_mathVector.Vector3.Zero();this._upVector=_mathVector.Vector3.Up();this._orthoTop=this._orthoBottom=this._orthoRight=this._orthoLeft=null;this.fov=.8;this.projectionPlaneTilt=0;this.minZ=1;this.maxZ=1E4;this.inertia=.9;this._mode=Camera.PERSPECTIVE_CAMERA;this.isIntermediate=!1;this.viewport=new _mathViewport.Viewport(0,0,1,1);this.layerMask=268435455;this.fovMode=Camera.FOVMODE_VERTICAL_FIXED;
this.cameraRigMode=Camera.RIG_MODE_NONE;this.customRenderTargets=[];this.outputRenderTarget=null;this.onViewMatrixChangedObservable=new _observable.Observable;this.onProjectionMatrixChangedObservable=new _observable.Observable;this.onAfterCheckInputsObservable=new _observable.Observable;this.onRestoreStateObservable=new _observable.Observable;this.isRigCamera=!1;this._rigCameras=[];this._webvrViewMatrix=_mathVector.Matrix.Identity();this._skipRendering=!1;this._projectionMatrix=new _mathVector.Matrix;
this._postProcesses=[];this._activeMeshes=new _smartArray.SmartArray(256);this._globalPosition=_mathVector.Vector3.Zero();this._computedViewMatrix=_mathVector.Matrix.Identity();this._doNotComputeProjectionMatrix=!1;this._transformMatrix=_mathVector.Matrix.Zero();this._refreshFrustumPlanes=!0;this._absoluteRotation=_mathVector.Quaternion.Identity();this._isCamera=!0;this._isRightCamera=this._isLeftCamera=!1;this.getScene().addCamera(this);setActiveOnSceneIfNoneActive&&!this.getScene().activeCamera&&
(this.getScene().activeCamera=this);this.position=position;this.renderPassId=this.getScene().getEngine().createRenderPassId(`Camera ${name}`)}storeState(){this._stateStored=!0;this._storedFov=this.fov;return this}_restoreStateValues(){if(!this._stateStored)return!1;this.fov=this._storedFov;return!0}restoreState(){return this._restoreStateValues()?(this.onRestoreStateObservable.notifyObservers(this),!0):!1}getClassName(){return"Camera"}toString(fullDetails){let ret="Name: "+this.name;ret+=", type: "+
this.getClassName();if(this.animations)for(let i=0;i<this.animations.length;i++)ret+=", animation[0]: "+this.animations[i].toString(fullDetails);return ret}applyVerticalCorrection(){const rot=this.absoluteRotation.toEulerAngles();this.projectionPlaneTilt=this._scene.useRightHandedSystem?-rot.x:rot.x}get globalPosition(){return this._globalPosition}getActiveMeshes(){return this._activeMeshes}isActiveMesh(mesh){return-1!==this._activeMeshes.indexOf(mesh)}isReady(completeCheck=!1){if(completeCheck)for(const pp of this._postProcesses)if(pp&&
!pp.isReady())return!1;return super.isReady(completeCheck)}_initCache(){super._initCache();this._cache.position=new _mathVector.Vector3(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);this._cache.upVector=new _mathVector.Vector3(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);this._cache.mode=void 0;this._cache.minZ=void 0;this._cache.maxZ=void 0;this._cache.fov=void 0;this._cache.fovMode=void 0;this._cache.aspectRatio=void 0;this._cache.orthoLeft=void 0;this._cache.orthoRight=void 0;this._cache.orthoBottom=
void 0;this._cache.orthoTop=void 0;this._cache.renderWidth=void 0;this._cache.renderHeight=void 0}_updateCache(ignoreParentClass){ignoreParentClass||super._updateCache();this._cache.position.copyFrom(this.position);this._cache.upVector.copyFrom(this.upVector)}_isSynchronized(){return this._isSynchronizedViewMatrix()&&this._isSynchronizedProjectionMatrix()}_isSynchronizedViewMatrix(){return super._isSynchronized()?this._cache.position.equals(this.position)&&this._cache.upVector.equals(this.upVector)&&
this.isSynchronizedWithParent():!1}_isSynchronizedProjectionMatrix(){var check=this._cache.mode===this.mode&&this._cache.minZ===this.minZ&&this._cache.maxZ===this.maxZ;if(!check)return!1;check=this.getEngine();return check=this.mode===Camera.PERSPECTIVE_CAMERA?this._cache.fov===this.fov&&this._cache.fovMode===this.fovMode&&this._cache.aspectRatio===check.getAspectRatio(this)&&this._cache.projectionPlaneTilt===this.projectionPlaneTilt:this._cache.orthoLeft===this.orthoLeft&&this._cache.orthoRight===
this.orthoRight&&this._cache.orthoBottom===this.orthoBottom&&this._cache.orthoTop===this.orthoTop&&this._cache.renderWidth===check.getRenderWidth()&&this._cache.renderHeight===check.getRenderHeight()}attachControl(_ignored,_noPreventDefault){}detachControl(_ignored){}update(){this._checkInputs();this.cameraRigMode!==Camera.RIG_MODE_NONE&&this._updateRigCameras();this.getViewMatrix();this.getProjectionMatrix()}_checkInputs(){this.onAfterCheckInputsObservable.notifyObservers(this)}get rigCameras(){return this._rigCameras}get rigPostProcess(){return this._rigPostProcess}_getFirstPostProcess(){for(let ppIndex=
0;ppIndex<this._postProcesses.length;ppIndex++)if(null!==this._postProcesses[ppIndex])return this._postProcesses[ppIndex];return null}_cascadePostProcessesToRigCams(){var firstPostProcess=this._getFirstPostProcess();firstPostProcess&&firstPostProcess.markTextureDirty();for(let i=0,len=this._rigCameras.length;i<len;i++){firstPostProcess=this._rigCameras[i];const rigPostProcess=firstPostProcess._rigPostProcess;rigPostProcess?("pass"===rigPostProcess.getEffectName()&&(firstPostProcess.isIntermediate=
0===this._postProcesses.length),firstPostProcess._postProcesses=this._postProcesses.slice(0).concat(rigPostProcess),rigPostProcess.markTextureDirty()):firstPostProcess._postProcesses=this._postProcesses.slice(0)}}attachPostProcess(postProcess,insertAt=null){if(!postProcess.isReusable()&&-1<this._postProcesses.indexOf(postProcess))return _logger.Logger.Error("You're trying to reuse a post process not defined as reusable."),0;null==insertAt||0>insertAt?this._postProcesses.push(postProcess):null===this._postProcesses[insertAt]?
this._postProcesses[insertAt]=postProcess:this._postProcesses.splice(insertAt,0,postProcess);this._cascadePostProcessesToRigCams();this._scene.prePassRenderer&&this._scene.prePassRenderer.markAsDirty();return this._postProcesses.indexOf(postProcess)}detachPostProcess(postProcess){postProcess=this._postProcesses.indexOf(postProcess);-1!==postProcess&&(this._postProcesses[postProcess]=null);this._scene.prePassRenderer&&this._scene.prePassRenderer.markAsDirty();this._cascadePostProcessesToRigCams()}getWorldMatrix(){if(this._isSynchronizedViewMatrix())return this._worldMatrix;
this.getViewMatrix();return this._worldMatrix}_getViewMatrix(){return _mathVector.Matrix.Identity()}getViewMatrix(force){if(!force&&this._isSynchronizedViewMatrix())return this._computedViewMatrix;this.updateCache();this._computedViewMatrix=this._getViewMatrix();this._currentRenderId=this.getScene().getRenderId();this._childUpdateId++;this._refreshFrustumPlanes=!0;this._cameraRigParams&&this._cameraRigParams.vrPreViewMatrix&&this._computedViewMatrix.multiplyToRef(this._cameraRigParams.vrPreViewMatrix,
this._computedViewMatrix);this.parent&&this.parent.onViewMatrixChangedObservable&&this.parent.onViewMatrixChangedObservable.notifyObservers(this.parent);this.onViewMatrixChangedObservable.notifyObservers(this);this._computedViewMatrix.invertToRef(this._worldMatrix);return this._computedViewMatrix}freezeProjectionMatrix(projection){this._doNotComputeProjectionMatrix=!0;void 0!==projection&&(this._projectionMatrix=projection)}unfreezeProjectionMatrix(){this._doNotComputeProjectionMatrix=!1}getProjectionMatrix(force){var _a,
_b,_c,_d,_e,_f,_g,_h;if(this._doNotComputeProjectionMatrix||!force&&this._isSynchronizedProjectionMatrix())return this._projectionMatrix;this._cache.mode=this.mode;this._cache.minZ=this.minZ;this._cache.maxZ=this.maxZ;this._refreshFrustumPlanes=!0;force=this.getEngine();const scene=this.getScene(),reverseDepth=force.useReverseDepthBuffer;if(this.mode===Camera.PERSPECTIVE_CAMERA)this._cache.fov=this.fov,this._cache.fovMode=this.fovMode,this._cache.aspectRatio=force.getAspectRatio(this),this._cache.projectionPlaneTilt=
this.projectionPlaneTilt,0>=this.minZ&&(this.minZ=.1),(scene.useRightHandedSystem?_mathVector.Matrix.PerspectiveFovRHToRef:_mathVector.Matrix.PerspectiveFovLHToRef)(this.fov,force.getAspectRatio(this),reverseDepth?this.maxZ:this.minZ,reverseDepth?this.minZ:this.maxZ,this._projectionMatrix,this.fovMode===Camera.FOVMODE_VERTICAL_FIXED,force.isNDCHalfZRange,this.projectionPlaneTilt,reverseDepth);else{const halfWidth=force.getRenderWidth()/2,halfHeight=force.getRenderHeight()/2;scene.useRightHandedSystem?
_mathVector.Matrix.OrthoOffCenterRHToRef(null!==(_a=this.orthoLeft)&&void 0!==_a?_a:-halfWidth,null!==(_b=this.orthoRight)&&void 0!==_b?_b:halfWidth,null!==(_c=this.orthoBottom)&&void 0!==_c?_c:-halfHeight,null!==(_d=this.orthoTop)&&void 0!==_d?_d:halfHeight,reverseDepth?this.maxZ:this.minZ,reverseDepth?this.minZ:this.maxZ,this._projectionMatrix,force.isNDCHalfZRange):_mathVector.Matrix.OrthoOffCenterLHToRef(null!==(_e=this.orthoLeft)&&void 0!==_e?_e:-halfWidth,null!==(_f=this.orthoRight)&&void 0!==
_f?_f:halfWidth,null!==(_g=this.orthoBottom)&&void 0!==_g?_g:-halfHeight,null!==(_h=this.orthoTop)&&void 0!==_h?_h:halfHeight,reverseDepth?this.maxZ:this.minZ,reverseDepth?this.minZ:this.maxZ,this._projectionMatrix,force.isNDCHalfZRange);this._cache.orthoLeft=this.orthoLeft;this._cache.orthoRight=this.orthoRight;this._cache.orthoBottom=this.orthoBottom;this._cache.orthoTop=this.orthoTop;this._cache.renderWidth=force.getRenderWidth();this._cache.renderHeight=force.getRenderHeight()}this.onProjectionMatrixChangedObservable.notifyObservers(this);
return this._projectionMatrix}getTransformationMatrix(){this._computedViewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix);return this._transformMatrix}_updateFrustumPlanes(){this._refreshFrustumPlanes&&(this.getTransformationMatrix(),this._frustumPlanes?_mathFrustum.Frustum.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=_mathFrustum.Frustum.GetPlanes(this._transformMatrix),this._refreshFrustumPlanes=!1)}isInFrustum(target,checkRigCameras=!1){this._updateFrustumPlanes();
if(checkRigCameras&&0<this.rigCameras.length){let result=!1;this.rigCameras.forEach(cam=>{cam._updateFrustumPlanes();result=result||target.isInFrustum(cam._frustumPlanes)});return result}return target.isInFrustum(this._frustumPlanes)}isCompletelyInFrustum(target){this._updateFrustumPlanes();return target.isCompletelyInFrustum(this._frustumPlanes)}getForwardRay(length,transform,origin){throw(0,_devTools._WarnImport)("Ray");}getForwardRayToRef(refRay,length,transform,origin){throw(0,_devTools._WarnImport)("Ray");
}dispose(doNotRecurse,disposeMaterialAndTextures=!1){this.onViewMatrixChangedObservable.clear();this.onProjectionMatrixChangedObservable.clear();this.onAfterCheckInputsObservable.clear();this.onRestoreStateObservable.clear();this.inputs&&this.inputs.clear();this.getScene().stopAnimation(this);for(this.getScene().removeCamera(this);0<this._rigCameras.length;){var camera=this._rigCameras.pop();camera&&camera.dispose()}this._parentContainer&&(camera=this._parentContainer.cameras.indexOf(this),-1<camera&&
this._parentContainer.cameras.splice(camera,1),this._parentContainer=null);if(this._rigPostProcess)this._rigPostProcess.dispose(this),this._rigPostProcess=null,this._postProcesses.length=0;else if(this.cameraRigMode!==Camera.RIG_MODE_NONE)this._rigPostProcess=null,this._postProcesses.length=0;else for(camera=this._postProcesses.length;0<=--camera;){const postProcess=this._postProcesses[camera];postProcess&&postProcess.dispose(this)}for(camera=this.customRenderTargets.length;0<=--camera;)this.customRenderTargets[camera].dispose();
this.customRenderTargets.length=0;this._activeMeshes.dispose();this.getScene().getEngine().releaseRenderPassId(this.renderPassId);super.dispose(doNotRecurse,disposeMaterialAndTextures)}get isLeftCamera(){return this._isLeftCamera}get isRightCamera(){return this._isRightCamera}get leftCamera(){return 1>this._rigCameras.length?null:this._rigCameras[0]}get rightCamera(){return 2>this._rigCameras.length?null:this._rigCameras[1]}getLeftTarget(){return 1>this._rigCameras.length?null:this._rigCameras[0].getTarget()}getRightTarget(){return 2>
this._rigCameras.length?null:this._rigCameras[1].getTarget()}setCameraRigMode(mode,rigParams){if(this.cameraRigMode!==mode){for(;0<this._rigCameras.length;){var camera=this._rigCameras.pop();camera&&camera.dispose()}this.cameraRigMode=mode;this._cameraRigParams={};this._cameraRigParams.interaxialDistance=rigParams.interaxialDistance||.0637;this._cameraRigParams.stereoHalfAngle=_tools.Tools.ToRadians(this._cameraRigParams.interaxialDistance/.0637);if(this.cameraRigMode!==Camera.RIG_MODE_NONE){if(mode=
this.createRigCamera(this.name+"_L",0))mode._isLeftCamera=!0;if(camera=this.createRigCamera(this.name+"_R",1))camera._isRightCamera=!0;mode&&camera&&(this._rigCameras.push(mode),this._rigCameras.push(camera))}this._setRigMode(rigParams);this._cascadePostProcessesToRigCams();this.update()}}_setRigMode(rigParams){}_getVRProjectionMatrix(){_mathVector.Matrix.PerspectiveFovLHToRef(this._cameraRigParams.vrMetrics.aspectRatioFov,this._cameraRigParams.vrMetrics.aspectRatio,this.minZ,this.maxZ,this._cameraRigParams.vrWorkMatrix,
!0,this.getEngine().isNDCHalfZRange);this._cameraRigParams.vrWorkMatrix.multiplyToRef(this._cameraRigParams.vrHMatrix,this._projectionMatrix);return this._projectionMatrix}_updateCameraRotationMatrix(){}_updateWebVRCameraRotationMatrix(){}_getWebVRProjectionMatrix(){return _mathVector.Matrix.Identity()}_getWebVRViewMatrix(){return _mathVector.Matrix.Identity()}setCameraRigParameter(name,value){this._cameraRigParams||(this._cameraRigParams={});this._cameraRigParams[name]=value;"interaxialDistance"===
name&&(this._cameraRigParams.stereoHalfAngle=_tools.Tools.ToRadians(value/.0637))}createRigCamera(name,cameraIndex){return null}_updateRigCameras(){for(let i=0;i<this._rigCameras.length;i++)this._rigCameras[i].minZ=this.minZ,this._rigCameras[i].maxZ=this.maxZ,this._rigCameras[i].fov=this.fov,this._rigCameras[i].upVector.copyFrom(this.upVector);this.cameraRigMode===Camera.RIG_MODE_STEREOSCOPIC_ANAGLYPH&&(this._rigCameras[0].viewport=this._rigCameras[1].viewport=this.viewport)}_setupInputs(){}serialize(){const serializationObject=
_decorators.SerializationHelper.Serialize(this);serializationObject.uniqueId=this.uniqueId;serializationObject.type=this.getClassName();this.parent&&this.parent._serializeAsParent(serializationObject);this.inputs&&this.inputs.serialize(serializationObject);_decorators.SerializationHelper.AppendSerializedAnimations(this,serializationObject);serializationObject.ranges=this.serializeAnimationRanges();serializationObject.isEnabled=this.isEnabled();return serializationObject}clone(name,newParent=null){const camera=
_decorators.SerializationHelper.Clone(Camera.GetConstructorFromName(this.getClassName(),name,this.getScene(),this.interaxialDistance,this.isStereoscopicSideBySide),this);camera.name=name;camera.parent=newParent;this.onClonedObservable.notifyObservers(camera);return camera}getDirection(localAxis){const result=_mathVector.Vector3.Zero();this.getDirectionToRef(localAxis,result);return result}get absoluteRotation(){this.getWorldMatrix().decompose(void 0,this._absoluteRotation);return this._absoluteRotation}getDirectionToRef(localAxis,
result){_mathVector.Vector3.TransformNormalToRef(localAxis,this.getWorldMatrix(),result)}static GetConstructorFromName(type,name,scene,interaxial_distance=0,isStereoscopicSideBySide=!0){return(type=_node.Node.Construct(type,name,scene,{interaxial_distance,isStereoscopicSideBySide}))?type:()=>Camera._CreateDefaultParsedCamera(name,scene)}computeWorldMatrix(){return this.getWorldMatrix()}static Parse(parsedCamera,scene){var construct=Camera.GetConstructorFromName(parsedCamera.type,parsedCamera.name,
scene,parsedCamera.interaxial_distance,parsedCamera.isStereoscopicSideBySide);construct=_decorators.SerializationHelper.Parse(construct,parsedCamera,scene);void 0!==parsedCamera.parentId&&(construct._waitingParentId=parsedCamera.parentId);void 0!==parsedCamera.parentInstanceIndex&&(construct._waitingParentInstanceIndex=parsedCamera.parentInstanceIndex);construct.inputs&&(construct.inputs.parse(parsedCamera),construct._setupInputs());parsedCamera.upVector&&(construct.upVector=_mathVector.Vector3.FromArray(parsedCamera.upVector));
construct.setPosition&&(construct.position.copyFromFloats(0,0,0),construct.setPosition(_mathVector.Vector3.FromArray(parsedCamera.position)));parsedCamera.target&&construct.setTarget&&construct.setTarget(_mathVector.Vector3.FromArray(parsedCamera.target));parsedCamera.cameraRigMode&&construct.setCameraRigMode(parsedCamera.cameraRigMode,parsedCamera.interaxial_distance?{interaxialDistance:parsedCamera.interaxial_distance}:{});if(parsedCamera.animations){for(let animationIndex=0;animationIndex<parsedCamera.animations.length;animationIndex++){const parsedAnimation=
parsedCamera.animations[animationIndex],internalClass=(0,_typeStore.GetClass)("BABYLON.Animation");internalClass&&construct.animations.push(internalClass.Parse(parsedAnimation))}_node.Node.ParseAnimationRanges(construct,parsedCamera,scene)}parsedCamera.autoAnimate&&scene.beginAnimation(construct,parsedCamera.autoAnimateFrom,parsedCamera.autoAnimateTo,parsedCamera.autoAnimateLoop,parsedCamera.autoAnimateSpeed||1);void 0!==parsedCamera.isEnabled&&construct.setEnabled(parsedCamera.isEnabled);return construct}}
exports.Camera=Camera;Camera._CreateDefaultParsedCamera=(name,scene)=>{throw(0,_devTools._WarnImport)("UniversalCamera");};Camera.PERSPECTIVE_CAMERA=0;Camera.ORTHOGRAPHIC_CAMERA=1;Camera.FOVMODE_VERTICAL_FIXED=0;Camera.FOVMODE_HORIZONTAL_FIXED=1;Camera.RIG_MODE_NONE=0;Camera.RIG_MODE_STEREOSCOPIC_ANAGLYPH=10;Camera.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL=11;Camera.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED=12;Camera.RIG_MODE_STEREOSCOPIC_OVERUNDER=13;Camera.RIG_MODE_STEREOSCOPIC_INTERLACED=14;Camera.RIG_MODE_VR=
20;Camera.RIG_MODE_WEBVR=21;Camera.RIG_MODE_CUSTOM=22;Camera.ForceAttachControlToAlwaysPreventDefault=!1;(0,global.__decorate)([(0,_decorators.serializeAsVector3)("position")],Camera.prototype,"_position",void 0);(0,global.__decorate)([(0,_decorators.serializeAsVector3)("upVector")],Camera.prototype,"_upVector",void 0);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"orthoLeft",null);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"orthoRight",null);(0,global.__decorate)([(0,_decorators.serialize)()],
Camera.prototype,"orthoBottom",null);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"orthoTop",null);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"fov",void 0);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"projectionPlaneTilt",void 0);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"minZ",void 0);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"maxZ",void 0);(0,global.__decorate)([(0,_decorators.serialize)()],
Camera.prototype,"inertia",void 0);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"mode",null);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"layerMask",void 0);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"fovMode",void 0);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"cameraRigMode",void 0);(0,global.__decorate)([(0,_decorators.serialize)()],Camera.prototype,"interaxialDistance",void 0);(0,global.__decorate)([(0,_decorators.serialize)()],
Camera.prototype,"isStereoscopicSideBySide",void 0)}
//# sourceMappingURL=module$node_modules$$babylonjs$core$Cameras$camera.js.map
