{
"version":3,
"file":"module$node_modules$$babylonjs$core$DeviceInput$InputDevices$deviceEnums.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/@babylonjs/core/DeviceInput/InputDevices/deviceEnums.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$DeviceInput$InputDevices$deviceEnums\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SwitchInput = exports.XboxInput = exports.DualSenseInput = exports.DualShockInput = exports.NativePointerInput = exports.PointerInput = exports.DeviceType = void 0;\n\n/**\n * Enum for Device Types\n */\nvar DeviceType;\nexports.DeviceType = DeviceType;\n\n(function (DeviceType) {\n  /** Generic */\n  DeviceType[DeviceType[\"Generic\"] = 0] = \"Generic\";\n  /** Keyboard */\n\n  DeviceType[DeviceType[\"Keyboard\"] = 1] = \"Keyboard\";\n  /** Mouse */\n\n  DeviceType[DeviceType[\"Mouse\"] = 2] = \"Mouse\";\n  /** Touch Pointers */\n\n  DeviceType[DeviceType[\"Touch\"] = 3] = \"Touch\";\n  /** PS4 Dual Shock */\n\n  DeviceType[DeviceType[\"DualShock\"] = 4] = \"DualShock\";\n  /** Xbox */\n\n  DeviceType[DeviceType[\"Xbox\"] = 5] = \"Xbox\";\n  /** Switch Controller */\n\n  DeviceType[DeviceType[\"Switch\"] = 6] = \"Switch\";\n  /** PS5 DualSense */\n\n  DeviceType[DeviceType[\"DualSense\"] = 7] = \"DualSense\";\n})(DeviceType || (exports.DeviceType = DeviceType = {})); // Device Enums\n\n/**\n * Enum for All Pointers (Touch/Mouse)\n */\n\n\nvar PointerInput;\nexports.PointerInput = PointerInput;\n\n(function (PointerInput) {\n  /** Horizontal Axis (Not used in events/observables; only in polling) */\n  PointerInput[PointerInput[\"Horizontal\"] = 0] = \"Horizontal\";\n  /** Vertical Axis (Not used in events/observables; only in polling) */\n\n  PointerInput[PointerInput[\"Vertical\"] = 1] = \"Vertical\";\n  /** Left Click or Touch */\n\n  PointerInput[PointerInput[\"LeftClick\"] = 2] = \"LeftClick\";\n  /** Middle Click */\n\n  PointerInput[PointerInput[\"MiddleClick\"] = 3] = \"MiddleClick\";\n  /** Right Click */\n\n  PointerInput[PointerInput[\"RightClick\"] = 4] = \"RightClick\";\n  /** Browser Back */\n\n  PointerInput[PointerInput[\"BrowserBack\"] = 5] = \"BrowserBack\";\n  /** Browser Forward */\n\n  PointerInput[PointerInput[\"BrowserForward\"] = 6] = \"BrowserForward\";\n  /** Mouse Wheel X */\n\n  PointerInput[PointerInput[\"MouseWheelX\"] = 7] = \"MouseWheelX\";\n  /** Mouse Wheel Y */\n\n  PointerInput[PointerInput[\"MouseWheelY\"] = 8] = \"MouseWheelY\";\n  /** Mouse Wheel Z */\n\n  PointerInput[PointerInput[\"MouseWheelZ\"] = 9] = \"MouseWheelZ\";\n  /** Used in events/observables to identify if x/y changes occurred */\n\n  PointerInput[PointerInput[\"Move\"] = 12] = \"Move\";\n})(PointerInput || (exports.PointerInput = PointerInput = {}));\n/** @internal */\n\n\nvar NativePointerInput;\nexports.NativePointerInput = NativePointerInput;\n\n(function (NativePointerInput) {\n  /** Horizontal Axis */\n  NativePointerInput[NativePointerInput[\"Horizontal\"] = 0] = \"Horizontal\";\n  /** Vertical Axis */\n\n  NativePointerInput[NativePointerInput[\"Vertical\"] = 1] = \"Vertical\";\n  /** Left Click or Touch */\n\n  NativePointerInput[NativePointerInput[\"LeftClick\"] = 2] = \"LeftClick\";\n  /** Middle Click */\n\n  NativePointerInput[NativePointerInput[\"MiddleClick\"] = 3] = \"MiddleClick\";\n  /** Right Click */\n\n  NativePointerInput[NativePointerInput[\"RightClick\"] = 4] = \"RightClick\";\n  /** Browser Back */\n\n  NativePointerInput[NativePointerInput[\"BrowserBack\"] = 5] = \"BrowserBack\";\n  /** Browser Forward */\n\n  NativePointerInput[NativePointerInput[\"BrowserForward\"] = 6] = \"BrowserForward\";\n  /** Mouse Wheel X */\n\n  NativePointerInput[NativePointerInput[\"MouseWheelX\"] = 7] = \"MouseWheelX\";\n  /** Mouse Wheel Y */\n\n  NativePointerInput[NativePointerInput[\"MouseWheelY\"] = 8] = \"MouseWheelY\";\n  /** Mouse Wheel Z */\n\n  NativePointerInput[NativePointerInput[\"MouseWheelZ\"] = 9] = \"MouseWheelZ\";\n  /** Delta X */\n\n  NativePointerInput[NativePointerInput[\"DeltaHorizontal\"] = 10] = \"DeltaHorizontal\";\n  /** Delta Y */\n\n  NativePointerInput[NativePointerInput[\"DeltaVertical\"] = 11] = \"DeltaVertical\";\n})(NativePointerInput || (exports.NativePointerInput = NativePointerInput = {}));\n/**\n * Enum for Dual Shock Gamepad\n */\n\n\nvar DualShockInput;\nexports.DualShockInput = DualShockInput;\n\n(function (DualShockInput) {\n  /** Cross */\n  DualShockInput[DualShockInput[\"Cross\"] = 0] = \"Cross\";\n  /** Circle */\n\n  DualShockInput[DualShockInput[\"Circle\"] = 1] = \"Circle\";\n  /** Square */\n\n  DualShockInput[DualShockInput[\"Square\"] = 2] = \"Square\";\n  /** Triangle */\n\n  DualShockInput[DualShockInput[\"Triangle\"] = 3] = \"Triangle\";\n  /** L1 */\n\n  DualShockInput[DualShockInput[\"L1\"] = 4] = \"L1\";\n  /** R1 */\n\n  DualShockInput[DualShockInput[\"R1\"] = 5] = \"R1\";\n  /** L2 */\n\n  DualShockInput[DualShockInput[\"L2\"] = 6] = \"L2\";\n  /** R2 */\n\n  DualShockInput[DualShockInput[\"R2\"] = 7] = \"R2\";\n  /** Share */\n\n  DualShockInput[DualShockInput[\"Share\"] = 8] = \"Share\";\n  /** Options */\n\n  DualShockInput[DualShockInput[\"Options\"] = 9] = \"Options\";\n  /** L3 */\n\n  DualShockInput[DualShockInput[\"L3\"] = 10] = \"L3\";\n  /** R3 */\n\n  DualShockInput[DualShockInput[\"R3\"] = 11] = \"R3\";\n  /** DPadUp */\n\n  DualShockInput[DualShockInput[\"DPadUp\"] = 12] = \"DPadUp\";\n  /** DPadDown */\n\n  DualShockInput[DualShockInput[\"DPadDown\"] = 13] = \"DPadDown\";\n  /** DPadLeft */\n\n  DualShockInput[DualShockInput[\"DPadLeft\"] = 14] = \"DPadLeft\";\n  /** DRight */\n\n  DualShockInput[DualShockInput[\"DPadRight\"] = 15] = \"DPadRight\";\n  /** Home */\n\n  DualShockInput[DualShockInput[\"Home\"] = 16] = \"Home\";\n  /** TouchPad */\n\n  DualShockInput[DualShockInput[\"TouchPad\"] = 17] = \"TouchPad\";\n  /** LStickXAxis */\n\n  DualShockInput[DualShockInput[\"LStickXAxis\"] = 18] = \"LStickXAxis\";\n  /** LStickYAxis */\n\n  DualShockInput[DualShockInput[\"LStickYAxis\"] = 19] = \"LStickYAxis\";\n  /** RStickXAxis */\n\n  DualShockInput[DualShockInput[\"RStickXAxis\"] = 20] = \"RStickXAxis\";\n  /** RStickYAxis */\n\n  DualShockInput[DualShockInput[\"RStickYAxis\"] = 21] = \"RStickYAxis\";\n})(DualShockInput || (exports.DualShockInput = DualShockInput = {}));\n/**\n * Enum for Dual Sense Gamepad\n */\n\n\nvar DualSenseInput;\nexports.DualSenseInput = DualSenseInput;\n\n(function (DualSenseInput) {\n  /** Cross */\n  DualSenseInput[DualSenseInput[\"Cross\"] = 0] = \"Cross\";\n  /** Circle */\n\n  DualSenseInput[DualSenseInput[\"Circle\"] = 1] = \"Circle\";\n  /** Square */\n\n  DualSenseInput[DualSenseInput[\"Square\"] = 2] = \"Square\";\n  /** Triangle */\n\n  DualSenseInput[DualSenseInput[\"Triangle\"] = 3] = \"Triangle\";\n  /** L1 */\n\n  DualSenseInput[DualSenseInput[\"L1\"] = 4] = \"L1\";\n  /** R1 */\n\n  DualSenseInput[DualSenseInput[\"R1\"] = 5] = \"R1\";\n  /** L2 */\n\n  DualSenseInput[DualSenseInput[\"L2\"] = 6] = \"L2\";\n  /** R2 */\n\n  DualSenseInput[DualSenseInput[\"R2\"] = 7] = \"R2\";\n  /** Create */\n\n  DualSenseInput[DualSenseInput[\"Create\"] = 8] = \"Create\";\n  /** Options */\n\n  DualSenseInput[DualSenseInput[\"Options\"] = 9] = \"Options\";\n  /** L3 */\n\n  DualSenseInput[DualSenseInput[\"L3\"] = 10] = \"L3\";\n  /** R3 */\n\n  DualSenseInput[DualSenseInput[\"R3\"] = 11] = \"R3\";\n  /** DPadUp */\n\n  DualSenseInput[DualSenseInput[\"DPadUp\"] = 12] = \"DPadUp\";\n  /** DPadDown */\n\n  DualSenseInput[DualSenseInput[\"DPadDown\"] = 13] = \"DPadDown\";\n  /** DPadLeft */\n\n  DualSenseInput[DualSenseInput[\"DPadLeft\"] = 14] = \"DPadLeft\";\n  /** DRight */\n\n  DualSenseInput[DualSenseInput[\"DPadRight\"] = 15] = \"DPadRight\";\n  /** Home */\n\n  DualSenseInput[DualSenseInput[\"Home\"] = 16] = \"Home\";\n  /** TouchPad */\n\n  DualSenseInput[DualSenseInput[\"TouchPad\"] = 17] = \"TouchPad\";\n  /** LStickXAxis */\n\n  DualSenseInput[DualSenseInput[\"LStickXAxis\"] = 18] = \"LStickXAxis\";\n  /** LStickYAxis */\n\n  DualSenseInput[DualSenseInput[\"LStickYAxis\"] = 19] = \"LStickYAxis\";\n  /** RStickXAxis */\n\n  DualSenseInput[DualSenseInput[\"RStickXAxis\"] = 20] = \"RStickXAxis\";\n  /** RStickYAxis */\n\n  DualSenseInput[DualSenseInput[\"RStickYAxis\"] = 21] = \"RStickYAxis\";\n})(DualSenseInput || (exports.DualSenseInput = DualSenseInput = {}));\n/**\n * Enum for Xbox Gamepad\n */\n\n\nvar XboxInput;\nexports.XboxInput = XboxInput;\n\n(function (XboxInput) {\n  /** A */\n  XboxInput[XboxInput[\"A\"] = 0] = \"A\";\n  /** B */\n\n  XboxInput[XboxInput[\"B\"] = 1] = \"B\";\n  /** X */\n\n  XboxInput[XboxInput[\"X\"] = 2] = \"X\";\n  /** Y */\n\n  XboxInput[XboxInput[\"Y\"] = 3] = \"Y\";\n  /** LB */\n\n  XboxInput[XboxInput[\"LB\"] = 4] = \"LB\";\n  /** RB */\n\n  XboxInput[XboxInput[\"RB\"] = 5] = \"RB\";\n  /** LT */\n\n  XboxInput[XboxInput[\"LT\"] = 6] = \"LT\";\n  /** RT */\n\n  XboxInput[XboxInput[\"RT\"] = 7] = \"RT\";\n  /** Back */\n\n  XboxInput[XboxInput[\"Back\"] = 8] = \"Back\";\n  /** Start */\n\n  XboxInput[XboxInput[\"Start\"] = 9] = \"Start\";\n  /** LS */\n\n  XboxInput[XboxInput[\"LS\"] = 10] = \"LS\";\n  /** RS */\n\n  XboxInput[XboxInput[\"RS\"] = 11] = \"RS\";\n  /** DPadUp */\n\n  XboxInput[XboxInput[\"DPadUp\"] = 12] = \"DPadUp\";\n  /** DPadDown */\n\n  XboxInput[XboxInput[\"DPadDown\"] = 13] = \"DPadDown\";\n  /** DPadLeft */\n\n  XboxInput[XboxInput[\"DPadLeft\"] = 14] = \"DPadLeft\";\n  /** DRight */\n\n  XboxInput[XboxInput[\"DPadRight\"] = 15] = \"DPadRight\";\n  /** Home */\n\n  XboxInput[XboxInput[\"Home\"] = 16] = \"Home\";\n  /** LStickXAxis */\n\n  XboxInput[XboxInput[\"LStickXAxis\"] = 17] = \"LStickXAxis\";\n  /** LStickYAxis */\n\n  XboxInput[XboxInput[\"LStickYAxis\"] = 18] = \"LStickYAxis\";\n  /** RStickXAxis */\n\n  XboxInput[XboxInput[\"RStickXAxis\"] = 19] = \"RStickXAxis\";\n  /** RStickYAxis */\n\n  XboxInput[XboxInput[\"RStickYAxis\"] = 20] = \"RStickYAxis\";\n})(XboxInput || (exports.XboxInput = XboxInput = {}));\n/**\n * Enum for Switch (Pro/JoyCon L+R) Gamepad\n */\n\n\nvar SwitchInput;\nexports.SwitchInput = SwitchInput;\n\n(function (SwitchInput) {\n  /** B */\n  SwitchInput[SwitchInput[\"B\"] = 0] = \"B\";\n  /** A */\n\n  SwitchInput[SwitchInput[\"A\"] = 1] = \"A\";\n  /** Y */\n\n  SwitchInput[SwitchInput[\"Y\"] = 2] = \"Y\";\n  /** X */\n\n  SwitchInput[SwitchInput[\"X\"] = 3] = \"X\";\n  /** L */\n\n  SwitchInput[SwitchInput[\"L\"] = 4] = \"L\";\n  /** R */\n\n  SwitchInput[SwitchInput[\"R\"] = 5] = \"R\";\n  /** ZL */\n\n  SwitchInput[SwitchInput[\"ZL\"] = 6] = \"ZL\";\n  /** ZR */\n\n  SwitchInput[SwitchInput[\"ZR\"] = 7] = \"ZR\";\n  /** Minus */\n\n  SwitchInput[SwitchInput[\"Minus\"] = 8] = \"Minus\";\n  /** Plus */\n\n  SwitchInput[SwitchInput[\"Plus\"] = 9] = \"Plus\";\n  /** LS */\n\n  SwitchInput[SwitchInput[\"LS\"] = 10] = \"LS\";\n  /** RS */\n\n  SwitchInput[SwitchInput[\"RS\"] = 11] = \"RS\";\n  /** DPadUp */\n\n  SwitchInput[SwitchInput[\"DPadUp\"] = 12] = \"DPadUp\";\n  /** DPadDown */\n\n  SwitchInput[SwitchInput[\"DPadDown\"] = 13] = \"DPadDown\";\n  /** DPadLeft */\n\n  SwitchInput[SwitchInput[\"DPadLeft\"] = 14] = \"DPadLeft\";\n  /** DRight */\n\n  SwitchInput[SwitchInput[\"DPadRight\"] = 15] = \"DPadRight\";\n  /** Home */\n\n  SwitchInput[SwitchInput[\"Home\"] = 16] = \"Home\";\n  /** Capture */\n\n  SwitchInput[SwitchInput[\"Capture\"] = 17] = \"Capture\";\n  /** LStickXAxis */\n\n  SwitchInput[SwitchInput[\"LStickXAxis\"] = 18] = \"LStickXAxis\";\n  /** LStickYAxis */\n\n  SwitchInput[SwitchInput[\"LStickYAxis\"] = 19] = \"LStickYAxis\";\n  /** RStickXAxis */\n\n  SwitchInput[SwitchInput[\"RStickXAxis\"] = 20] = \"RStickXAxis\";\n  /** RStickYAxis */\n\n  SwitchInput[SwitchInput[\"RStickYAxis\"] = 21] = \"RStickYAxis\";\n})(SwitchInput || (exports.SwitchInput = SwitchInput = {}));\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","SwitchInput","XboxInput","DualSenseInput","DualShockInput","NativePointerInput","PointerInput","DeviceType"]
}
