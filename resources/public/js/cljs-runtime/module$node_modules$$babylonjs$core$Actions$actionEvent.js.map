{
"version":3,
"file":"module$node_modules$$babylonjs$core$Actions$actionEvent.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,WAAR,CAAsB,IAAK,EAK3B,MAAMA,YAAN,CAUEC,WAAW,CAEXC,MAFW,CAIXC,QAJW,CAMXC,QANW,CAQXC,gBARW,CAUXC,WAVW,CAYXC,cAZW,CAYK,CACd,IAAKL,CAAAA,MAAL,CAAcA,MACd,KAAKC,CAAAA,QAAL,CAAgBA,QAChB,KAAKC,CAAAA,QAAL,CAAgBA,QAChB,KAAKC,CAAAA,gBAAL,CAAwBA,gBACxB,KAAKC,CAAAA,WAAL,CAAmBA,WACnB,KAAKC,CAAAA,cAAL,CAAsBA,cANR,CAiBTC,gBAAS,CAACN,MAAD,CAASO,GAAT,CAAcF,cAAd,CAA8B,CAC5C,MAAMG;AAAQR,MAAOS,CAAAA,QAAP,EACd,OAAO,KAAIX,WAAJ,CAAgBE,MAAhB,CAAwBQ,KAAMP,CAAAA,QAA9B,CAAwCO,KAAMN,CAAAA,QAA9C,CAAwDM,KAAML,CAAAA,gBAA9D,EAAkFH,MAAlF,CAA0FO,GAA1F,CAA+FF,cAA/F,CAFqC,CAcvCK,0BAAmB,CAACV,MAAD,CAASQ,KAAT,CAAgBD,GAAhB,CAAqBF,cAArB,CAAqC,CAC7D,MAAO,KAAIP,WAAJ,CAAgBE,MAAhB,CAAwBQ,KAAMP,CAAAA,QAA9B,CAAwCO,KAAMN,CAAAA,QAA9C,CAAwDM,KAAML,CAAAA,gBAA9D,CAAgFI,GAAhF,CAAqFF,cAArF,CADsD,CAWxDM,yBAAkB,CAACH,KAAD,CAAQD,GAAR,CAAa,CACpC,MAAO,KAAIT,WAAJ,CAAgB,IAAhB,CAAsBU,KAAMP,CAAAA,QAA5B,CAAsCO,KAAMN,CAAAA,QAA5C,CAAsDM,KAAML,CAAAA,gBAA5D,CAA8EI,GAA9E,CAD6B,CAa/BK,6BAAsB,CAACC,IAAD,CAAOC,UAAP,CAAmBP,GAAnB,CAAwBF,cAAxB,CAAwC,CACnE,MAAO,KAAIP,WAAJ,CAAgBe,IAAhB;AAAsBC,UAAWC,CAAAA,CAAjC,CAAoCD,UAAWE,CAAAA,CAA/C,CAAkD,IAAlD,CAAwDT,GAAxD,CAA6DF,cAA7D,CAD4D,CA7EvE,CAmFAX,OAAQI,CAAAA,WAAR,CAAsBA,WA9F8F;",
"sources":["node_modules/@babylonjs/core/Actions/actionEvent.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$babylonjs$core$Actions$actionEvent\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActionEvent = void 0;\n\n/**\n * ActionEvent is the event being sent when an action is triggered.\n */\nclass ActionEvent {\n  /**\n   * Creates a new ActionEvent\n   * @param source The mesh or sprite that triggered the action\n   * @param pointerX The X mouse cursor position at the time of the event\n   * @param pointerY The Y mouse cursor position at the time of the event\n   * @param meshUnderPointer The mesh that is currently pointed at (can be null)\n   * @param sourceEvent the original (browser) event that triggered the ActionEvent\n   * @param additionalData additional data for the event\n   */\n  constructor(\n  /** The mesh or sprite that triggered the action */\n  source,\n  /** The X mouse cursor position at the time of the event */\n  pointerX,\n  /** The Y mouse cursor position at the time of the event */\n  pointerY,\n  /** The mesh that is currently pointed at (can be null) */\n  meshUnderPointer,\n  /** the original (browser) event that triggered the ActionEvent */\n  sourceEvent,\n  /** additional data for the event */\n  additionalData) {\n    this.source = source;\n    this.pointerX = pointerX;\n    this.pointerY = pointerY;\n    this.meshUnderPointer = meshUnderPointer;\n    this.sourceEvent = sourceEvent;\n    this.additionalData = additionalData;\n  }\n  /**\n   * Helper function to auto-create an ActionEvent from a source mesh.\n   * @param source The source mesh that triggered the event\n   * @param evt The original (browser) event\n   * @param additionalData additional data for the event\n   * @returns the new ActionEvent\n   */\n\n\n  static CreateNew(source, evt, additionalData) {\n    const scene = source.getScene();\n    return new ActionEvent(source, scene.pointerX, scene.pointerY, scene.meshUnderPointer || source, evt, additionalData);\n  }\n  /**\n   * Helper function to auto-create an ActionEvent from a source sprite\n   * @param source The source sprite that triggered the event\n   * @param scene Scene associated with the sprite\n   * @param evt The original (browser) event\n   * @param additionalData additional data for the event\n   * @returns the new ActionEvent\n   */\n\n\n  static CreateNewFromSprite(source, scene, evt, additionalData) {\n    return new ActionEvent(source, scene.pointerX, scene.pointerY, scene.meshUnderPointer, evt, additionalData);\n  }\n  /**\n   * Helper function to auto-create an ActionEvent from a scene. If triggered by a mesh use ActionEvent.CreateNew\n   * @param scene the scene where the event occurred\n   * @param evt The original (browser) event\n   * @returns the new ActionEvent\n   */\n\n\n  static CreateNewFromScene(scene, evt) {\n    return new ActionEvent(null, scene.pointerX, scene.pointerY, scene.meshUnderPointer, evt);\n  }\n  /**\n   * Helper function to auto-create an ActionEvent from a primitive\n   * @param prim defines the target primitive\n   * @param pointerPos defines the pointer position\n   * @param evt The original (browser) event\n   * @param additionalData additional data for the event\n   * @returns the new ActionEvent\n   */\n\n\n  static CreateNewFromPrimitive(prim, pointerPos, evt, additionalData) {\n    return new ActionEvent(prim, pointerPos.x, pointerPos.y, null, evt, additionalData);\n  }\n\n}\n\nexports.ActionEvent = ActionEvent;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","ActionEvent","constructor","source","pointerX","pointerY","meshUnderPointer","sourceEvent","additionalData","CreateNew","evt","scene","getScene","CreateNewFromSprite","CreateNewFromScene","CreateNewFromPrimitive","prim","pointerPos","x","y"]
}
