shadow$provide.module$node_modules$$babylonjs$core$Shaders$ShadersInclude$fogFragmentDeclaration=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.fogFragmentDeclaration=void 0;require("module$node_modules$$babylonjs$core$Engines$shaderStore").ShaderStore.IncludesShadersStore.fogFragmentDeclaration="#ifdef FOG\n#define FOGMODE_NONE 0.\n#define FOGMODE_EXP 1.\n#define FOGMODE_EXP2 2.\n#define FOGMODE_LINEAR 3.\n#define E 2.71828\nuniform vec4 vFogInfos;\nuniform vec3 vFogColor;\nvarying vec3 vFogDistance;\nfloat CalcFogFactor()\n{\nfloat fogCoeff\x3d1.0;\nfloat fogStart\x3dvFogInfos.y;\nfloat fogEnd\x3dvFogInfos.z;\nfloat fogDensity\x3dvFogInfos.w;\nfloat fogDistance\x3dlength(vFogDistance);\nif (FOGMODE_LINEAR\x3d\x3dvFogInfos.x)\n{\nfogCoeff\x3d(fogEnd-fogDistance)/(fogEnd-fogStart);\n}\nelse if (FOGMODE_EXP\x3d\x3dvFogInfos.x)\n{\nfogCoeff\x3d1.0/pow(E,fogDistance*fogDensity);\n}\nelse if (FOGMODE_EXP2\x3d\x3dvFogInfos.x)\n{\nfogCoeff\x3d1.0/pow(E,fogDistance*fogDistance*fogDensity*fogDensity);\n}\nreturn clamp(fogCoeff,0.0,1.0);\n}\n#endif\n";
exports.fogFragmentDeclaration={name:"fogFragmentDeclaration",shader:"#ifdef FOG\n#define FOGMODE_NONE 0.\n#define FOGMODE_EXP 1.\n#define FOGMODE_EXP2 2.\n#define FOGMODE_LINEAR 3.\n#define E 2.71828\nuniform vec4 vFogInfos;\nuniform vec3 vFogColor;\nvarying vec3 vFogDistance;\nfloat CalcFogFactor()\n{\nfloat fogCoeff\x3d1.0;\nfloat fogStart\x3dvFogInfos.y;\nfloat fogEnd\x3dvFogInfos.z;\nfloat fogDensity\x3dvFogInfos.w;\nfloat fogDistance\x3dlength(vFogDistance);\nif (FOGMODE_LINEAR\x3d\x3dvFogInfos.x)\n{\nfogCoeff\x3d(fogEnd-fogDistance)/(fogEnd-fogStart);\n}\nelse if (FOGMODE_EXP\x3d\x3dvFogInfos.x)\n{\nfogCoeff\x3d1.0/pow(E,fogDistance*fogDensity);\n}\nelse if (FOGMODE_EXP2\x3d\x3dvFogInfos.x)\n{\nfogCoeff\x3d1.0/pow(E,fogDistance*fogDistance*fogDensity*fogDensity);\n}\nreturn clamp(fogCoeff,0.0,1.0);\n}\n#endif\n"}}
//# sourceMappingURL=module$node_modules$$babylonjs$core$Shaders$ShadersInclude$fogFragmentDeclaration.js.map
